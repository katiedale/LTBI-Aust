
#install.packages("swirl")
#install.packages("dplyr")
#install.packages("ggplot2")
#install.packages ("quantmod")
#install.packages ("sm")
#install.packages("countrycode")
#install.packages("stringr")
#install.packages("reshape2")
#install.packages("zoo")
#install.packages("data.table")
#install.packages("plyr")
#install.packages("plotrix")
#install.packages("RColorBrewer")
#install.packages("rgdal")
#install.packages("spdplyr")
#install.packages("geojsonio")
#install.packages("rmapshaper")
#install.packages("viridis")
#install.packages("grid")
#install.packages("gridExtra")
#install.packages("tables")


library(rgdal)
library(spdplyr)
library(geojsonio)
library(rmapshaper)
library(RColorBrewer)
library(viridis)
library(grid)
library(gridExtra)
library(tables)

#Reading in Australia-wide risk data
#Austrisk06cc <- read.csv("H:\\Katie\\PhD\\ABS data\\Australia 2006\\Austrisk06.csv",header=T)
#Austrisk11 <- read.csv("H:\\Katie\\PhD\\ABS data\\Australia 2011\\Austrisk11.csv",header=T)
#Austrisk16 <- read.csv("H:\\Katie\\PhD\\ABS data\\Australia 2016\\Austrisk16.csv",header=T)

#Reading in the dataset showing those that have recently acquired infection
#recent <- read.csv("H:\\Katie\\PhD\\ABS data\\Australia 2016\\recent.csv",header=T)

#Tidy dataframes and put them into lists
Austborn06$yoa<-NA
Austborn11$yoa<-NA
Austborn16$yoa<-NA
Austborn06<-Austborn06[,c(1,2,5007,3:5006)]
Austborn11<-Austborn11[,c(1,2,5007,3:5006)]
Austborn16<-Austborn16[,c(1,2,5007,3:5006)]

Ab5k <- list("Ab06"<-Austborn06,"Ab11"<-Austborn11,"Ab16"<-Austborn16)
A5k <- list("Ax06"<-Aust06ex,"Ax11"<-Aust11ex,"Ax16"<-Aust16ex)
rm(Ab06)
rm(Ab11)
rm(Ab16)
rm(Ax06)
rm(Ax11)
rm(Ax16)

rm(Austborn06,Austborn11,Austborn16,Aust06ex,Aust11ex,Aust16ex)

Ab5k<-lapply(Ab5k, function(df) {
  DT<-as.data.table(df)
  DT[, "id":=NULL]
  DT
}) 

A5k<-lapply(A5k, function(df) {
  DT<-as.data.table(df)
  DT[, "id":=NULL]
  DT[DT$iso3 == "GBR","cob":="Great Britain"]
  DT[DT$iso3 == "CHN","cob":="China"]
  DT[DT$iso3 == "PHL","cob":="Philippines"]
  DT[DT$iso3 == "ZAF","cob":="South Africa"]
  DT[DT$iso3 == "NZL","cob":="New Zealand"]
  DT[DT$iso3 == "SDN","cob":="Sudan"]
  DT[DT$iso3 == "IND","cob":="India"]
  DT[DT$iso3 == "ZAF","cob":="South Africa"]
  DT[DT$iso3 == "MYS","cob":="Malaysia"]
  DT[DT$iso3 == "SOM","cob":="Philippines"]
  DT[DT$iso3 == "SOM","cob":="Vietnam"]
  DT[DT$iso3 == "SOM","cob":="Somalia"]
  DT[DT$iso3 == "RUS","cob":="Russian Federation"]
  DT[DT$iso3 == "COD","cob":="Democratic Republic of Congo"]
  DT[DT$iso3 == "THA","cob":="Thailand"]
  DT[DT$iso3 == "PNG","cob":="Papua New Guinea"]
  DT[DT$iso3 == "HKG","cob":="Hong Kong"]
  DT[DT$iso3 == "LKA","cob":="Sri Lanka"]
  DT[DT$iso3 == "KOR","cob":="South Korea"]
  DT
}) 

A200 <- list("A06"<-Aust06,"A11"<-Aust11,"A16"<-Aust16)
rm(A06)
rm(A11)
rm(A16)

rm(Aust06,Aust11,Aust16)

A200<-lapply(A200, function(df) {
  DT<-as.data.table(df)
  DT[, "id":=NULL]
  DT[DT$iso3 == "GBR","cob":="Great Britain"]
  DT[DT$iso3 == "CHN","cob":="China"]
  DT[DT$iso3 == "PHL","cob":="Philippines"]
  DT[DT$iso3 == "ZAF","cob":="South Africa"]
  DT[DT$iso3 == "NZL","cob":="New Zealand"]
  DT[DT$iso3 == "SDN","cob":="Sudan"]
  DT[DT$iso3 == "IND","cob":="India"]
  DT[DT$iso3 == "ZAF","cob":="South Africa"]
  DT[DT$iso3 == "MYS","cob":="Malaysia"]
  DT[DT$iso3 == "SOM","cob":="Philippines"]
  DT[DT$iso3 == "SOM","cob":="Vietnam"]
  DT[DT$iso3 == "SOM","cob":="Somalia"]
  DT[DT$iso3 == "RUS","cob":="Russian Federation"]
  DT[DT$iso3 == "COD","cob":="Democratic Republic of Congo"]
  DT[DT$iso3 == "THA","cob":="Thailand"]
  DT[DT$iso3 == "PNG","cob":="Papua New Guinea"]
  DT[DT$iso3 == "HKG","cob":="Hong Kong"]
  DT[DT$iso3 == "LKA","cob":="Sri Lanka"]
  DT[DT$iso3 == "KOR","cob":="South Korea"]
  DT
}) 

# Turn the LTBI risks into the numbers with LTBI
A5k<-lapply(A5k, function(DT) {
  DT[ , (7:5006) :=lapply(.SD, "*", DT$pop), .SDcols =c(7:5006)]
  DT
})
Ab5k<-lapply(Ab5k, function(DT) {
  DT[ , (7:5006) :=lapply(.SD, "*", DT$pop), .SDcols =c(7:5006)]
  DT
})
A200<-lapply(A200, function(DT) {
  DT[ , (7:206) :=lapply(.SD, "*", DT$pop), .SDcols =c(7:206)]
  DT
})




#End of Data PREP




##Number with LTBI Australia
#Figure 1
#column analysis - possible by multiplying the 200 replicates by 25 to get 5000
Asum200<-lapply(A200, function(DT) {
  colsum<-colSums(DT[,7:206])
  colsum<-as.data.frame(colsum)
  colsum<- do.call(rbind, replicate(25, colsum, simplify=FALSE))
})

colsumfunc<-function(dt) {
  cols<-colSums(dt[,7:5006])
  cols<-as.data.frame(cols)
}

Absum5k<-lapply(Ab5k, colsumfunc)

Asum5k<-lapply(A5k, function(DT) {
  iso3.split <- split(DT, DT$iso)
  out <- sapply(iso3.split, colsumfunc)
})

Asum5k<-lapply(Asum5k, function(DT) {
  Reduce(`+`, DT)
})

Asum5k<-lapply(Asum5k, as.data.frame)

Asum<-lapply(seq_along(Absum5k),function(i)
  unlist(Absum5k[i])+unlist(Asum5k[i])+unlist(Asum200[i]))
rm(Absum5k,Asum200,Asum5k)
Asum<-lapply(Asum, as.data.frame)
Asum<-rbindlist(Asum, idcol = "year")
Asum$year[Asum$year=="1"]<-"2006"
Asum$year[Asum$year=="2"]<-"2011"
Asum$year[Asum$year=="3"]<-"2016"
Asum<-as.data.frame(Asum)
colnames(Asum)[2] <- "med"


##Percent with LTBI Australia
#Figure 1
#Summing the populations
sumpopA200<-lapply(A200, function(df){
  sumpop<-sum(df$pop)
})
sumpopA5k<-lapply(A5k, function(df){
  sumpop<-sum(df$pop)
})
sumpop<-lapply(seq_along(sumpopA200),function(i)
  unlist(sumpopA200[i])+unlist(sumpopA5k[i]))
sumpop<-lapply(sumpop, as.data.frame)
sumpop<-rbindlist(sumpop, idcol = "year")
sumpop$year[sumpop$year=="1"]<-"2006"
sumpop$year[sumpop$year=="2"]<-"2011"
sumpop$year[sumpop$year=="3"]<-"2016"
sumpop<-as.data.frame(sumpop)
colnames(sumpop)[2] <- "overseasborn"

sumpopAb5k<-lapply(Ab5k, function(df){
  sumpop<-sum(df$pop)
})
sumpop$austborn<-unlist(sumpopAb5k)
sumpop$total<-sumpop$austborn+sumpop$overseasborn

Asum$pop[Asum$year==2006]<-sumpop$total[sumpop$year==2006]
Asum$pop[Asum$year==2011]<-sumpop$total[sumpop$year==2011]
Asum$pop[Asum$year==2016]<-sumpop$total[sumpop$year==2016]
Asum$pct<-(Asum$med/Asum$pop)*100


Asum<-as.data.table(Asum)

twentyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.25))
}

seventyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.75))
}

Asum[,.(med=median(med)),by=year]
# 2006 - 838489
# 2011 - 970583
# 2016 - 1084917
Asum[,.(med=twentyfifth(med)),by=year] 
Asum[,.(med=seventyfifth(med)),by=year] 

Asum[,.(med=median(pct)),by=year]
# 2006 - 4.59%
# 2011 - 4.83%
# 2016 - 5.05%
Asum[,.(twentyfifth=twentyfifth(pct)),by=year] 
#  2006    4.186110
#  2011    4.483750
#  2016    4.747528
Asum[,.(seventyfifth=seventyfifth(pct)),by=year]
#  2006     5.203674
#  2011     5.332256
#  2016     5.466465


#Number of Australian-born with LTBI
#summing down the replicate columns
Absum<-lapply(Ab5k, function(DT){
  DT[, lapply(.SD, sum, na.rm=TRUE), .SDcols=c(7:5006) ] 
})
Absum<-lapply(Absum, function(DT){
  DT<-t(DT)
  as.data.frame(DT)
})
Absum<-rbindlist(Absum, idcol = "year")
Absum$year[Absum$year=="1"]<-"2006"
Absum$year[Absum$year=="2"]<-"2011"
Absum$year[Absum$year=="3"]<-"2016"



Absum$pop[Absum$year==2006]<-sumpop$austborn[sumpop$year==2006]
Absum$pop[Absum$year==2011]<-sumpop$austborn[sumpop$year==2011]
Absum$pop[Absum$year==2016]<-sumpop$austborn[sumpop$year==2016]
Absum$pct<-(Absum$V1/Absum$pop)*100

Absum<-as.data.table(Absum)
colnames(Absum)[2] <- "med"

Absum[,.(med=median(med)),by=year]
# 2006 - 59144.56
# 2011 - 62897.60
# 2016 - 65626.84
Absum[,.(twentyfifth=twentyfifth(med)),by=year] 
# 2006    37198.52
# 2011    43039.11
# 2016    48560.19
Absum[,.(seventyfifth=seventyfifth(med)),by=year] 
# 2006     122717.3
#  2011     118492.0
#  2016     112187.3
Absum[,.(med=median(pct)),by=year]
#  2006 0.4202768
#  2011 0.4187184
#  2016 0.4202660
Absum[,.(twentyfifth=twentyfifth(pct)),by=year] 
#  2006   0.2643299
#  2011   0.2865175
#  2016   0.3109733
Absum[,.(seventyfifth=seventyfifth(pct)),by=year]
#  2006    0.8720202
#  2011    0.7888184
#  2016    0.7184335


##Number of overseas-born with LTBI
#column analysis - possible by multiplying the 200 replicates by 25 to get 5000
Asum200<-lapply(A200, function(DT) {
  colsum<-colSums(DT[,7:206])
  colsum<-as.data.frame(colsum)
  colsum<- do.call(rbind, replicate(25, colsum, simplify=FALSE))
})
colsumfunc<-function(dt) {
  cols<-colSums(dt[,7:5006])
  cols<-as.data.frame(cols)
}
Asum5k<-lapply(A5k, function(DT) {
  iso3.split <- split(DT, DT$iso)
  out <- sapply(iso3.split, colsumfunc)
})
Asum5k<-lapply(Asum5k, function(DT) {
  Reduce(`+`, DT)
})
Asum5k<-lapply(Asum5k, as.data.frame)

Osum<-lapply(seq_along(Asum5k),function(i)
  unlist(Asum5k[i])+unlist(Asum200[i]))
rm(Asum200,Asum5k)
Osum<-lapply(Osum, as.data.frame)
Osum<-rbindlist(Osum, idcol = "year")
Osum$year[Osum$year=="1"]<-"2006"
Osum$year[Osum$year=="2"]<-"2011"
Osum$year[Osum$year=="3"]<-"2016"
colnames(Osum)[2] <- "med"

Osum$pop[Osum$year==2006]<-sumpop$overseasborn[sumpop$year==2006]
Osum$pop[Osum$year==2011]<-sumpop$overseasborn[sumpop$year==2011]
Osum$pop[Osum$year==2016]<-sumpop$overseasborn[sumpop$year==2016]
Osum$pct<-(Osum$med/Osum$pop)*100

twentyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.25))
}

seventyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.75))
}


Osum<-as.data.table(Osum)
Osum[,.(med=median(med)),by=year] 
# 2006 755763.2
# 2011 885526.7
# 2016 998840.5
Osum[,.(twentyfifth=twentyfifth(med)),by=year] 
# 2006 699284.1
# 2011 829097.2
# 2016 943863.4
Osum[,.(seventyfifth=seventyfifth(med)),by=year] 
# 2006  821962.1
# 2011  947454.6
# 2016 1057857.5

Osum[,.(med=median(pct)),by=year]
# 2006 18.01678
# 2011 17.54934
# 2016 17.11042
Osum[,.(twentyfifth=twentyfifth(pct)),by=year]
# 2006 16.67037
# 2011 16.43102
# 2016 16.16865
Osum[,.(seventyfifth=seventyfifth(pct)),by=year] 
# 2006 19.59491
# 2011 18.77663
# 2016 18.12140

#Percentaage of all LTBI that is overseasborn
medO<-Osum[,.(med=median(med)),by=year] 
medO$all<-unlist(medpop)
medO$pcntofall<-(medO$med/medO$all)*100

Osum$allLTBI[Osum$year==2006]<-unlist(medpop[1])
Osum$allLTBI[Osum$year==2011]<-unlist(medpop[2])
Osum$allLTBI[Osum$year==2016]<-unlist(medpop[3])
Osum[, pctallLTBI := (Osum$med/Osum$allLTBI)*100]
Osum[,.(med=median(pctallLTBI)),by=year]
# 2006 90.13393
# 2011 91.31485
# 2016 92.10535
Osum[,.(twentyfifth=twentyfifth(pctallLTBI)),by=year] 
# 2006 83.39811
# 2011 85.49588
# 2016 87.03579
Osum[,.(seventyfifth=seventyfifth(pctallLTBI)),by=year] 
# 2006 98.02895
# 2011 97.70081
# 2016 97.54745

fig1<-Asum
fig1<-as.data.table(fig1)
fig1[, pop :=NULL]
fig1[, group :="All residents"]
fig1ab<-Absum
fig1ab<-as.data.table(fig1ab)
fig1ab[, pop :=NULL]
fig1ab[, group :="Australian-born"]
fig1O<-Osum
fig1O<-as.data.table(fig1O)
fig1O[, pop :=NULL]
fig1O[, allLTBI :=NULL]
fig1O[, pctallLTBI :=NULL]
fig1O[, pop :=NULL]
fig1O[, group :="Overseas-born"]
fig1t<-rbind(fig1,fig1ab,fig1O)
#fig1t <- melt(fig1t, ID=c("year", "group"))




#Figure 1 

plot1<-ggplot(fig1t, aes(x=year, y=med, fill=group)) +
  geom_boxplot(color="black",outlier.shape=NA) + #Fatten=NULL removes median line
  facet_grid( group ~.)+
  labs(x = "Year", y = "Estimated number with LTBI") +
  #geom_jitter(width = 0.2)+
  geom_text(aes(label=group, x = Inf, y = Inf, 
                hjust = 1.5, vjust = 1.5),size=6) +
  #scale_y_continuous(breaks = seq(0, 3000000, 250000),limits= c(0, 1500000))+
  coord_cartesian(ylim = c(0, 1500000))+ #this y lim stops data being cut
  scale_fill_manual(values=c("darkseagreen4","salmon3","steelblue3"),guide=FALSE)+
  #to turn the background white
  theme_bw()+
  theme(text = element_text(size=19),
        strip.background = element_blank(),
        strip.text.y = element_blank())
  #      axis.title.x=element_blank(),
  #      axis.text.x=element_blank())
#geom_errorbar(data=totmed, aes(y=NULL, ymax=df, ymin=df), colour="black")

plot2<- ggplot(fig1t, aes(x=year, y=pct,fill=group)) +
  geom_boxplot(color="black",outlier.shape=NA) + #Fatten=NULL removes median line
  facet_grid( group ~.)+
  labs(x = "Year", y = "Estimated percentage with LTBI") +
  #geom_jitter(width = 0.2)+
  geom_text(aes(label=group, x = Inf, y = Inf, 
                hjust = 1.5, vjust = 1.5),size=6) +
  #scale_y_continuous(breaks = seq(0, 30, 5),limits= c(0, 25))+
  coord_cartesian(ylim = c(0, 25))+ #this y lim stops data being cut
  scale_fill_manual(values=c("darkseagreen4","salmon3","steelblue3"),guide=FALSE)+
  #to turn the background white
  theme_bw()+
  theme(text = element_text(size=19),
        strip.background = element_blank(),
        strip.text.y = element_blank())
#geom_errorbar(data=totmed, aes(y=NULL, ymax=df, ymin=df), colour="black")

grid.arrange(plot1, plot2, ncol=2)


#Figure 1 alternative 2
plot1<-ggplot(fig1t, aes(x=year, y=med, fill=group)) +
  geom_boxplot(color="black",outlier.shape=NA) + #Fatten=NULL removes median line
  facet_grid( ~ group,scales="free_y")+
  labs(x = "Year", y = "Estimated number with LTBI") +
  #geom_jitter(width = 0.2)+
  #scale_y_continuous(breaks = seq(0, 3000000, 250000),limits= c(0, 1500000))+
  coord_cartesian(ylim = c(0, 2000000))+ #this y lim stops data being cut
  scale_fill_manual(values=c("darkseagreen4","salmon3","steelblue3"))+
  #to turn the background white
  theme_bw()+
  theme(text = element_text(size=19),
        axis.title.x=element_blank(),
        axis.text.x=element_blank())
#geom_errorbar(data=totmed, aes(y=NULL, ymax=df, ymin=df), colour="black")

plot2<- ggplot(fig1t, aes(x=year, y=pct,fill=group)) +
  geom_boxplot(color="black",outlier.shape=NA) + #Fatten=NULL removes median line
  facet_grid( ~ group,scales="free_y")+
  labs(x = "Year", y = "Estimated percentage with LTBI") +
  #geom_jitter(width = 0.2)+
  #scale_y_continuous(breaks = seq(0, 30, 5),limits= c(0, 25))+
  coord_cartesian(ylim = c(0, 40))+ #this y lim stops data being cut
  scale_fill_manual(values=c("darkseagreen4","salmon3","steelblue3"))+
  #to turn the background white
  theme_bw()+
  theme(text = element_text(size=19),
        strip.background = element_blank(),
        strip.text.x = element_blank())
#geom_errorbar(data=totmed, aes(y=NULL, ymax=df, ymin=df), colour="black")

gA <- ggplotGrob(plot1)
gB <- ggplotGrob(plot2)
maxWidth = grid::unit.pmax(gA$widths[2:5], gB$widths[2:5])
gA$widths[2:5] <- as.list(maxWidth)
gB$widths[2:5] <- as.list(maxWidth)
grid.arrange(gA, gB, nrow=2)


#New Figure 2
# All overseas, by agegroups, and with the population so percentage is possible!
#AGE GROUP OF TYPICAL LTBI CASE - NUMBER  
#Figure 2
##get the uncertainty by summing by column

#Summing the populations
sumpopA200<-lapply(A200, function(df){
  sumpop<-sum(df$pop)
})
sumpopA5k<-lapply(A5k, function(df){
  sumpop<-sum(df$pop)
})
sumpop<-lapply(seq_along(sumpopA200),function(i)
  unlist(sumpopA200[i])+unlist(sumpopA5k[i]))
sumpop<-lapply(sumpop, as.data.frame)
sumpop<-rbindlist(sumpop, idcol = "year")
sumpop$year[sumpop$year=="1"]<-"2006"
sumpop$year[sumpop$year=="2"]<-"2011"
sumpop$year[sumpop$year=="3"]<-"2016"
sumpop<-as.data.frame(sumpop)
colnames(sumpop)[2] <- "overseasborn"

sumpopAb5k<-lapply(Ab5k, function(df){
  sumpop<-sum(df$pop)
})
sumpop$austborn<-unlist(sumpopAb5k)
sumpop$total<-sumpop$austborn+sumpop$overseasborn




Asum200<-lapply(A200, function(df) {
  df<-df[,c(1,6:206)]
  df$agegroup <- as.character(cut(df$age, breaks=c(-1,14,34,64,115),
                                  labels=c('0-14', '15-34', '35-64', '65+')))
  df
})

Asum200<-lapply(Asum200, function(DT) {
  DT$age<-NULL
  DT<-DT %>%
    group_by(agegroup) %>% # aggregating by agegroup 
    summarise_all(funs(sum))
})

Asum200<-lapply(Asum200, function(df) {
  dfhead<-df[,1:2]
  df<-df[,3:202]
  col<- do.call(cbind, replicate(25, df, simplify=FALSE))
  df<-cbind(dfhead,col)
  Vcolnam <- paste0(c("V"),1:5000)
  colnames(df)[3:5002] <- Vcolnam
  df
})

Asum200<-lapply(Asum200, function(df) {
  df<-melt(df,id=c("agegroup", "pop"))
  df
})


fig2<-lapply(A5k, function(df){
  df<-df[,c(1,6:5006)] 
  df$agegroup <- as.character(cut(df$age, breaks=c(-1,14,34,64,115),
                                  labels=c('0-14', '15-34', '35-64', '65+')))
  df$age<-NULL
  df
})

fig2<-lapply(fig2, function(df){
  df<-df %>%
    group_by(agegroup) %>% # aggregating by agegroup 
    summarise_all(funs(sum))
  df
})

fig2<-lapply(fig2, function(df){
  df<-melt(df,id=c("agegroup", "pop"))
  df
})

fig2<-rbindlist(fig2, idcol = "year")
fig2$year[fig2$year=="1"]<-"2006"
fig2$year[fig2$year=="2"]<-"2011"
fig2$year[fig2$year=="3"]<-"2016"

Asum200<-rbindlist(Asum200, idcol = "year")
Asum200$year[Asum200$year=="1"]<-"2006"
Asum200$year[Asum200$year=="2"]<-"2011"
Asum200$year[Asum200$year=="3"]<-"2016"


fig2<-fig2[order(fig2$year,fig2$agegroup,fig2$variable)]
Asum200<-Asum200[order(Asum200$year,Asum200$agegroup,Asum200$variable)]
fig2<-rbind(Asum200,fig2)
fig2<-fig2 %>%
  group_by(agegroup,year,variable) %>% # aggregating by agegroup 
  summarise_all(funs(sum))
fig2$group<-"Overseas-born"
rm(Asum200)

fig2Ab<-lapply(Ab5k, function(DT) {
  DT<-DT[,c(1,6:5006)]
  DT$agegroup <- as.character(cut(DT$age, breaks=c(-1,14,34,64,115),
                                  labels=c('0-14', '15-34', '35-64', '65+')))
  DT<-DT %>%
    group_by(agegroup) %>% # aggregating by agegroup 
    summarise_all(funs(sum))
  DT$age<-NULL
  DT<-melt(DT,id=c("agegroup", "pop"))
})

fig2Ab<-rbindlist(fig2Ab, idcol = "year")
fig2Ab$year[fig2Ab$year=="1"]<-"2006"
fig2Ab$year[fig2Ab$year=="2"]<-"2011"
fig2Ab$year[fig2Ab$year=="3"]<-"2016"
fig2Ab$group<-"Australian-born"
colnames(fig2)[5] <- "med"
colnames(fig2Ab)[5] <- "med"

fig2Ab<-fig2Ab[,c(2,1,4,3,5,6)]
fig2Ab<-as.data.frame(fig2Ab)
fig2<-as.data.frame(fig2)
fig2<-rbind(fig2,fig2Ab)
rm(fig2Ab)
fig2$pct<-(fig2$med/fig2$pop)*100


plot1<-ggplot(fig2, aes(x = agegroup, y = med, fill=group, width=.7))+
  geom_boxplot(color="black",outlier.shape=NA) + #Fatten=NULL removes median line
  labs(x = "Age group (years)", y = "Estimated number with LTBI",fill="")+
  coord_cartesian(ylim = c(0, 670000))+ #this y lim stops data being cut
    #makes mulitple horizontal planels based on iso3 variable
  facet_grid(group ~ year)+
  # to adjust the fill colours, and fix them
  scale_fill_manual(values=c("salmon3","steelblue3"))+
  theme_bw() +
  #add text titles inside the plots
  #geom_text(aes(label=year, x = Inf, y = Inf, 
  #              hjust = 1.5, vjust = 1.5,fontface="bold" ),size=8) +
  #to eliminate background, gridlines, and chart border
  theme(
    legend.title=element_text(size=10),
    legend.position = c(0.85, 0.85),
    #legend.title=element_text(size=10),
    plot.background = element_blank(),
    axis.title.x=element_blank(),
    axis.text.x=element_blank(),
    axis.ticks.x=element_blank(),
    #strip.background =element_rect(colour="white", 
    #                               fill="white"),
    strip.text.y=element_blank(),
    #panel.grid.minor = element_blank(),
    text = element_text(size=20))#changes the size of text
  #guides(fill = guide_legend(title.hjust = 8))+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))

 #Percent!
  plot2<-ggplot(fig2, aes(x = agegroup, y = pct, fill=group, width=.7))+
    geom_boxplot(color="black",outlier.shape=NA) + #Fatten=NULL removes median line
    #ggtitle("Risk of LTBI amongst Australian-born residents")+
    labs(x = "Age group (years)", y = "Estimated precent with LTBI",fill="")+
    coord_cartesian(ylim = c(0, 40))+ #this y lim stops data being cut
    #makes mulitple horizontal planels based on year and group variables
    facet_grid(group ~ year)+
    # to adjust the fill colours, and fix them
    scale_fill_manual(values=c("salmon3","steelblue3"))+
    theme_bw() +
    #add text titles inside the plots
    #geom_text(aes(label=year, x = Inf, y = Inf, 
    #              hjust = 1.5, vjust = 1.5,fontface="bold" ),size=8) +
    #to eliminate background, gridlines, and chart border
    theme(
      legend.position = "none",
      #legend.position = c(0.85, 0.85),
      #legend.title=element_text(size=10),
      plot.background = element_blank(),
      #panel.grid.major = element_blank(),
      #strip.background =element_rect(colour="white", 
      #                               fill="white"),
      strip.text=element_blank(),
      text = element_text(size=20))#changes the size of text
  #panel.grid.minor = element_blank())+
  #guides(fill = guide_legend(title.hjust = 8))+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))
  
  options(scipen=5)
  dev.off()
  
gA <- ggplotGrob(plot1)
  gB <- ggplotGrob(plot2)
  maxWidth = grid::unit.pmax(gA$widths[2:5], gB$widths[2:5])
  gA$widths[2:5] <- as.list(maxWidth)
  gB$widths[2:5] <- as.list(maxWidth)
  grid.arrange(gA, gB, nrow=2)
  
 
  ggplot(fig2, aes(x = agegroup, y = pop, fill=group, width=.7))+
    geom_bar(stat="identity") + #Fatten=NULL removes median line
    #ggtitle("Risk of LTBI amongst Australian-born residents")+
    labs(x = "Age group (years)", y = "Estimated precent with LTBI",fill="")+
    #coord_cartesian(ylim = c(0, 40))+ #this y lim stops data being cut
    #makes mulitple horizontal planels based on year and group variables
    facet_grid(group ~ year)+
    # to adjust the fill colours, and fix them
    scale_fill_manual(values=c("salmon3","steelblue3"))+
    theme_bw() +
    #add text titles inside the plots
    #geom_text(aes(label=year, x = Inf, y = Inf, 
    #              hjust = 1.5, vjust = 1.5,fontface="bold" ),size=8) +
    #to eliminate background, gridlines, and chart border
    theme(
      legend.position = "none",
      #legend.position = c(0.85, 0.85),
      #legend.title=element_text(size=10),
      plot.background = element_blank(),
      #panel.grid.major = element_blank(),
      #strip.background =element_rect(colour="white", 
      #                               fill="white"),
      strip.text=element_blank(),
      text = element_text(size=20))#changes the size of text
  #panel.grid.minor = element_blank())+
  #guides(fill = guide_legend(title.hjust = 8))+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))
  
  
  
  
twentyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.25))
}

seventyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.75))
}

#Overseasborn agegroup data - see Excel file LTBI prev for table of results
fig2<-as.data.table(fig2)
mednum<-fig2[,.(mednum=median(med)),by=c("group","agegroup","year","pop")]
num25<-fig2[,.(twentyfifth=twentyfifth(med)),by=c("group","agegroup","year","pop")]
num75<-fig2[,.(seventyfifth=seventyfifth(med)),by=c("group","agegroup","year","pop")]
medpct<-fig2[,.(medpct=median(pct)),by=c("group","agegroup","year","pop")]
pcnt25<-fig2[,.(twentyfifth=twentyfifth(pct)),by=c("group","agegroup","year","pop")]
pcnt75<-fig2[,.(seventyfifth=seventyfifth(pct)),by=c("group","agegroup","year","pop")]
fig2data<-cbind(mednum,num25[,5],num75[,5],medpct[,5],pcnt25[,5],pcnt75[,5])
rm(pcnt75,pcnt25,medpct,num25, num75,mednum)
  
  check<-fig2[fig2$group=="Overseas-born"&fig2$agegroup=="35-64",]
  
fig2[,.(mednum=median(med)),by=c("group","agegroup","year","pop")]



dev.off()
ggplot(check, aes(x = year, y = med, width=.7))+
  geom_boxplot(color="black",outlier.shape=NA) + #Fatten=NULL removes median line
  #ggtitle("Risk of LTBI amongst Australian-born residents")+
  labs(x = "Age group (years)", y = "Estimated number with LTBI",fill="")+
  #scale_y_continuous(breaks = seq(0, 450000, 100000),limits= c(0, 450000))+
  #scale_x_continuous(breaks = seq(0, 110, 10))+
  #makes mulitple horizontal planels based on iso3 variable
  #facet_grid(group ~ year)+
  # to adjust the fill colours, and fix them
  #scale_fill_brewer()+
  scale_fill_manual(values=c("salmon3","steelblue3"))+
  theme_bw() +
  #add text titles inside the plots
  #geom_text(aes(label=year, x = Inf, y = Inf, 
  #              hjust = 1.5, vjust = 1.5,fontface="bold" ),size=8) +
  #to eliminate background, gridlines, and chart border
  theme(
    legend.position = c(0.85, 0.85),
    legend.title=element_text(size=10),
    plot.background = element_blank(),
    #panel.grid.major = element_blank(),
    #strip.background =element_rect(colour="white", 
    #                               fill="white"),
    #strip.text=element_blank(),
    text = element_text(size=20))#changes the size of text
#panel.grid.minor = element_blank())+
#guides(fill = guide_legend(title.hjust = 8))+
#to draw x and y axis line
theme(axis.line = element_line(color = 'black'))


check[,.(mednum=median(med)),by=c("group","agegroup","year","pop")]











#Number of Australian-born with LTBI by age
#Figure S1
Ab16<-Ab5k[[3]]
Ab16$med<-apply(Ab16[,7:5006], 1, median)
Ab16<-Ab16[,c(1,6,5007)]
Ab16<-Ab16 %>%
  group_by(age) %>% # aggregating by iso3 
  summarise_all(funs(sum))
Ab16$med<-Ab16$med/Ab16$pop
Ab16$medg <- as.character(cut(Ab16$med, 
                              breaks=c(0.00001,0.0001,
                                       0.001,0.005,0.01,0.1),
                              labels=c('<0.0001', '0.00011-0.001',  
                                       '0.0011-0.005','0.0051-0.01',
                                       '0.011-0.1')))


dev.off() 
ggplot(Ab16,aes(x = age, y = pop, 
                fill=medg))+ 
  geom_bar(stat="identity",width=0.8)+
  #moves the points slightly so they don't seem to be in lines
  #position = position_jitter(w = 0.3, h = 0.3))+
  #makes mulitple horizontal planels based on iso3 variable
  #facet_grid(cob~.)+
  #ggtitle("Risk of LTBI and age and year of arrival among 2016 Australian residents born overseas") +
  labs(x = "Age (years)", y = "Population")+
  scale_y_continuous(breaks = seq(0, 270000, 50000), limits = c(0, 270000))+
  scale_x_continuous(breaks = seq(0, 115, 10))+
  scale_fill_manual(name="Median risk of LTBI", 
                    values=c("gray90", "gray80", "gray70", "gray45", "gray30"))+
  #to turn the background white
  theme_bw() +
  #add text titles inside the plots
  #geom_text(aes(label=cob, x = Inf, y = Inf,
  #              hjust = 1.5, vjust = 1.5),size=8) +
  #to eliminate background, gridlines, and chart border
  theme(
    legend.title=element_text(size=22),
    plot.background = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    strip.background =element_rect(colour="white", 
                                   fill="white"),
    strip.text=element_blank())+
  #+legend.position="bottom")+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))+
  theme(text = element_text(size=25))



#Figure S2
Ab16<-Ab5k[[3]]
Ab16$med<-apply(Ab16[,7:5006], 1, median)
Ab16<-Ab16[,c(1,2,3,4,5,6,5007)]
Ab16$noltbi<-Ab16$pop-Ab16$med
Ab16<-Ab16[,c(1,7:8)]
Ab16<-Ab16 %>%
  group_by(age) %>% # aggregating by iso3 
  summarise_all(funs(sum))

Ab16<-melt(Ab16,id.vars = c("age"), 
           measure.vars = c("med", "noltbi"))
colnames(Ab16)[2] <- "LTBI"
levels(Ab16$LTBI) <- c("with LTBI", "without LTBI")

dev.off() 
ggplot(Ab16,aes(x = age, y = value, 
                fill=factor(LTBI, 
                            levels=c("without LTBI","with LTBI")), 
                width=0.7))+ 
  geom_bar(stat="identity")+
  #moves the points slightly so they don't seem to be in lines
  #position = position_jitter(w = 0.3, h = 0.3))+
  #makes mulitple horizontal planels based on iso3 variable
  #facet_grid(cob~.)+
  #ggtitle("Risk of LTBI and age and year of arrival among 2016 Australian residents born overseas") +
  labs(x = "Age (years)", y = "Population")+
  scale_y_continuous(breaks = seq(0, 270000, 50000), limits = c(0, 270000))+
  scale_x_continuous(breaks = seq(0, 115, 10))+
  scale_fill_manual(name="Estimated number with and without LTBI", 
                    values=c("gray72", "gray40"))+
  guides(fill = guide_legend(title.position = "top"))+
  #to turn the background white
  theme_bw() +
  #add text titles inside the plots
  #geom_text(aes(label=cob, x = Inf, y = Inf,
  #              hjust = 1.5, vjust = 1.5),size=8) +
  #to eliminate background, gridlines, and chart border
  theme(
    legend.title=element_text(size=22),
    plot.background = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    strip.background =element_rect(colour="white", 
                                   fill="white"),
    strip.text=element_blank(),
    legend.position="bottom")+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))+
  theme(text = element_text(size=25))







##Median number with LTBI Australia

#row analysis
medAb5k<-lapply(Ab5k, function(DT) {
  DT<-as.data.table(DT)
  DT$med<-apply(DT[,7:5006], 1, median)
  DT<-DT[,c(1,2,3,4,5,6,5007)]
  #Reorder columns by country (alphabetical), yob (ascending), yoa (ascending) 
  DT<-DT[order(DT$iso3,DT$yob,DT$yoa), ]
})

medA200<-lapply(A200, function(DT) {
  DT<-as.data.table(DT)
  DT$med<-apply(DT[,7:206], 1, median)
  DT<-DT[,c(1,2,3,4,5,6,207)]
  #Reorder columns by country (alphabetical), yob (ascending), yoa (ascending) 
  DT<-DT[order(DT$iso3,DT$yob,DT$yoa), ]
})

medfunc<-function(dt) {
  dt<-as.data.table(dt)
  dt[,.(med=median(dt[,7:5006])),by=year] 
  dt$med<-apply(dt[,7:5006], 1, median)
  dt<-dt[,c(1,2,3,4,5,6,5007)]
}

medx06<-A5k[1]
medx06<-as.data.frame(medx06)
GBR<-medx06[medx06$iso3=="GBR",]
GBRl<-GBR[GBR$age<30,]
GBRm<-GBR[GBR$age>29&GBR$age<40,]
GBRn<-GBR[GBR$age>39&GBR$age<50,]
GBRo<-GBR[GBR$age>49&GBR$age<60,]
GBRp<-GBR[GBR$age>59&GBR$age<70,]
GBRq<-GBR[GBR$age>69&GBR$age<80,]
GBRu<-GBR[GBR$age>79,]
rm(GBR)
GBRl$med<-apply(GBRl[,7:5006], 1, median)
GBRl<-GBRl[,c(1,2,3,4,5,6,5007)]
GBRm$med<-apply(GBRm[,7:5006], 1, median)
GBRm<-GBRm[,c(1,2,3,4,5,6,5007)]
GBRn$med<-apply(GBRn[,7:5006], 1, median)
GBRn<-GBRn[,c(1,2,3,4,5,6,5007)]
GBRo$med<-apply(GBRo[,7:5006], 1, median)
GBRo<-GBRo[,c(1,2,3,4,5,6,5007)]
GBRp$med<-apply(GBRp[,7:5006], 1, median)
GBRp<-GBRp[,c(1,2,3,4,5,6,5007)]
GBRq$med<-apply(GBRq[,7:5006], 1, median)
GBRq<-GBRq[,c(1,2,3,4,5,6,5007)]
GBRu$med<-apply(GBRu[,7:5006], 1, median)
GBRu<-GBRu[,c(1,2,3,4,5,6,5007)]
GBR<-rbind(GBRl,GBRm,GBRn,GBRo,GBRp,GBRq,GBRu)
rm(GBRl,GBRm,GBRn,GBRo,GBRp,GBRq,GBRu)
CHN<-medx06[medx06$iso3=="CHN",]
CHN$med<-apply(CHN[,7:5006], 1, median)
CHN<-CHN[,c(1,2,3,4,5,6,5007)]
IND<-medx06[medx06$iso3=="IND",]
IND$med<-apply(IND[,7:5006], 1, median)
IND<-IND[,c(1,2,3,4,5,6,5007)]
MYS<-medx06[medx06$iso3=="MYS",]
MYS$med<-apply(MYS[,7:5006], 1, median)
MYS<-MYS[,c(1,2,3,4,5,6,5007)]
PHL<-medx06[medx06$iso3=="PHL",]
PHL$med<-apply(PHL[,7:5006], 1, median)
PHL<-PHL[,c(1,2,3,4,5,6,5007)]
VNM<-medx06[medx06$iso3=="VNM",]
VNM$med<-apply(VNM[,7:5006], 1, median)
VNM<-VNM[,c(1,2,3,4,5,6,5007)]
medx06<-rbind(CHN, GBR,IND, MYS, PHL, VNM)
rm(CHN, GBR, IND, MYS, PHL, VNM)

medx11<-A5k[2]
medx11<-as.data.frame(medx11)
GBR<-medx11[medx11$iso3=="GBR",]
GBRl<-GBR[GBR$age<30,]
GBRm<-GBR[GBR$age>29&GBR$age<40,]
GBRn<-GBR[GBR$age>39&GBR$age<50,]
GBRo<-GBR[GBR$age>49&GBR$age<60,]
GBRp<-GBR[GBR$age>59&GBR$age<70,]
GBRq<-GBR[GBR$age>69&GBR$age<80,]
GBRu<-GBR[GBR$age>79,]
rm(GBR)
GBRl$med<-apply(GBRl[,7:5006], 1, median)
GBRl<-GBRl[,c(1,2,3,4,5,6,5007)]
GBRm$med<-apply(GBRm[,7:5006], 1, median)
GBRm<-GBRm[,c(1,2,3,4,5,6,5007)]
GBRn$med<-apply(GBRn[,7:5006], 1, median)
GBRn<-GBRn[,c(1,2,3,4,5,6,5007)]
GBRo$med<-apply(GBRo[,7:5006], 1, median)
GBRo<-GBRo[,c(1,2,3,4,5,6,5007)]
GBRp$med<-apply(GBRp[,7:5006], 1, median)
GBRp<-GBRp[,c(1,2,3,4,5,6,5007)]
GBRq$med<-apply(GBRq[,7:5006], 1, median)
GBRq<-GBRq[,c(1,2,3,4,5,6,5007)]
GBRu$med<-apply(GBRu[,7:5006], 1, median)
GBRu<-GBRu[,c(1,2,3,4,5,6,5007)]
GBR<-rbind(GBRl,GBRm,GBRn,GBRo,GBRp,GBRq,GBRu)
rm(GBRl,GBRm,GBRn,GBRo,GBRp,GBRq,GBRu)
CHN<-medx11[medx11$iso3=="CHN",]
CHN$med<-apply(CHN[,7:5006], 1, median)
CHN<-CHN[,c(1,2,3,4,5,6,5007)]
IND<-medx11[medx11$iso3=="IND",]
IND$med<-apply(IND[,7:5006], 1, median)
IND<-IND[,c(1,2,3,4,5,6,5007)]
MYS<-medx11[medx11$iso3=="MYS",]
MYS$med<-apply(MYS[,7:5006], 1, median)
MYS<-MYS[,c(1,2,3,4,5,6,5007)]
PHL<-medx11[medx11$iso3=="PHL",]
PHL$med<-apply(PHL[,7:5006], 1, median)
PHL<-PHL[,c(1,2,3,4,5,6,5007)]
VNM<-medx11[medx11$iso3=="VNM",]
VNM$med<-apply(VNM[,7:5006], 1, median)
VNM<-VNM[,c(1,2,3,4,5,6,5007)]
medx11<-rbind(CHN, GBR,IND, MYS, PHL, VNM)
rm(CHN, GBR, IND, MYS, PHL, VNM)


medx16<-A5k[3]
medx16<-as.data.frame(medx16)
GBR<-medx16[medx16$iso3=="GBR",]
GBRl<-GBR[GBR$age<30,]
GBRm<-GBR[GBR$age>29&GBR$age<40,]
GBRn<-GBR[GBR$age>39&GBR$age<50,]
GBRo<-GBR[GBR$age>49&GBR$age<60,]
GBRp<-GBR[GBR$age>59&GBR$age<70,]
GBRq<-GBR[GBR$age>69&GBR$age<80,]
GBRu<-GBR[GBR$age>79,]
rm(GBR)
GBRl$med<-apply(GBRl[,7:5006], 1, median)
GBRl<-GBRl[,c(1,2,3,4,5,6,5007)]
GBRm$med<-apply(GBRm[,7:5006], 1, median)
GBRm<-GBRm[,c(1,2,3,4,5,6,5007)]
GBRn$med<-apply(GBRn[,7:5006], 1, median)
GBRn<-GBRn[,c(1,2,3,4,5,6,5007)]
GBRo$med<-apply(GBRo[,7:5006], 1, median)
GBRo<-GBRo[,c(1,2,3,4,5,6,5007)]
GBRp$med<-apply(GBRp[,7:5006], 1, median)
GBRp<-GBRp[,c(1,2,3,4,5,6,5007)]
GBRq$med<-apply(GBRq[,7:5006], 1, median)
GBRq<-GBRq[,c(1,2,3,4,5,6,5007)]
GBRu$med<-apply(GBRu[,7:5006], 1, median)
GBRu<-GBRu[,c(1,2,3,4,5,6,5007)]
GBR<-rbind(GBRl,GBRm,GBRn,GBRo,GBRp,GBRq,GBRu)
rm(GBRl,GBRm,GBRn,GBRo,GBRp,GBRq,GBRu)
CHN<-medx16[medx16$iso3=="CHN",]
CHN$med<-apply(CHN[,7:5006], 1, median)
CHN<-CHN[,c(1,2,3,4,5,6,5007)]
IND<-medx16[medx16$iso3=="IND",]
IND$med<-apply(IND[,7:5006], 1, median)
IND<-IND[,c(1,2,3,4,5,6,5007)]
MYS<-medx16[medx16$iso3=="MYS",]
MYS$med<-apply(MYS[,7:5006], 1, median)
MYS<-MYS[,c(1,2,3,4,5,6,5007)]
PHL<-medx16[medx16$iso3=="PHL",]
PHL$med<-apply(PHL[,7:5006], 1, median)
PHL<-PHL[,c(1,2,3,4,5,6,5007)]
VNM<-medx16[medx16$iso3=="VNM",]
VNM$med<-apply(VNM[,7:5006], 1, median)
VNM<-VNM[,c(1,2,3,4,5,6,5007)]
medx16<-rbind(CHN, GBR,IND, MYS, PHL, VNM)
rm(CHN, GBR, IND, MYS, PHL, VNM)

medAb06<-medAb5k[[1]]
medAb11<-medAb5k[[2]]
medAb16<-medAb5k[[3]]
med06<-medA200[[1]]
med11<-medA200[[2]]
med16<-medA200[[3]]

med06<-rbind(medAb06,med06, medx06)
med11<-rbind(medAb11,med11, medx11)
med16<-rbind(medAb16,med16, medx16)
sum(med06$pop)
#18,265,633
sum(med11$pop)
#20,067,382
sum(med16$pop)
#21,453,165
rm(medAb5k,medx06,medx11,medx16, medAb06,medAb11,medAb16, medA200)

med<- list("med06"<-med06,"med11"<-med11,"med16"<-med16)
rm(med06,med11,med16)

sumpop<-lapply(med, function(df){
  sumpop<-sum(df$pop)
})
sumpop

totmed<-lapply(med, function(df){
  med<-sum(df$med)
})
totmed
rm(totmed)
#2006 - 687505.2
#2011 - 821482.6
#2016 - 946459.7

pctmed<-lapply(med, function(df){
  sumpop<-sum(df$pop)
  summed<-sum(df$med)
  percent<-(summed/sumpop)*100
})
pctmed
rm(pctmed)
#2006 - 3.77
#2011 - 4.10
#2016 - 4.41



#Average age of those with LTBI

#Working out the average/median age in 2006, 2011 and 2016
avage<-lapply(med, function(df){
  df$agebymed <- df$med*df$age
  medsum<-sum(df$med)
  agesum<-sum(df$agebymed)
  aveage<-agesum/medsum
})
avage

aveageAb<-lapply(med, function(df){
  df<-df[df$iso3=="AUS",]
  popLTBI<-sum(df$med)
  df$agebymed<-df$age*df$med
  agesum<-sum(df$agebymed) 
  x<-agesum/popLTBI
})
aveageAb

aveageO<-lapply(med, function(df){
  df<-df[df$iso3!="AUS",]
  popLTBI<-sum(df$med)
  df$agebymed<-df$age*df$med
  agesum<-sum(df$agebymed) 
  x<-agesum/popLTBI
})
aveageO

#How many under the age of 35?
under35<-lapply(med, function(df){
  under35<-sum(df$med[df$age<35])
})
under35
#2006 - 119991.5
#2011 - 167188.3
#2016 - 204329

percentunder35<-lapply(med, function(df){
  under35<-sum(df$med[df$age<35])
  medsum<-sum(df$med) 
  x<-(under35/medsum)*100
})
percentunder35
#2006 - 17.44
#2011 - 20.34
#2016 - 21.58

rm(under35,percentunder35,aveage,aveageAb,aveageO)




##Number/percentage in each age-group overtime - in overseas-born pop
#column analysis - possible by multiplying the 200 replicates by 25 to get 5000
A06<-A200[[1]]
A065k<-A5k[[1]]
A16<-A200[[3]]
A165k<-A5k[[3]]
sum(A065k$pop)
sum(A16$pop)


A065k$agegroup <- as.character(cut(A065k$age, breaks=c(-1,14,34,64,115),
                                   labels=c('0-14', '15-34', '35-64', '65+')))
A065k<-A065k[,c(5007,6:5006)]
A165k$agegroup <- as.character(cut(A165k$age, breaks=c(-1,14,34,64,115),
                                   labels=c('0-14', '15-34', '35-64', '65+')))
A165k<-A165k[,c(5007,6:5006)]
A06$agegroup <- as.character(cut(A06$age, breaks=c(-1,14,34,64,115),
                                   labels=c('0-14', '15-34', '35-64', '65+')))
A06<-A06[,c(207,6:206)]
A16$agegroup <- as.character(cut(A16$age, breaks=c(-1,14,34,64,115),
                                 labels=c('0-14', '15-34', '35-64', '65+')))
A16<-A16[,c(207,6:206)]

sumagefunc<-function(dt) {
  dt<-dt %>%
    group_by(agegroup) %>% # aggregating by cob 
    summarise_all(funs(sum))
}

A06<-sumagefunc(A06)
A16<-sumagefunc(A16)
A065k<-sumagefunc(A065k)
A165k<-sumagefunc(A165k)

col<-A06[,3:202]
A06head<-A06[,1:2]
col<- do.call(cbind, replicate(25, col, simplify=FALSE))
A06<-cbind(A06head,col)
#Rename column variables in Austrisk
Vcolnam <- paste0(c("V"),1:5000)
colnames(A06)[3:5002] <- Vcolnam

col<-A16[,3:202]
A16head<-A16[,1:2]
col<- do.call(cbind, replicate(25, col, simplify=FALSE))
A16<-cbind(A16head,col)
colnames(A16)[3:5002] <- Vcolnam

A06<-rbind(A06,A065k)
A16<-rbind(A16,A165k)

A06<-A06 %>%
  group_by(agegroup) %>% # aggregating by cob 
  summarise_all(funs(sum))
A16<-A16 %>%
  group_by(agegroup) %>% # aggregating by cob 
  summarise_all(funs(sum))
A06$med<-apply(A06[,3:5002], 1, median)
A16$med<-apply(A16[,3:5002], 1, median)

twentyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.25))
}

seventyfifth<-function(cb){
  seventyfifth<-quantile(cb, c(.75))
}
A06$q25<-apply(A06[,3:5002], 1, twentyfifth)
A16$q25<-apply(A16[,3:5002], 1, twentyfifth)
A06$q75<-apply(A06[,3:5002], 1, seventyfifth)
A16$q75<-apply(A16[,3:5002], 1, seventyfifth)

A06<-A06[,c(1,2,5003,5004,5005)]
A16<-A16[,c(1,2,5003,5004,5005)]
sum06<-sum(A06$med)
sum16<-sum(A16$med)
A06$pct<-(A06$med/sum06)*100   
A16$pct<-(A16$med/sum16)*100     
               
A16$med06<-A06$med
A16$diff<-A16$med-A16$med06
A16$pctchange<-(A16$diff/A16$med06)*100

A16$q2506<-A06$q25
A16$q7506<-A06$q75

A16$diffq25<-A16$q25-A16$med06
A16$pctchangeq25<-(A16$diffq25/A16$med06)*100

A16$diffq75<-A16$q75-A16$med06
A16$pctchangeq75<-(A16$diffq75/A16$med06)*100

A06$pct<-(A06$med/A06$pop)*100
A16$pct<-(A16$med/A16$pop)*100

(sum(A06$med)/sum(A06$pop))*100
(sum(A16$med)/sum(A16$pop))*100


#Chi-square looking at increase in % overseasborn
#age-group in all Australia 2006-2016
#0-14 years
#observed frequencies:
#2016 - number LTBI in age-group, number not LTBI in age-group
observed <- c(A16$med[1],A16$pop[1]-A16$med[1])
#expected proportions:
#2006- proportion LTBI in age-group, proportion not in age-group
expected <- c(A06$med[1]/A06$pop[1],(1-(A06$med[1]/A06$pop[1])))
chitest<-chisq.test(x = observed,p = expected)
chitest
chitest$expected















##Number of immigrants from 2007-2016 from high burden countries
# age 15-34 years of age

A1534a<-A5k[[3]]
A1534b<-A200[[3]]
A1534a<-A1534a[,c(1,2,5,6)]
A1534b<-A1534b[,c(1,2,5,6)]
A1534a<-A1534a[A1534a$yoa>2006,]
A1534b<-A1534b[A1534b$yoa>2006,]
A1534<-rbind(A1534a,A1534b)
A1534$aaa<-A1534$yoa-(2016-A1534$age)

A1534$agegroup <- as.character(cut(A1534$aaa, breaks=c(-1,14,34,64,115),
                                   labels=c('0-14', '15-34', '35-64', '65+')))

highTBlist<-c("BWA", "CMR", "TCD", "GHA", "GNB","MWI","SWZ","UGA","AGO",
              "CHN","COD","ETH","IND","IDN","KEN","MOZ","MMR","NGA",
              "PNG","ZAF","THA","ZWE","BRA","CAF","COG","LSO","LBR",
              "NAM","TZA","ZMB","KHM","SLE","BGD","KOR","PAK","PHL",
              "RUS","AZE","VNM","BLR","KAZ","KGZ","PER","MDA","SOM",
              "TJK","UKR","UZB")

A1534<-A1534[A1534$iso3 %in% highTBlist,]
A1534<-A1534[A1534$agegroup=="15-34",]
sum(A1534$pop)


##Number of immigrants from 2007-2016 from high burden countries
# age 15-34 years of age with LTBI
highTBlist<-c("BWA", "CMR", "TCD", "GHA", "GNB","MWI","SWZ","UGA","AGO",
              "CHN","COD","ETH","IND","IDN","KEN","MOZ","MMR","NGA",
              "PNG","ZAF","THA","ZWE","BRA","CAF","COG","LSO","LBR",
              "NAM","TZA","ZMB","KHM","SLE","BGD","KOR","PAK","PHL",
              "RUS","AZE","VNM","BLR","KAZ","KGZ","PER","MDA","SOM",
              "TJK","UKR","UZB")

A1534a<-A5k[[3]]
A1534b<-A200[[3]]
A1534a<-A1534a[A1534a$yoa>2006,]
A1534b<-A1534b[A1534b$yoa>2006,]
A1534a<-A1534a[,c(1,2,5:5006)]
A1534b<-A1534b[,c(1,2,5:206)]
A1534a<-A1534a[A1534a$iso3 %in% highTBlist,]
A1534b<-A1534b[A1534b$iso3 %in% highTBlist,]
col<-A1534b[,5:204]
A16head<-A1534b[,1:4]
col<- do.call(cbind, replicate(25, col, simplify=FALSE))
A1534b<-cbind(A16head,col)
colnames(A1534b)[5:5004] <- Vcolnam
  
A1534<-rbind(A1534a,A1534b)
rm(A1534b,A1534a,col,A16head)
A1534$aaa<-A1534$yoa-(2016-A1534$age)
A1534$aaa <- as.character(cut(A1534$aaa, breaks=c(-1,14,34,64,115),
                                   labels=c('0-14', '15-34', '35-64', '65+')))
A1534<-A1534[A1534$aaa=="15-34",]
sum(A1534$pop)
str(A1534)
A1534<-A1534[,4:5005] %>%
  group_by(aaa) %>% # aggregating by cob 
  summarise_all(funs(sum))
A1534$med<-apply(A1534[,3:5002], 1, median)
A1534$med/sum(A1534$pop)


###Numbers by age For individual countries
cnty<-c("CHN", "IND", "PHL", "VNM", "ZAF")
'%!in%' <- function(x,y)!('%in%'(x,y))

AisoageZAF<-lapply(A200, function(DT){
  DT<-DT[DT$iso=="ZAF",]
  DT<-DT[,c(1,3,6,8:207)] 
  DT<-DT %>%
    group_by(cob,age) %>% # aggregating by cob 
    summarise_all(funs(sum))
  DT<-as.data.frame(DT)
})
AisoageZAF<-lapply(AisoageZAF, function(DT){
  DT<-as.data.table(DT)
  DT$med<-apply(DT[,4:203], 1, median)
  DT<-DT[,c(1,2,3,204)]
})
AisoageZAF16<-AisoageZAF[[3]]

Aisoage<-lapply(A5k, function(DT){
  DT<-DT[DT$iso %in% cnty,]
  DT<-DT[,c(1,3,6:5006)] 
  DT<-DT %>%
    group_by(cob,age) %>% # aggregating by cob 
    summarise_all(funs(sum))
  DT<-as.data.frame(DT)
})
Aisoage<-lapply(Aisoage, function(DT){
  DT<-as.data.table(DT)
  DT$med<-apply(DT[,4:5003], 1, median)
  DT<-DT[,c(1,2,3,5004)]
})

Aisoage16<-Aisoage[[3]]
Aisoage16<-rbind(Aisoage16,AisoageZAF16)
Aisoage16$noLTBI<-Aisoage16$pop-Aisoage16$med
Aisoage16$pop<-NULL
Aisoage16<-melt(Aisoage16,id.vars = c("cob", "age"), 
              measure.vars = c("med", "noLTBI"))
colnames(Aisoage16)[3] <- "LTBI"
levels(Aisoage16$LTBI) <- c("with LTBI", "without LTBI")
                            
Aisoage16[Aisoage16$cob == "Vietnam","cob":="Vietnam   "]
Aisoage16[Aisoage16$cob == "China","cob":="China    "]
Aisoage16[Aisoage16$cob == "India","cob":="India     "]

dev.off() 
ggplot(Aisoage16,aes(x = age, y = value, 
                     fill=factor(LTBI, 
                    levels=c("without LTBI","with LTBI")), 
                    width=0.7))+ 
  geom_bar(stat="identity")+
  #moves the points slightly so they don't seem to be in lines
  #position = position_jitter(w = 0.3, h = 0.3))+
  #makes mulitple horizontal planels based on iso3 variable
  facet_grid(cob~.)+
  #ggtitle("Risk of LTBI and age and year of arrival among 2016 Australian residents born overseas") +
  labs(x = "Age (years)", y = "Population")+
  scale_y_continuous(breaks = seq(0, 21000, 5000), limits = c(0, 21000))+
  scale_x_continuous(breaks = seq(0, 100, 10))+
  scale_fill_manual(name="Estimated number with and without LTBI", 
                    values=c("gray72", "gray40"))+
  guides(fill = guide_legend(title.position = "top"))+
  #to turn the background white
  theme_bw() +
  #add text titles inside the plots
  geom_text(aes(label=cob, x = Inf, y = Inf,
                hjust = 1.5, vjust = 1.5),size=8) +
  #to eliminate background, gridlines, and chart border
  theme(
    legend.title=element_text(size=22),
    plot.background = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    strip.background =element_rect(colour="white", 
                                   fill="white"),
    strip.text=element_blank(),
    legend.position="bottom")+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))+
  theme(text = element_text(size=25))

#Average age of different residents
Aisoagesum<-Aisoage16[Aisoage16$LTBI=="with LTBI",]
cobsum<-Aisoagesum[,.(med=sum(value)),by=cob]
Aisoagesum$agebymed<-Aisoagesum$age*Aisoagesum$value
agesum<-Aisoagesum[,.(med=sum(agebymed)),by=cob]

cobsum$agesum<-agesum$med
cobsum$avage<-cobsum$agesum/cobsum$med















##Those with yoa after 2006
#Percent with LTBI
A07165k<-A5k[[3]]
A07165k<-A07165k[A07165k$yoa>2006,]
sum(A07165k$pop)
#1009698
A0716<-A200[[3]]
A0716<-A0716[A0716$yoa>2006,]
sum(A0716$pop)
#1110432

sum0716<-colSums(A0716[,8:207])
sum0716<-as.data.frame(sum0716)
sum0716<- do.call(rbind, replicate(25, sum0716, simplify=FALSE))
sum07165k<-A07165k[, lapply(.SD, sum, na.rm=TRUE), .SDcols=c(7:5006) ] 
sum07165k<-t(sum07165k)
sum07165k<-as.data.frame(sum07165k)
sum0716<-cbind(sum0716,sum07165k)
rm(sum07165k)
sum0716$tot<-sum0716$sum0716+sum0716$V1

med0716<-median(sum0716$tot)
#190089.266
LTBIpct0716<-(med0716/(sum(A0716$pop)+sum(A07165k$pop)))*100
#16.08% #Percent of all with LTBI'

#Percent of all LTBI
all<-Asum[[3]]
allLTBI<-median(unlist(Asum[[3]]))
(med0716/allLTBI)*100
#31.33%


###Numbers by age For individual countries - that arrived 2007-2016
#Figure 5
cnty<-c("CHN", "IND", "PHL", "VNM", "ZAF")
'%!in%' <- function(x,y)!('%in%'(x,y))

AisoageZAF<-lapply(A200, function(DT){
  DT<-DT[DT$iso=="ZAF",]
  DT<-DT[DT$yoa>2006,]
  DT<-DT[,c(1,3,6,8:207)] 
  DT<-DT %>%
    group_by(cob,age) %>% # aggregating by cob 
    summarise_all(funs(sum))
  DT<-as.data.frame(DT)
})
AisoageZAF<-lapply(AisoageZAF, function(DT){
  DT<-as.data.table(DT)
  DT$med<-apply(DT[,4:203], 1, median)
  DT<-DT[,c(1,2,3,204)]
})
AisoageZAF16<-AisoageZAF[[3]]

Aisoage<-lapply(A5k, function(DT){
  DT<-DT[DT$iso %in% cnty,]
  DT<-DT[DT$yoa>2006,]
  DT<-DT[,c(1,3,6:5006)] 
  DT<-DT %>%
    group_by(cob,age) %>% # aggregating by cob 
    summarise_all(funs(sum))
  DT<-as.data.frame(DT)
})
Aisoage<-lapply(Aisoage, function(DT){
  DT<-as.data.table(DT)
  DT$med<-apply(DT[,4:5003], 1, median)
  DT<-DT[,c(1,2,3,5004)]
})

Aisoage16<-Aisoage[[3]]
Aisoage16<-rbind(Aisoage16,AisoageZAF16)
Aisoage16$noLTBI<-Aisoage16$pop-Aisoage16$med
Aisoage16$pop<-NULL
Aisoage16<-melt(Aisoage16,id.vars = c("cob", "age"), 
                measure.vars = c("med", "noLTBI"))
colnames(Aisoage16)[3] <- "LTBI"
levels(Aisoage16$LTBI) <- c("with LTBI", "without LTBI")

Aisoage16[Aisoage16$cob == "Vietnam","cob":="Vietnam   "]
Aisoage16[Aisoage16$cob == "China","cob":="China    "]
Aisoage16[Aisoage16$cob == "India","cob":="India     "]

dev.off() 
ggplot(Aisoage16,aes(x = age, y = value, 
                     fill=factor(LTBI, 
                                 levels=c("without LTBI","with LTBI")), 
                     width=0.7))+ 
  geom_bar(stat="identity")+
  #moves the points slightly so they don't seem to be in lines
  #position = position_jitter(w = 0.3, h = 0.3))+
  #makes mulitple horizontal planels based on iso3 variable
  facet_grid(cob~.)+
  #ggtitle("Risk of LTBI and age and year of arrival among 2016 Australian residents born overseas") +
  labs(x = "Age (years)", y = "Population")+
  scale_y_continuous(breaks = seq(0, 21000, 5000), limits = c(0, 21000))+
  scale_x_continuous(breaks = seq(0, 100, 10))+
  scale_fill_manual(name="Estimated number with and without LTBI", 
                    values=c("gray72", "gray40"))+
  guides(fill = guide_legend(title.position = "top"))+
  #to turn the background white
  theme_bw() +
  #add text titles inside the plots
  geom_text(aes(label=cob, x = Inf, y = Inf,
                hjust = 1.5, vjust = 1.5),size=8) +
  #to eliminate background, gridlines, and chart border
  theme(
    legend.title=element_text(size=22),
    plot.background = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    strip.background =element_rect(colour="white", 
                                   fill="white"),
    strip.text=element_blank(),
    legend.position="bottom")+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))+
  theme(text = element_text(size=25))
















#Plotting number with LTBI by overseas cob, showing IQR
#column sum
Aiso5k<-lapply(A5k, function(DT){
  DT<-DT[,c(3,7:5006)] 
  DT<-DT %>%
    group_by(cob) %>% # aggregating by cob 
    summarise_all(funs(sum))
  DT<-as.data.frame(DT)
})
iso5k16<-Aiso5k[[3]]
iso5k16$med<-apply(iso5k16[,2:5001], 1, median)
iso5k16<-iso5k16[,c(1,5002,2:5001)]

Aiso<-lapply(A200, function(DT){
  DT<-DT[,c(3,7:207)] 
  DT<-DT %>%
    group_by(cob) %>% # aggregating by cob 
    summarise_all(funs(sum))
  DT<-as.data.frame(DT)
})
iso16<-Aiso[[3]]

#Creating an overseasborn median dataset, 
# to be able to plot them in order
isomed16<-rbind(iso16[,1:2],iso5k16[,1:2])
#Ordering cob variable by the median number
isomed16$cob <- factor(isomed16$cob,
                       levels=unique(isomed16$cob[order(isomed16$med)],
                                     decreasing = TRUE), 
                       ordered=TRUE)
isomed16$cob = with(isomed16, factor(cob, levels = rev(levels(cob))))
# subset to top 10 cob by median LTBI
cobtop<-head(sort(isomed16$cob),20)

iso5k16$med<-NULL
iso16$med<-NULL
iso5k16<- melt(iso5k16)
iso16<-melt(iso16)
iso16<-rbind(iso16,iso5k16)
iso16<-iso16[iso16$cob %in% cobtop,]
iso16<-as.data.frame(iso16)
iso16<-merge(iso16, isomed16, by.x = c("cob"), by.y = c("cob"), all.x=TRUE, all.y=FALSE)
iso16$cob <- factor(iso16$cob,
                    levels=unique(iso16$cob[order(iso16$med)],
                                  decreasing = TRUE), 
                    ordered=TRUE)
iso16$cob = with(iso16, factor(cob, levels = rev(levels(cob))))

#Ref 4f6y
options(scipen=5)
dev.off()
ggplot(iso16, aes(cob, value))+
  geom_boxplot(fill='gray', color="black",outlier.shape=NA ) +
  labs(x = "Country of birth", y = "Estimated number of overseas-born with LTBI")+
  #geom_jitter(width = 0.2,size=0.1)+
  scale_y_continuous(breaks = seq(0, 210000, 20000),limits= c(0, 210000))+
  #to turn the background white
  theme_bw()+
  #to put x axis text at an angle
  theme(text = element_text(size=20),#changes the size of text
        axis.text.x=element_text(angle=45,hjust=1)) 
#geom_errorbar(data=totmed, aes(y=NULL, ymax=df, ymin=df), colour="black")


iso16<-as.data.table(iso16)
iso16[,.(med=median(value)),by=cob] 

iso16$allLTBI<-medpop[3]
iso16$pctallLTBI<-(iso16$value/iso16$allLTBI)*100

twentyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.25))
}

seventyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.75))
}

iso16[,.(med=median(pctallLTBI)),by=cob]
iso16[,.(med=twentyfifth(pctallLTBI)),by=cob] 
iso16[,.(med=seventyfifth(pctallLTBI)),by=cob] 












































#AGE OF TYPICAL LTBI CASE - NUMBER  
#Figure 2
##get the uncertainty by summing by column

Asum200<-lapply(A200, function(DT) {
  DT<-as.data.table(DT)
  DT<-DT[,c(1,7:206)]
})

Asum200<-lapply(Asum200, function(DT) {
  DT<-DT %>%
    group_by(age) %>% # aggregating by cob 
    summarise_all(funs(sum))
})

Asum200<-lapply(Asum200, function(DT) {
  ADT<-DT[,1]
  DT<-DT[,2:201]
  DT<- do.call(cbind, replicate(25, DT, simplify=FALSE))
  DT<-cbind(ADT,DT)
})

fig25k<-lapply(A5k, function(DT){
  DT<-DT[,c(1,7:5006)] 
  DT<-DT %>%
    group_by(age) %>% # aggregating by cob 
    summarise_all(funs(sum))
})
fig25k<-lapply(seq_along(fig25k),function(i)
  (rbind(fig25k[i],Asum200[i])))
fig25k<-lapply(fig25k, function(DT){
  rbindlist(DT)
})
fig25k<-lapply(fig25k, function(DT){
  DT<-DT %>%
    group_by(age) %>% # aggregating by cob 
    summarise_all(funs(sum))
})
fig2Ab<-lapply(Ab5k, function(DT) {
  DT<-as.data.table(DT)
  DT<-DT[,c(1,7:5006)]
  DT<-DT %>%
    group_by(age) %>% # aggregating by cob 
    summarise_all(funs(sum))
})
fig2Ab<-lapply(fig2Ab, function(DT) {
  DT$iso3<-"Australian-born"
  DT
})
fig25k<-lapply(fig25k, function(DT) {
  DT$iso3<-"Overseas-born"
  DT
})

fig25k<-lapply(seq_along(fig25k),function(i)
  (rbind(fig25k[i],fig2Ab[i])))

fig25k<-lapply(fig25k, function(DT){
  rbindlist(DT)
})
rm(fig2Ab)
fig25k<-rbindlist(fig25k, idcol = "year")
fig25k$year[fig25k$year=="1"]<-"2006"
fig25k$year[fig25k$year=="2"]<-"2011"
fig25k$year[fig25k$year=="3"]<-"2016"
fig25k<-as.data.frame(fig25k)
colnames(fig25k)[2] <- "age"

fig25k$med<-apply(fig25k[,3:5002], 1, median)
fig25k<-fig25k[,c(1,2,5003,5004)]

options(scipen=5)
dev.off()
ggplot(fig25k, aes(x = age, y = med, fill=iso3, width=.7))+
  geom_bar(stat="identity",position = position_stack(reverse = TRUE))+
  #ggtitle("Risk of LTBI amongst Australian-born residents")+
  labs(x = "Age", y = "Estimated number with LTBI",fill="")+
  scale_y_continuous(breaks = seq(0, 20000, 5000))+
  scale_x_continuous(breaks = seq(0, 110, 10))+
  #makes mulitple horizontal planels based on iso3 variable
  facet_grid(year ~ .)+
  # to adjust the fill colours, and fix them
  scale_fill_grey(start = 0.3, end = .7)+ 
  theme_bw() +
  #add text titles inside the plots
  geom_text(aes(label=year, x = Inf, y = Inf, 
                hjust = 1.5, vjust = 1.5,fontface="bold" ),size=8) +
  #to eliminate background, gridlines, and chart border
  theme(
    legend.position = c(0.85, 0.85),
    legend.title=element_text(size=10),
    plot.background = element_blank(),
    panel.grid.major = element_blank(),
    strip.background =element_rect(colour="white", 
                                   fill="white"),
    strip.text=element_blank(),
    text = element_text(size=20),#changes the size of text
    panel.grid.minor = element_blank())+
  #guides(fill = guide_legend(title.hjust = 8))+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))


#in colour!
options(scipen=5)
dev.off()
ggplot(fig25k, aes(x = age, y = med, fill=iso3, width=.7))+
  geom_bar(stat="identity",position = position_stack(reverse = TRUE))+
  #ggtitle("Risk of LTBI amongst Australian-born residents")+
  labs(x = "Age", y = "Estimated number with LTBI",fill="")+
  scale_y_continuous(breaks = seq(0, 20000, 5000))+
  scale_x_continuous(breaks = seq(0, 110, 10))+
  #makes mulitple horizontal planels based on iso3 variable
  facet_grid(year ~ .)+
  # to adjust the fill colours, and fix them
  scale_fill_manual(name="Median risk of LTBI", 
                    values=c("brown3", "dodgerblue3"))+
  #scale_fill_grey(start = 0.3, end = .7)+ 
  theme_bw() +
  #add text titles inside the plots
  geom_text(aes(label=year, x = Inf, y = Inf, 
                hjust = 1.5, vjust = 1.5,fontface="bold" ),size=8) +
  #to eliminate background, gridlines, and chart border
  theme(
    legend.position = c(0.85, 0.85),
    legend.title=element_text(size=20),
    plot.background = element_blank(),
    panel.grid.major = element_blank(),
    strip.background =element_rect(colour="white", 
                                   fill="white"),
    strip.text=element_blank(),
    text = element_text(size=20),#changes the size of text
    panel.grid.minor = element_blank())+
  #guides(fill = guide_legend(title.hjust = 8))+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))

#Working out the average/median age in 2006, 2011 and 2016
aveage<-lapply(Anum, function(df){
  popLTBI<-sum(df$med)
  df$agebymed<-df$age*df$med
  agesum<-sum(df$agebymed) 
  x<-agesum/popLTBI
})
aveage




#AGE OF TYPICAL LTBI CASE - PERCENTAGE  
#Figure 2
##get the uncertainty by summing by column

Asum200<-lapply(A200, function(DT) {
  DT<-as.data.table(DT)
  DT<-DT[,c(1,6:206)]
})

Asum200<-lapply(Asum200, function(DT) {
  DT<-DT %>%
    group_by(age) %>% # aggregating by cob 
    summarise_all(funs(sum))
})

Asum200<-lapply(Asum200, function(DT) {
  ADT<-DT[,1:2]
  DT<-DT[,3:202]
  DT<- do.call(cbind, replicate(25, DT, simplify=FALSE))
  DT<-cbind(ADT,DT)
})

fig25k<-lapply(A5k, function(DT){
  DT<-DT[,c(1,6:5006)] 
  DT<-DT %>%
    group_by(age) %>% # aggregating by cob 
    summarise_all(funs(sum))
})
fig25k<-lapply(seq_along(fig25k),function(i)
  (rbind(fig25k[i],Asum200[i])))
fig25k<-lapply(fig25k, function(DT){
  rbindlist(DT)
})
fig25k<-lapply(fig25k, function(DT){
  DT<-DT %>%
    group_by(age) %>% # aggregating by cob 
    summarise_all(funs(sum))
})
fig2Ab<-lapply(Ab5k, function(DT) {
  DT<-as.data.table(DT)
  DT<-DT[,c(1,6:5006)]
  DT<-DT %>%
    group_by(age) %>% # aggregating by cob 
    summarise_all(funs(sum))
})
fig2Ab<-lapply(fig2Ab, function(DT) {
  DT$iso3<-"Australian-born"
  DT
})
fig25k<-lapply(fig25k, function(DT) {
  DT$iso3<-"Overseas-born"
  DT
})

fig25k<-lapply(seq_along(fig25k),function(i)
  (rbind(fig25k[i],fig2Ab[i])))

fig25k<-lapply(fig25k, function(DT){
  rbindlist(DT)
})
rm(fig2Ab)
rm(Asum200)
fig25k<-rbindlist(fig25k, idcol = "year")
fig25k$year[fig25k$year=="1"]<-"2006"
fig25k$year[fig25k$year=="2"]<-"2011"
fig25k$year[fig25k$year=="3"]<-"2016"
fig25k<-as.data.frame(fig25k)

fig25k$med<-apply(fig25k[,4:5003], 1, median)
fig25k<-fig25k[,c(1,2,3,5004,5005)]
fig25k$pct<-(fig25k$med/fig25k$pop)*100

options(scipen=5)
dev.off()
ggplot(fig25k, aes(x = age, y = pct, fill=iso3, width=.7))+
  geom_bar(stat="identity",position = position_stack(reverse = TRUE))+
  #ggtitle("Risk of LTBI amongst Australian-born residents")+
  labs(x = "Age", y = "Estimated percentage with LTBI",fill="")+
  scale_y_continuous(breaks = seq(0, 40, 10),limits= c(0, 40))+
  scale_x_continuous(breaks = seq(0, 110, 10))+
  #makes mulitple horizontal planels based on iso3 variable
  facet_grid(year ~ .)+
  # to adjust the fill colours, and fix them
  scale_fill_grey(start = 0.3, end = .7)+ 
  theme_bw() +
  #add text titles inside the plots
  geom_text(aes(label=year, x = Inf, y = Inf, 
                hjust = 1.5, vjust = 1.5,fontface="bold" ),size=8) +
  #to eliminate background, gridlines, and chart border
  theme(
    legend.position = c(0.85, 0.85),
    legend.title=element_text(size=10),
    plot.background = element_blank(),
    panel.grid.major = element_blank(),
    strip.background =element_rect(colour="white", 
                                   fill="white"),
    strip.text=element_blank(),
    text = element_text(size=20),#changes the size of text
    panel.grid.minor = element_blank())+
  #guides(fill = guide_legend(title.hjust = 8))+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))

#Working out the average/median age in 2006, 2011 and 2016
aveage<-lapply(Anum, function(df){
  popLTBI<-sum(df$med)
  df$agebymed<-df$age*df$med
  agesum<-sum(df$agebymed) 
  x<-agesum/popLTBI
})
aveage


#Figure 2 alternative - with countries- UNFINISHED
##get the uncertainty by summing by column

Asum200<-lapply(A200, function(DT) {
  DT<-as.data.table(DT)
  DT<-DT[,c(1,3,6:206)]
})

Asum200<-lapply(Asum200, function(DT) {
  DT<-DT %>%
    group_by(cob,age) %>% # aggregating by cob and age
    summarise_all(funs(sum))
})

Asum200<-lapply(Asum200, function(DT) {
  ADT<-DT[,1:3]
  DT<-DT[,4:203]
  DT<- do.call(rbind, replicate(25, DT, simplify=FALSE))
  DT<-cbind(ADT,DT)
})

fig25k<-lapply(A5k, function(DT){
  DT<-DT[,c(1,3,6:5006)] 
  DT<-DT %>%
    group_by(cob,age) %>% # aggregating by cob 
    summarise_all(funs(sum))
})
fig25k<-lapply(seq_along(fig25k),function(i)
  (rbind(fig25k[i],Asum200[i])))
fig25k<-lapply(fig25k, function(DT){
  rbindlist(DT)
})
fig25k<-lapply(fig25k, function(DT){
  DT<-DT %>%
    group_by(age) %>% # aggregating by cob 
    summarise_all(funs(sum))
})
fig2Ab<-lapply(Ab5k, function(DT) {
  DT<-as.data.table(DT)
  DT<-DT[,c(1,6:5006)]
  DT<-DT %>%
    group_by(age) %>% # aggregating by cob 
    summarise_all(funs(sum))
})
fig2Ab<-lapply(fig2Ab, function(DT) {
  DT$iso3<-"Australian-born"
  DT
})
fig25k<-lapply(fig25k, function(DT) {
  DT$iso3<-"Overseas-born"
  DT
})

fig25k<-lapply(seq_along(fig25k),function(i)
  (rbind(fig25k[i],fig2Ab[i])))

fig25k<-lapply(fig25k, function(DT){
  rbindlist(DT)
})
rm(fig2Ab)
rm(Asum200)
fig25k<-rbindlist(fig25k, idcol = "year")
fig25k$year[fig25k$year=="1"]<-"2006"
fig25k$year[fig25k$year=="2"]<-"2011"
fig25k$year[fig25k$year=="3"]<-"2016"
fig25k<-as.data.frame(fig25k)

fig25k$med<-apply(fig25k[,4:5003], 1, median)
fig25k<-fig25k[,c(1,2,3,5004,5005)]
fig25k$pct<-(fig25k$med/fig25k$pop)*100

options(scipen=5)
dev.off()
ggplot(fig25k, aes(x = age, y = pct, fill=iso3, width=.7))+
  geom_bar(stat="identity",position = position_stack(reverse = TRUE))+
  #ggtitle("Risk of LTBI amongst Australian-born residents")+
  labs(x = "Age", y = "Estimated percentage with LTBI",fill="")+
  scale_y_continuous(breaks = seq(0, 40, 10),limits= c(0, 40))+
  scale_x_continuous(breaks = seq(0, 110, 10))+
  #makes mulitple horizontal planels based on iso3 variable
  facet_grid(year ~ .)+
  # to adjust the fill colours, and fix them
  scale_fill_grey(start = 0.3, end = .7)+ 
  theme_bw() +
  #add text titles inside the plots
  geom_text(aes(label=year, x = Inf, y = Inf, 
                hjust = 1.5, vjust = 1.5,fontface="bold" ),size=8) +
  #to eliminate background, gridlines, and chart border
  theme(
    legend.position = c(0.85, 0.85),
    legend.title=element_text(size=10),
    plot.background = element_blank(),
    panel.grid.major = element_blank(),
    strip.background =element_rect(colour="white", 
                                   fill="white"),
    strip.text=element_blank(),
    text = element_text(size=20),#changes the size of text
    panel.grid.minor = element_blank())+
  #guides(fill = guide_legend(title.hjust = 8))+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))

#Working out the average/median age in 2006, 2011 and 2016
aveage<-lapply(Anum, function(df){
  popLTBI<-sum(df$med)
  df$agebymed<-df$age*df$med
  agesum<-sum(df$agebymed) 
  x<-agesum/popLTBI
})
aveage






#TABLE 1


# Number estimated to have LTBI in Australia
numLTBI<-1084917

# Percentage by iso3 and agegroup - final columns of table, see LTBI prev excel 
cntylist<-c("IND", "CHN", "PHL", "VNM")
cn<-A5k[[3]]
cn<-cn[cn$iso %in% cntylist,]
cn$iso3<-factor(cn$iso3, levels=c("IND", "CHN", "PHL", "VNM"))
cn$agegroup <- as.character(cut(cn$age, breaks=c(-1,14,34,64,115),
                                     labels=c('0-14', '15-34', '35-64', '65+')))
cnpop<-cn[,c(5,6,5007)]
cnpop<-cnpop %>%
  group_by(iso3, agegroup) %>% # aggregating by cob 
  summarise_all(funs(sum))
cn<-cn[,c(5,7:5007)] %>%
  group_by(iso3, agegroup) %>% # aggregating by cob 
  summarise_all(funs(sum))
cn<-melt(cn)
cn<-as.data.table(cn)
twentyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.25))
}
seventyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.75))
}
med1<-cn[,.(med=median(value)),by=c("iso3","agegroup")]
tf<-cn[,.(tf=twentyfifth(value)),by=c("iso3","agegroup")] 
sf<-cn[,.(sf=seventyfifth(value)),by=c("iso3","agegroup")] 
med1$tf<-tf$tf
med1$sf<-sf$sf  
cntylist<-c("ZAF", "IDN", "KHM", "KOR", "MMR","PAK")
cn<-A200[[3]]
cn<-cn[cn$iso %in% cntylist,]
cn$iso3<-factor(cn$iso3, levels=c("ZAF", "IDN", "KHM", "KOR", "MMR","PAK"))
cn$agegroup <- as.character(cut(cn$age, breaks=c(-1,14,34,64,115),
                                labels=c('0-14', '15-34', '35-64', '65+')))
cnpop2<-cn[,c(5,6,207)]
cnpop2<-cnpop2 %>%
  group_by(iso3, agegroup) %>% # aggregating by cob 
  summarise_all(funs(sum))
cn<-cn[,c(5,6:207)] %>%
  group_by(iso3,agegroup) %>% # aggregating by cob 
  summarise_all(funs(sum))
cn<-melt(cn)
cn<-as.data.table(cn)
twentyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.25))
}
seventyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.75))
}
med2<-cn[,.(med=median(value)),by=c("iso3","agegroup")]
tf<-cn[,.(tf=twentyfifth(value)),by=c("iso3","agegroup")] 
sf<-cn[,.(sf=seventyfifth(value)),by=c("iso3","agegroup")] 
med2$tf<-tf$tf
med2$sf<-sf$sf  
med1<-rbind(med1,med2)
cnpop<-as.data.frame(cnpop)
cnpop2<-as.data.frame(cnpop2)
cnpop<-rbind(cnpop,cnpop2)
med1<-merge(med1,cnpop,by=c("iso3","agegroup"))
med1$medpct<-(med1$med/med1$pop)*100
med1$tfpct<-(med1$tf/med1$pop)*100
med1$sfpct<-(med1$sf/med1$pop)*100
med1<-med1[,c(1,2,7,8,9)]


# By iso3: all ages: med num with LTBI and % with LTBI in 
#med2
cntylist<-c("IND", "CHN", "PHL", "VNM")
cn<-A5k[[3]]
cn<-cn[cn$iso %in% cntylist,]
cn$iso3<-factor(cn$iso3, levels=c("IND", "CHN", "PHL", "VNM"))
cn<-cn[,c(5:5006)]
cpop<-cn[,1:2] %>%
  group_by(iso3) %>% # aggregating by cob 
  summarise_all(funs(sum))
cn<-cn %>%
  group_by(iso3) %>% # aggregating by cob 
  summarise_all(funs(sum))
cn<-melt(cn[,c(1,3:5002)])
cn<-as.data.table(cn)
twentyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.25))
}
seventyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.75))
}
med2<-cn[,.(med=median(value)),by=c("iso3")]
tf<-cn[,.(tf=twentyfifth(value)),by=c("iso3")] 
sf<-cn[,.(sf=seventyfifth(value)),by=c("iso3")] 
med2$tf<-tf$tf
med2$sf<-sf$sf  
cntylist<-c("ZAF", "IDN", "KHM", "KOR", "MMR","PAK")
cn<-A200[[3]]
cn<-cn[cn$iso %in% cntylist,]
cn$iso3<-factor(cn$iso3, levels=c("ZAF", "IDN", "KHM", "KOR", "MMR","PAK"))
cn<-cn[,c(5:206)]
cnpop2<-cn[,1:2] %>%
  group_by(iso3) %>% # aggregating by cob 
  summarise_all(funs(sum))
cn<-cn[,c(1,3:202)]%>%
  group_by(iso3) %>% # aggregating by cob 
  summarise_all(funs(sum))
cn<-melt(cn)
cn<-as.data.table(cn)
twentyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.25))
}
seventyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.75))
}
med2b<-cn[,.(med=median(value)),by=c("iso3")]
tf<-cn[,.(tf=twentyfifth(value)),by=c("iso3")] 
sf<-cn[,.(sf=seventyfifth(value)),by=c("iso3")] 
med2b$tf<-tf$tf
med2b$sf<-sf$sf  
med2<-rbind(med2,med2b)
cnpop<-as.data.frame(cnpop)
cnpop2<-as.data.frame(cnpop2)
cnpop<-rbind(cpop,cnpop2)
med2<-merge(med2,cnpop,by=c("iso3"))
med2$medpct<-(med2$med/med2$pop)*100
med2$tfpct<-(med2$tf/med2$pop)*100
med2$sfpct<-(med2$sf/med2$pop)*100
#percentage of all LTBI
med2$pctallLTBI<-(med2$med/numLTBI)*100
med2<-med2[,c(1,6,7,8,9)]





# Other overseas, by agegroup - med4
#med4
cntylist<-c("IND", "CHN", "PHL", "VNM")
'%!in%' <- function(x,y)!('%in%'(x,y))
cn<-A5k[[3]]
cn<-cn[cn$iso %!in% cntylist,]
cn$agegroup <- as.character(cut(cn$age, breaks=c(-1,14,34,64,115),
                                labels=c('0-14', '15-34', '35-64', '65+')))
cpop<-cn[,c(6,5007)]
cn<-cn[,7:5007] %>%
  group_by(agegroup) %>% # aggregating by cob 
  summarise_all(funs(sum))
cpop<-cpop %>%
  group_by(agegroup) %>% # aggregating by cob 
  summarise_all(funs(sum))

cntylist<-c("ZAF", "IDN", "KHM", "KOR", "MMR","PAK")
cn2<-A200[[3]]
cn2<-cn2[cn2$iso %!in% cntylist,]
cn2$agegroup <- as.character(cut(cn2$age, breaks=c(-1,14,34,64,115),
                                labels=c('0-14', '15-34', '35-64', '65+')))
cpop2<-cn2[,c(6,207)]
cn2<-cn2[,7:207] %>%
  group_by(agegroup) %>% # aggregating by cob 
  summarise_all(funs(sum))
cpop2<-cpop2 %>%
  group_by(agegroup) %>% # aggregating by cob 
  summarise_all(funs(sum))
cn2head<-cn2[,1]
cn2<-cn2[,2:201]
col<- do.call(cbind, replicate(25, cn2, simplify=FALSE))
cn2<-cbind(cn2head,col)
head<-cn[,1]
cn<-cn[,2:5001]+cn2[,2:5001]
cn<-cbind(head,cn)

cpop<-merge(cpop,cpop2,by=c("agegroup"))
cpop$pop<-cpop$pop.x+cpop$pop.y
cpop$pop.x<-NULL
cpop$pop.y<-NULL

cn<-melt(cn)
cn<-as.data.table(cn)
twentyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.25))
}
seventyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.75))
}
med4<-cn[,.(med=median(value)),by=c("agegroup")]
tf<-cn[,.(tf=twentyfifth(value)),by=c("agegroup")] 
sf<-cn[,.(sf=seventyfifth(value)),by=c("agegroup")] 
med4$tf<-tf$tf
med4$sf<-sf$sf  
med4<-merge(med4,cpop,by=c("agegroup"))
med4$medpct<-(med4$med/med4$pop)*100
med4$tfpct<-(med4$tf/med4$pop)*100
med4$sfpct<-(med4$sf/med4$pop)*100
med4$pctallLTBI<-(med4$med/numLTBI)*100
med4<-med4[,c(1,6,7,8,9)]

'%!in%' <- function(x,y)!('%in%'(x,y))
cntylist<-c("IND", "CHN", "PHL", "VNM")
cn<-A5k[[3]]
cn<-cn[cn$iso %!in% cntylist,]
cn<-cn[,c(6:5006)]
cn<-colSums(cn)
cn<-as.data.frame(cn)
cpop<-cn[1,]
cn<-cn[2:5001,]
cn<-as.data.frame(cn)
cntylist<-c("ZAF", "IDN", "KHM", "KOR", "MMR","PAK")
cn2<-A200[[3]]
cn2<-cn2[cn2$iso %!in% cntylist,]
cn2<-cn2[,c(6:206)]
cn2<-colSums(cn2)
cn2<-as.data.frame(cn2)
cpop2<-cn2[1,]
cn2<-cn2[2:201,]
cn2<-as.data.frame(cn2)
cn2<- do.call(rbind, replicate(25, cn2, simplify=FALSE))
cn<-cn+cn2
cn<-as.data.table(cn)
twentyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.25))
}
seventyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.75))
}

med3a<-median(cn$cn) 
tf<-twentyfifth(cn$cn)
sf<-seventyfifth(cn$cn)
med3<-data.frame( med3a,tf,sf)
med3$agegroup<-"all"

cnpop<-cpop+cpop2
med3$pop<-cnpop
med3$medpct<-(med3$med3a/med3$pop)*100
med3$tfpct<-(med3$tf/med3$pop)*100
med3$sfpct<-(med3$sf/med3$pop)*100
#percentage of all LTBI
med3$pctallLTBI<-(med3$med3a/numLTBI)*100
med3<-med3[,c(4,6,7,8,9)]
med4<-rbind(med4,med3)


# All overseas, by agegroup
cn<-A5k[[3]]
cn$agegroup <- as.character(cut(cn$age, breaks=c(-1,14,34,64,115),
                                labels=c('0-14', '15-34', '35-64', '65+')))
cpop<-cn[,c(6,5007)]
cn<-cn[,7:5007] %>%
  group_by(agegroup) %>% # aggregating by cob 
  summarise_all(funs(sum))
cpop<-cpop %>%
  group_by(agegroup) %>% # aggregating by cob 
  summarise_all(funs(sum))

cn2<-A200[[3]]
cn2$agegroup <- as.character(cut(cn2$age, breaks=c(-1,14,34,64,115),
                                 labels=c('0-14', '15-34', '35-64', '65+')))
cpop2<-cn2[,c(6,207)]
cn2<-cn2[,7:207] %>%
  group_by(agegroup) %>% # aggregating by cob 
  summarise_all(funs(sum))
cpop2<-cpop2 %>%
  group_by(agegroup) %>% # aggregating by cob 
  summarise_all(funs(sum))
cn2head<-cn2[,1]
cn2<-cn2[,2:201]
col<- do.call(cbind, replicate(25, cn2, simplify=FALSE))
cn2<-cbind(cn2head,col)

head<-cn[,1]
cn<-cn[,2:5001]+cn2[,2:5001]
cn<-cbind(head,cn)

cpop<-merge(cpop,cpop2,by=c("agegroup"))
cpop$pop<-cpop$pop.x+cpop$pop.y
cpop$pop.x<-NULL
cpop$pop.y<-NULL

cn<-melt(cn)
cn<-as.data.table(cn)
twentyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.25))
}
seventyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.75))
}
med5<-cn[,.(med=median(value)),by=c("agegroup")]
tf<-cn[,.(tf=twentyfifth(value)),by=c("agegroup")] 
sf<-cn[,.(sf=seventyfifth(value)),by=c("agegroup")] 
med5$tf<-tf$tf
med5$sf<-sf$sf  
med5<-merge(med5,cpop,by=c("agegroup"))
med5$medpct<-(med5$med/med5$pop)*100
med5$tfpct<-(med5$tf/med5$pop)*100
med5$sfpct<-(med5$sf/med5$pop)*100
med5$pctallLTBI<-(med5$med/numLTBI)*100
med5<-med5[,c(1,6,7,8,9)]
cn<-A5k[[3]]
cn1<-cn[,c(7:1006)]
cn2<-cn[,c(1007:2006)]
cn3<-cn[,c(2007:3006)]
cn4<-cn[,c(3007:4006)]
cn5<-cn[,c(4007:5006)]
rm(cn)
cn <- list(cn1,cn2,cn3,cn4,cn5)
rm(cn1,cn2,cn3,cn4,cn5)
cn<-lapply(cn, function(df) {
  df<-colSums(df)
  df<-as.data.frame(df)
})
cn<-rbindlist(cn)

cpop<-A5k[[3]]
cpop<-cpop[,6]
cpop<-colSums(cpop)

cn2<-A200[[3]]
cn2<-cn2[,c(6:206)]
cn2<-colSums(cn2)
cn2<-as.data.frame(cn2)
cpop2<-cn2[1,]
cn2<-cn2[2:201,]
cn2<-as.data.frame(cn2)
cn2<- do.call(rbind, replicate(25, cn2, simplify=FALSE))

cn<-cn$df+cn2$cn2

twentyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.25))
}
seventyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.75))
}

med<-median(cn) 
tf<-twentyfifth(cn)
sf<-seventyfifth(cn)
meda<-data.frame( med,tf,sf)

cnpop<-cpop+cpop2
meda$pop<-cnpop
meda$medpct<-(meda$med/meda$pop)*100
meda$tfpct<-(meda$tf/meda$pop)*100
meda$sfpct<-(meda$sf/meda$pop)*100
meda<-as.data.frame(meda)
meda$pctallLTBI<-(meda$med/numLTBI)*100
meda<-meda[,c(5,6,7,8)]
meda$agegroup<-"all"
med5<-rbind(med5,meda)


#Australian born by agegroup and all
cn<-Ab5k[[3]]
cn$agegroup <- as.character(cut(cn$age, breaks=c(-1,14,34,64,115),
                                labels=c('0-14', '15-34', '35-64', '65+')))
cpop<-cn[,c(6,5007)]
cn<-cn[,7:5007] %>%
  group_by(agegroup) %>% # aggregating by cob 
  summarise_all(funs(sum))
cpop<-cpop %>%
  group_by(agegroup) %>% # aggregating by cob 
  summarise_all(funs(sum))

cn<-melt(cn)
cn<-as.data.table(cn)
twentyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.25))
}
seventyfifth<-function(cb){
  twentyfifth<-quantile(cb, c(.75))
}
med6<-cn[,.(med=median(value)),by=c("agegroup")]
tf<-cn[,.(tf=twentyfifth(value)),by=c("agegroup")] 
sf<-cn[,.(sf=seventyfifth(value)),by=c("agegroup")] 
med6$tf<-tf$tf
med6$sf<-sf$sf  
med6<-merge(med6,cpop,by=c("agegroup"))
med6$medpct<-(med6$med/med6$pop)*100
med6$tfpct<-(med6$tf/med6$pop)*100
med6$sfpct<-(med6$sf/med6$pop)*100
med6$pctallLTBI<-(med6$med/numLTBI)*100
med6<-med6[,c(1,6,7,8,9)]

cn<-Ab5k[[3]]
cn<-cn[,c(6:5006)]
cn<-colSums(cn)
cpop<-cn[1]
cn<-cn[2:5001]
meda<-median(cn)
tf<-twentyfifth(cn)
sf<-seventyfifth(cn)
meda<-data.frame( meda,tf,sf)
meda$pop<-cpop
meda$medpct<-(meda$meda/meda$pop)*100
meda$tfpct<-(meda$tf/meda$pop)*100
meda$sfpct<-(meda$sf/meda$pop)*100
meda<-as.data.frame(meda)
meda$pctallLTBI<-(meda$meda/numLTBI)*100
meda<-meda[,c(5,6,7,8)]
meda$agegroup<-"all"
med6<-rbind(med6,meda)


#MEDIAN PERCENTAGE OF ALL ESTIMATED LTBI - ALL
#NEED TO GET THE MEDIAN VALUES FOR EACH ROW
# Number estimated to have LTBI in Australia
cn<-med[[3]]
numLTBI<-sum(cn$med)

cn<-as.data.table(cn)
#Function to get % of all LTBI
medysa<-function(df){
  medsum<-sum(df$med)
  (medsum/numLTBI)*100
}
cntylist<-c("IND", "CHN", "PHL", "VNM","ZAF", 
            "IDN", "KHM", "KOR", "MMR","PAK")
cniso<-cn[cn$iso3 %in% cntylist,]
cniso$iso3<-factor(cniso$iso3, levels=c("IND", "CHN", 
                                        "PHL", "VNM","ZAF", 
                                        "IDN", "KHM", "KOR", 
                                        "MMR","PAK"))
cnsplit<-split(cniso,cniso$iso3)
a<-lapply(cnsplit, medysa)
b<-medysa(cn[cn$iso3 %!in% cntylist,])
c<-medysa(cn[iso3!="AUS", ])
d<-medysa(cn[iso3=="AUS", ])
mysa<-as.data.frame(a)
mysa$other<-b
mysa$overseas<-c
mysa$aust<-d
mysa<-t(mysa)
mysa<-list(unlist(a),b,c,d)
mysa<-as.data.frame(mysa[10])
unlist(mysa)
mysa
sum(cn$med,na.rm=TRUE)



#MEDIAN YEARS SINCE ARRIVAL - ALL
#NEED TO GET THE MEDIAN VALUES FOR EACH ROW
cn<-med[[3]]
cn<-as.data.table(cn)
cn[, ysa := 2016-yoa]
cn<-cn[ iso3!="AUS", ]
#Function to get median ysa
medysa<-function(df){
  df<-as.data.table(df)
  df[, ysa:=as.character(ysa)]
  df[,roundmed:=round(med)]
  p<-df[,roundmed]
  #p<-df[,pop]
  y<-df[,ysa]
  ysalong<-lapply(seq_along(p),function(i)
    replicate(p[i], y[i]))
  ysalong<-unlist(ysalong)
  ysalong<-as.numeric(ysalong)
  median(ysalong)
}

#average age by iso3
cntylist<-c("IND", "CHN", "PHL", "VNM","ZAF", 
            "IDN", "KHM", "KOR", "MMR","PAK")
cniso<-cn[cn$iso3 %in% cntylist,]
cniso$iso3<-factor(cniso$iso3, levels=c("IND", "CHN", 
                                  "PHL", "VNM","ZAF", 
                                  "IDN", "KHM", "KOR", 
                                  "MMR","PAK"))
cnsplit<-split(cniso,cniso$iso3)
a<-lapply(cnsplit, medysa)
b<-medysa(cn[cn$iso3 %!in% cntylist,])
c<-medysa(cn[ iso3!="AUS", ])
mysa<-list(unlist(a),b,c)
mysa


#MEDIAN AGE OF RESIDENT - ALL
#NEED TO GET THE MEDIAN VALUES FOR EACH ROW
cn<-med[[3]]
cn<-as.data.table(cn)
#Function to get median age
medysa<-function(df){
  df<-as.data.table(df)
  df[, age:=as.character(age)]
  df[,roundmed:=round(med)]
  p<-df[,roundmed]
  #p<-df[,pop]
  y<-df[,age]
  agelong<-lapply(seq_along(p),function(i)
    replicate(p[i], y[i]))
  agelong<-unlist(agelong)
  agelong<-as.numeric(agelong)
  median(agelong)
}

#average age by iso3
cntylist<-c("IND", "CHN", "PHL", "VNM","ZAF", 
            "IDN", "KHM", "KOR", "MMR","PAK")
cniso<-cn[cn$iso3 %in% cntylist,]
cniso$iso3<-factor(cniso$iso3, levels=c("IND", "CHN", 
                                        "PHL", "VNM","ZAF", 
                                        "IDN", "KHM", "KOR", 
                                        "MMR","PAK"))
cnsplit<-split(cniso,cniso$iso3)
a<-lapply(cnsplit, medysa)
b<-medysa(cn[cn$iso3 %!in% cntylist,])
c<-medysa(cn[ iso3!="AUS", ])
d<-medysa(cn[ iso3=="AUS", ])
mysa<-list(unlist(a),b,c,d)
mysa

















#AVERAGE AGE OF RESIDENT WITH LTBI
#NEED TO GET THE MEDIAN VALUES FOR EACH ROW
#SEE ABOVE CALCULATION
med16<-med[[3]]
numLTBI<-sum(med16$med)
#average age by iso3
cntylist<-c("IND", "CHN", "PHL", "VNM","ZAF", 
            "IDN", "KHM", "KOR", "MMR","PAK")

cn<-med16[med16$iso3 %in% cntylist,]
cn$iso3<-factor(cn$iso3, levels=c("IND", "CHN", 
                                  "PHL", "VNM","ZAF", 
                                  "IDN", "KHM", "KOR", 
                                  "MMR","PAK"))
cn<-as.data.table(cn)
cn[, agebymed := med*age]
medsum<-cn[,.(medsum=sum(med)),by=iso3]
agesum<-cn[,.(agesum=sum(agebymed)),by=iso3]
cn<-merge(medsum,agesum,by="iso3")
cn[, aveage := agesum/medsum]
str(cn)
cn<-cn[,c(1,4)]
#average age - other countries
cntylist<-c("IND", "CHN", "PHL", "VNM","ZAF", 
            "IDN", "KHM", "KOR", "MMR","PAK","AUS")
cn2<-med16[med16$iso3 %!in% cntylist,]
cn2<-as.data.table(cn2)
cn2[, agebymed := med*age]
medsum<-cn2[,.(medsum=sum(med))]
agesum<-cn2[,.(agesum=sum(agebymed))]
aveage<-agesum/medsum
cn2<-data.frame(aveage)
colnames(cn2)[1] <- "aveage"
cn2$iso3<-"other"
cn<-rbind(cn,cn2)
#average age - all overseasborn
cn2<-med16[med16$iso3!="AUS",]
cn2<-as.data.table(cn2)
cn2[, agebymed := med*age]
medsum<-cn2[,.(medsum=sum(med))]
agesum<-cn2[,.(agesum=sum(agebymed))]
aveage<-agesum/medsum
cn2<-data.frame(aveage)
colnames(cn2)[1] <- "aveage"
cn2$iso3<-"all overseas"
cn<-rbind(cn,cn2)
#average age - Austborn
cn2<-med16[med16$iso=="AUS",]
cn2<-as.data.table(cn2)
cn2[, agebymed := med*age]
medsum<-cn2[,.(medsum=sum(med))]
agesum<-cn2[,.(agesum=sum(agebymed))]
aveage<-agesum/medsum
cn2<-data.frame(aveage)
colnames(cn2)[1] <- "aveage"
cn2$iso3<-"Austborn"
cn<-rbind(cn,cn2)



#average age - other countries
cntylist<-c("IND", "CHN", "PHL", "VNM","ZAF", 
            "IDN", "KHM", "KOR", "MMR","PAK","AUS")

cn<-med16[med16$iso3 %!in% cntylist,]
cn<-as.data.table(cn)
cn[, yoabymed := med*yoa]
medsum<-cn[,.(medsum=sum(med))]
yoasum<-cn[,.(yoasum=sum(yoabymed))]
2016-(yoasum/medsum)


#average age - all overseasborn
cn<-med16[med16$iso3!="AUS",]
cn<-as.data.table(cn)
cn[, yoabymed := med*yoa]
medsum<-cn[,.(medsum=sum(med))]
yoasum<-cn[,.(yoasum=sum(yoabymed))]
2016-(yoasum/medsum)






















# Number estimated to have LTBI
a<-A200[[3]]
b<-A5k[[3]]
a<-a[,c(1,4:204)] %>%
  group_by(age) %>% # aggregating by iso3 
  summarise_all(funs(sum))
ADT<-a[,c(1,2,5,6)]
a<-a[,7:208]
a<- do.call(rbind, replicate(25, a, simplify=FALSE))
a<-cbind(ADT,a)


colsumfunc<-function(dt) {
  cols<-colSums(dt[,7:5006])
  cols<-as.data.frame(cols)
}
Asum5k<-lapply(A5k, function(DT) {
  iso3.split <- split(DT, DT$iso)
  out <- sapply(iso3.split, colsumfunc)
})
Asum5k<-lapply(Asum5k, function(DT) {
  Reduce(`+`, DT)
})
Asum5k<-lapply(Asum5k, as.data.frame)

Osum<-lapply(seq_along(Asum5k),function(i)
  unlist(Asum5k[i])+unlist(Asum200[i]))
rm(Asum200,Asum5k)
Osum<-lapply(Osum, as.data.frame)
Osumf<-rbindlist(Osum, idcol = "year")
Osumf$year[Osumf$year=="1"]<-"2006"
Osumf$year[Osumf$year=="2"]<-"2011"
Osumf$year[Osumf$year=="3"]<-"2016"
Osumf<-as.data.frame(Osumf)
colnames(Osumf)[2] <- "V1"

options(scipen=5)
dev.off()
#complete column analysis
ggplot(Osumf, aes(x=year, y=V1)) +
  geom_boxplot(fill='gray', color="black") + #Fatten=NULL removes median line
  labs(x = "Year", y = "Estimated number with LTBI") +
  #geom_jitter(width = 0.2)+
  scale_y_continuous(breaks = seq(0, 3000000, 250000),limits= c(0, 2750000))+
  #to turn the background white
  theme_bw()
#geom_errorbar(data=totmed, aes(y=NULL, ymax=df, ymin=df), colour="black")

Osumf<-as.data.table(Osumf)
medO<-Osumf[,.(med=median(V1)),by=year] 
# 2006 - 756878
# 2011 - 886116
# 2016 - 999976

sumO5pop<-lapply(A5k,function(df){
  sumO5pop<-sum(df$pop)
})
sumOpop<-lapply(A200,function(df){
  sumOpop<-sum(df$pop)
})
Osumpop<-lapply(seq_along(sumO5pop),function(i)
  unlist(sumO5pop[i])+unlist(sumOpop[i]))
rm(sumOpop,sumO5pop)

Osumf$pop[Osumf$year==2006]<-unlist(Osumpop[1])
Osumf$pop[Osumf$year==2011]<-unlist(Osumpop[2])
Osumf$pop[Osumf$year==2016]<-unlist(Osumpop[3])
Osumf$pct<-(Osumf$V1/Osumf$pop)*100

Osumf[,.(med=median(V1)),by=year]
Osumf[,.(med=twentyfifth(V1)),by=year] 
Osumf[,.(med=seventyfifth(V1)),by=year] 

Osumf[,.(med=median(pct)),by=year]
Osumf[,.(med=twentyfifth(pct)),by=year] 
Osumf[,.(med=seventyfifth(pct)),by=year] 




# Percentage estimated to have LTBI in each age-group
#Overseas-born group first
sum20016<-A200[[3]]
sum20016<-as.data.table(sum20016)
sum20016<-sum20016[,c(1,2,5:206)]
sum20016<-sum20016[,c(1,4:204)] %>%
  group_by(age) %>% # aggregating by iso3 
  summarise_all(funs(sum))
ADT<-sum20016[,1:2]
sum20016<-sum20016[,3:202]
sum20016<- do.call(cbind, replicate(25, sum20016, simplify=FALSE))
sum20016<-cbind(ADT,sum20016)
#Rename column variables in Austrisk
Vcolnam <- paste0(c("V"),1:5000)
colnames(sum20016)[3:5002] <- Vcolnam

sum5k16<-A5k[[3]]
sum5k16<-as.data.table(sum5k16)
sum5k16<-sum5k16[,c(1,2,5:5006)]
sum5k16<-sum5k16[,c(1,4:5004)] %>%
  group_by(age) %>% # aggregating by iso3 
  summarise_all(funs(sum))
ob<-rbind(sum5k16,sum20016)
ob<-ob %>%
  group_by(age) %>% # aggregating by iso3 
  summarise_all(funs(sum))




cnty<-c("IND", "CHN", "PHL", "VNM", "ZAF", "IDN","KHM","KOR","MMR","PAK")
'%!in%' <- function(x,y)!('%in%'(x,y))


sum20016a<-sum20016[sum20016$iso %in% cnty,]
sum20016b<-sum20016[sum20016$iso %!in% cnty,]

sum20016a<-sum20016a[,c(1,2,5:206)]
sum20016b<-sum20016b[,c(1,2,5:206)]



ADT<-sum20016a[,1:4]
sum20016a<-sum20016a[,5:204]
sum20016a<- do.call(cbind, replicate(25, sum20016a, simplify=FALSE))
sum20016a<-cbind(ADT,sum20016a)
#Rename column variables in Austrisk
Vcolnam <- paste0(c("V"),1:5000)
colnames(sum20016a)[3:5002] <- Vcolnam

ADT<-sum20016b[,1:4]
sum20016b<-sum20016b[,5:204]
sum20016b<- do.call(cbind, replicate(25, sum20016b, simplify=FALSE))
sum20016b<-cbind(ADT,sum20016b)
#Rename column variables in Austrisk
Vcolnam <- paste0(c("V"),1:5000)
colnames(sum20016b)[3:5002] <- Vcolnam



sum5k16a<-sum5k16[sum5k16$iso %in% cnty,]
sum5k16b<-sum5k16[sum5k16$iso %!in% cnty,]

sum5k16a<-sum5k16a[,c(1,2,5:5006)]
sum5k16b<-sum5k16b[,c(1,2,5:5006)]


other<-rbind(sum5k16b,sum20016b)
other<-other %>%
  group_by(age) %>% # aggregating by iso3 
  summarise_all(funs(sum))


# Percentage of all estimated LTBI in Australia
#all LTBI in Aust = medpop[3]

A20016<-A200[[3]]
A20016<-A20016[A20016$iso %in% cnty,]
A5k16<-A5k[[3]]
A5k16<-A5k16[A5k16$iso %in% cnty,]

A5k16<-A5k16[,c(5,7:5006)] %>%
  group_by(iso3) %>% # aggregating by iso3 
  summarise_all(funs(sum))
A5k16$med<-apply(A5k16[,2:5001], 1, median)
A5k16<-A5k16[,c(1,5001,5002)]

A20016<-A20016[,c(5,7:206)] %>%
  group_by(iso3) %>% # aggregating by iso3 
  summarise_all(funs(sum))
A20016$med<-apply(A20016[,2:201], 1, median)
A20016<-A20016[,c(1,201,202)]

pctallfunc<-function(dt) {
  sumLTBI<-sum(dt$med)
  pct<-(sumLTBI/medpop[[3]])*100
}
iso3.split <- split(A20016, A20016$iso3)
out <- sapply(iso3.split, pctallfunc)
out

iso3.split <- split(A5k16, A5k16$iso3)
out <- sapply(iso3.split, pctallfunc)
out


#average year of arrival function
yoafunc<-function(dt) {
  sumLTBI<-sum(dt$med)
  dt$yoamed<-dt$yoa*dt$med
  sumyoamed<-sum(dt$yoamed)
  avyoa<-sumyoamed/sumLTBI
  avyoa<-2016-avyoa
}
iso3.split <- split(sum20016, sum20016$iso3)
out <- sapply(iso3.split, yoafunc)
out


yoa5k16<-sum5k16[,c(2:5004)] %>%
  group_by(iso3,yoa) %>% # aggregating by yoa 
  summarise_all(funs(sum))

yoa5k16$med<-apply(yoa5k16[,4:5003], 1, median)
yoa5k16<-yoa5k16[,c(1,2,3,5004)]
iso3.split <- split(yoa5k16, yoa5k16$iso3)
out <- sapply(iso3.split, yoafunc)
out



# Average age of resident with LTBI
avagefunc<-function(dt) {
  sumLTBI<-sum(dt$med)
  #dt[dt$age == 0,"age":=1]
  dt$agemed<-dt$age*dt$med
  sumagemed<-sum(dt$agemed)
  #dt[dt$age == 1,"age":=0]
  avage<-sumagemed/sumLTBI
}
iso3.split <- split(sum20016, sum20016$iso)
out <- sapply(iso3.split, avagefunc)
out
out<-t(out)


sumLTBI<-sum(check$med)
dt[dt$age == 0,"age":=0.5]
check$yoamed<-check$age*check$med
sumagemed<-sum(check$agemed)
dt[dt$age == 0.5,"age":=0]
avage<-sumagemed/sumLTBI


# Percentage by agegroup
sum20016$agegroup <- as.character(cut(sum20016$age, breaks=c(-1,14,34,64,115),
                                     labels=c('0-14', '15-34', '35-64', '65+')))
sum20016<-sum20016[,c(1,206,2,3,4,5:205)]
aggpfunc<-function(dt) {
  dt<-dt[,c(2,5,6)] %>%
    group_by(agegroup) %>% # aggregating by cob 
    summarise_all(funs(sum))
  dt$pct<-(dt$med/dt$pop)*100
}

iso3.split <- split(sum20016, sum20016$iso)
out <- sapply(iso3.split, aggpfunc)
out
out<-t(out)
out


sum5k16$agegroup <- as.character(cut(sum5k16$age, breaks=c(-1,14,34,64,115),
                                      labels=c('0-14', '15-34', '35-64', '65+')))
sum5k16<-sum5k16[,c(1,5005,2,3,4,5:5004)]

agp5k16<-sum5k16[,c(2:5005)] %>%
  group_by(iso3,agegroup) %>% # aggregating by yoa 
  summarise_all(funs(sum))
agp5k16$yoa<-NULL

agp5k16$med<-apply(agp5k16[,4:5003], 1, median)
agp5k16<-agp5k16[,c(1,2,3,5004)]

aggpfunc<-function(dt) {
  dt<-dt[,c(2:4)] %>%
    group_by(agegroup) %>% # aggregating by cob 
    summarise_all(funs(sum))
  dt$pct<-(dt$med/dt$pop)*100
}

iso3.split <- split(agp5k16, agp5k16$iso3)
out <- sapply(iso3.split, aggpfunc)
out
out<-t(out)
out
















 
<-DT[,.(med=sum(med)),by=iso3]
DT$yoamed<-DT$yoa*DT$med
DT[,.(med=seventyfifth(pctallLTBI)),by=cob]


Asum200<-lapply(Asum200, function(DT) {
  Reduce(`+`, DT)
})

Asum200<-lapply(Asum200, function(DT) {
  ADT<-DT[,1:3]
  DT<-DT[,4:203]
  DT<- do.call(cbind, replicate(25, DT, simplify=FALSE))
  DT<-cbind(ADT,DT)
})
tab5k<-lapply(A5k, function(DT){
  DT<-DT[,c(1,2,5,7:5006)] 
})

DT<-DT[DT$iso %in% cnty,]

Asum200<-lapply(Asum200, function(DT) {
  DT<-DT %>%
    group_by(age) %>% # aggregating by cob 
    summarise_all(funs(sum))
})

Asum200<-lapply(Asum200, function(DT) {
  ADT<-DT[,1]
  DT<-DT[,2:201]
  DT<- do.call(cbind, replicate(25, DT, simplify=FALSE))
  DT<-cbind(ADT,DT)
})


Asum5k<-lapply(A5k, function(DT) {
  iso3.split <- split(DT, DT$iso)
  out <- sapply(iso3.split, colsumfunc)
})

Asum5k<-lapply(Asum5k, function(DT) {
  Reduce(`+`, DT)
})

fig25k<-lapply(seq_along(fig25k),function(i)
  (rbind(fig25k[i],Asum200[i])))
fig25k<-lapply(fig25k, function(DT){
  rbindlist(DT)
})
fig25k<-lapply(fig25k, function(DT){
  DT<-DT %>%
    group_by(age) %>% # aggregating by cob 
    summarise_all(funs(sum))
})
fig2Ab<-lapply(Ab5k, function(DT) {
  DT<-as.data.table(DT)
  DT<-DT[,c(1,7:5006)]
  DT<-DT %>%
    group_by(age) %>% # aggregating by cob 
    summarise_all(funs(sum))
})
fig2Ab<-lapply(fig2Ab, function(DT) {
  DT$iso3<-"Australian-born"
  DT
})
fig25k<-lapply(fig25k, function(DT) {
  DT$iso3<-"Overseas-born"
  DT
})


# Analysing the entire dateset by cob and agegroup
numLTBI$agegroup <- as.character(cut(numLTBI$age, breaks=c(-1,9,19,29,39,49,59,69,79,89,99,109),
                                     labels=c('0-9', '10-19', '20-29', '30-39', '40-49','50-59','60-69','70-79','80-89','90-99','100+' )))
numLTBI<-numLTBI[c(1,2,207,3,4,5,6,7:206)]
numLTBI<-numLTBI[c(1,2,4,5,6,3,8:207)]
numLTBI<-numLTBI[c(1,2,4,5,3,6,7:206)]












#summing down the replicate columns
#to plot histogram to see if it is normal somehow?
sum5k16<-A5k16[, lapply(.SD, sum, na.rm=TRUE), .SDcols=c(7:5006) ] 
sum5k16<-t(sum5k16)
sum5k16<-as.data.frame(sum5k16)

A5k16<-A5k16[, lapply(.SD, sum, na.rm=TRUE), .SDcols=c(7:5006) ] 
A5k16<-t(A5k16)
A5k16<-as.data.frame(A5k16)

options(scipen=5)
dev.off()
ggplot(A5k16,aes(V1))+
  geom_histogram() 

labs(x = "Country of birth", y = "Estimated number of overseas-born with LTBI")+
  #geom_jitter(width = 0.2)+
  scale_y_continuous(breaks = seq(0, 210000, 20000),limits= c(0, 210000))+
  #to turn the background white
  theme_bw()+
  #to put x axis text at an angle
  theme(text = element_text(size=20),#changes the size of text
        axis.text.x=element_text(angle=45,hjust=1)) 
#geom_errorbar(data=totmed, aes(y=NULL, ymax=df, ymin=df), colour="black")



Arisk<-lapply(Arisk, function(df) {
  df<-df[,c(1,2,3,4,5,6,7,8,9,210,10:209)] # get the median column to the front
  #Adding the agegroup variable 
  df$agegroup <- as.character(cut(df$age, breaks=c(-1,9,19,29,39,49,59,69,79,
                                                   89,99,109),
                                  labels=c('0-9', '10-19', '20-29', 
                                           '30-39', '40-49','50-59',
                                           '60-69','70-79','80-89',
                                           '90-99','100+' )))
  df<-df[c(1,2,211,3,4,5,6,7,8,9,10,11:210)]
})
Arisk<-lapply(Arisk, function(df) {
  #Adding the age at arrival variable to the risk dataset...
  df$ysa<-2016-df$yoa
  df$aaa<-df$age-df$ysa
  df<-df[,c(1,2,3,4,5,6,212,213,7:211)]
  df$aaag <- as.character(cut(df$aaa, breaks=c(-1,9,19,29,39,49,59,69,79,
                                               89,99,109),
                              labels=c('0-9', '10-19', '20-29', 
                                       '30-39', '40-49','50-59',
                                       '60-69','70-79','80-89',
                                       '90-99','100+' )))
  df<-df[c(1,2,3,4,5,6,7,8,214,9:213)]
  df$medg <- as.character(cut(df$med, 
                              breaks=c(0.00001,0.0001,
                                       0.001,0.01,0.1,0.2,
                                       0.3,0.4,0.5,0.6,0.7,0.8,
                                       0.9,1.0),
                              labels=c('<0.0001', '0.00011-0.001',  
                                       '0.0011-0.01','0.011-0.1',
                                       '0.11-0.2','0.21-0.3',
                                       '0.31-0.4','0.41-0.5',
                                       '0.51-0.6','0.61-0.7',
                                       '0.71-0.8','0.81-0.9','0.91-1.0')))
  df<-df[c(1,2,3,4,5,6,7,8,9,215,10:214)]
  df
})  






Arisk<-lapply(Arisk, function(df) {
  df<-as.data.frame(df)
  df$pop<-as.numeric(df$pop)
  df$age<-as.numeric(df$age)
  df$yoa<-as.numeric(df$yoa)
  df$yob<-as.numeric(df$yob)
  df$cob<-as.character(df$cob)
  df$iso3<-as.character(df$iso3)
  df$cob[df$iso3 == "GBR"]<-"Great Britain"
  df$cob[df$iso3 == "CHN"]<-"China"
  df$cob[df$iso3 == "PHL"]<-"Philippines"
  df$cob[df$iso3 == "ZAF"]<-"South Africa"
  df$cob[df$iso3 == "NZL"]<-"New Zealand"
  df$cob[df$iso3 == "SDN"]<-"Sudan"
  df$cob[df$iso3 == "IND"]<-"India"
  df$cob[df$iso3 == "ZAF"]<-"South Africa"
  df$cob[df$iso3 == "MYS"]<-"Malaysia"
  df$cob[df$iso3 == "SOM"]<-"Philippines"
  df$cob[df$iso3 == "SOM"]<-"Vietnam"
  df$cob[df$iso3 == "SOM"]<-"Somalia"
  df$cob[df$iso3 == "RUS"]<-"Russian Federation"
  df$cob[df$iso3 == "COD"]<-"Democratic Republic of Congo"
  df$cob[df$iso3 == "THA"]<-"Thailand"
  df$cob[df$iso3 == "PNG"]<-"Papua New Guinea"
  df$cob[df$iso3 == "HKG"]<-"Hong Kong"
  df$cob[df$iso3 == "LKA"]<-"Sri Lanka"
  df$cob[df$iso3 == "KOR"]<-"South Korea"
  #df$id<-NULL #remove and create a new id colum
  df<-df[order(df["iso3"],df$yob,df$yoa), ] #order them properly
  df$id <- seq.int(nrow(df)) #add id column
  df<- df[c(207,1:206)] # move it to the front of dataset
  #add an agegroup varable
  df$agegroup2 <- as.character(cut(df$age, breaks=c(-1,19,39,59,79,109),
                                   labels=c('0-19', '20-39', '40-59',
                                            '60-79','80+' )))
  df<-df[c(1,2,208,3:207)]
  #add a variable grouping year of arrival
  df$yoag <- as.character(cut(df$yoa, breaks=c(1899,1909,1919,1929,1939,1949,1959,1969,1979,
                                               1989,1999,2009,2019),
                              labels=c('1900-1909', '1910-1919', '1920-1929', 
                                       '1930-1939', '1940-1949','1950-1959',
                                       '1960-1969','1970-1979','1980-1989',
                                       '1990-1999','2000-2009','2010-2019')))
  df<-df[c(1,2,3,4,209,5:208)]
}) 


Arisk<-lapply(Arisk, function(df) {
  #Add the median risk 
  df$med<-apply(df[,10:209], 1, median) # find the median risk for each row
  df
})
Arisk<-lapply(Arisk, function(df) {
  df<-df[,c(1,2,3,4,5,6,7,8,9,210,10:209)] # get the median column to the front
  #Adding the agegroup variable 
  df$agegroup <- as.character(cut(df$age, breaks=c(-1,9,19,29,39,49,59,69,79,
                                                   89,99,109),
                                  labels=c('0-9', '10-19', '20-29', 
                                           '30-39', '40-49','50-59',
                                           '60-69','70-79','80-89',
                                           '90-99','100+' )))
  df<-df[c(1,2,211,3,4,5,6,7,8,9,10,11:210)]
})
Arisk<-lapply(Arisk, function(df) {
  #Adding the age at arrival variable to the risk dataset...
  df$ysa<-2016-df$yoa
  df$aaa<-df$age-df$ysa
  df<-df[,c(1,2,3,4,5,6,212,213,7:211)]
  df$aaag <- as.character(cut(df$aaa, breaks=c(-1,9,19,29,39,49,59,69,79,
                                                89,99,109),
                              labels=c('0-9', '10-19', '20-29', 
                                       '30-39', '40-49','50-59',
                                       '60-69','70-79','80-89',
                                       '90-99','100+' )))
  df<-df[c(1,2,3,4,5,6,7,8,214,9:213)]
  df$medg <- as.character(cut(df$med, 
                              breaks=c(0.00001,0.0001,
                                       0.001,0.01,0.1,0.2,
                                       0.3,0.4,0.5,0.6,0.7,0.8,
                                       0.9,1.0),
                              labels=c('<0.0001', '0.00011-0.001',  
                                       '0.0011-0.01','0.011-0.1',
                                       '0.11-0.2','0.21-0.3',
                                       '0.31-0.4','0.41-0.5',
                                       '0.51-0.6','0.61-0.7',
                                       '0.71-0.8','0.81-0.9','0.91-1.0')))
  df<-df[c(1,2,3,4,5,6,7,8,9,215,10:214)]
  df
})  


#Creating a dataset with the number estimated to have LTBI
Alistnum<-lapply(Arisk, function(df){
  risks<-df[,16:215]
  num<-sapply(risks,function (v) {
    v*df$pop
  })
  num
})

Alistnum<-lapply(Alistnum, function(df){
  df<-as.data.frame(df)
  df$id <- seq.int(nrow(df))
  df<- df[c(201,1:200)]
  df
})

Alistbase<-lapply(Arisk, function(df){
  df<- df[c(1:14)]
  df
})
#the ultimate dataset containing numbers with LTBI
Anum <- mapply(function(x, y) merge(x, y,  by = c('id'), all = T), 
               x = Alistbase, y = Alistnum, SIMPLIFY = F)

#Adding median number variable to the Anum dataset...
Anum<-lapply(Anum, function(df){
  #median of 200 replicates
  df$med<-apply(df[,15:214], 1, median) # find the median number for each row
  df<-df[,c(1,2,3,4,5,6,7,8,9,10,11,12,13,215,14:214)] # get the median column to the fr
  df
})









###END OF DATA PREP. ANALYSIS FOLLOWS...







###Determining the number of replicates - exploring standard error, median, IQR etc

#Plotting number with LTBI by cob, showing IQR
#column sum
AUSm<-Anum[[3]]
AUSm$cob[AUSm$iso3 == "PNG"]<-"Papua New Guinea"
AUSm$cob[AUSm$iso3 == "HKG"]<-"Hong Kong"
AUSm$cob[AUSm$iso3 == "LKA"]<-"Sri Lanka"
AUSm$cob[AUSm$iso3 == "KOR"]<-"South Korea"
#AUSm<-Anum[[3]]
AUSm<-AUSm[,c(11,16:215)]
AUSm<-AUSm %>%
  group_by(cob) %>% # aggregating by cob 
  summarise_all(funs(sum))
AUSm$median<-apply(AUSm[,2:201], 1, median)
#Ordering cob variable by the median number
AUSm$cob <- factor(AUSm$cob,
                    levels=unique(AUSm$cob[order(AUSm$median)],
                                  decreasing = TRUE), 
                    ordered=TRUE)
AUSm$cob = with(AUSm, factor(cob, levels = rev(levels(cob))))
# subset to top 10 cob
cobtop<-head(sort(AUSm$cob),20)
AUSm<-AUSm[AUSm$cob %in% cobtop,]
AUSm$median<-NULL
AUSm<-melt(AUSm)

#Ref 4f6y
options(scipen=5)
dev.off()
ggplot(AUSm[AUSm$cob!="Australia",], aes(cob, value))+
  geom_boxplot(fill='steelblue3', color="black") +
  labs(x = "Country of birth", y = "Estimated number with LTBI")+
  #geom_jitter(width = 0.2)+
  scale_y_continuous(breaks = seq(0, 210000, 20000),limits= c(0, 210000))+
  #to turn the background white
  theme_bw()+
  #to put x axis text at an angle
  theme(text = element_text(size=20),#changes the size of text
        axis.text.x=element_text(angle=45,hjust=1)) 
#geom_errorbar(data=totmed, aes(y=NULL, ymax=df, ymin=df), colour="black")


cnlist<-c("AUS","NZL","VNM","KHM","GBR","PHL","THA","LKA",
          "MYS","EGY","IND","CHN","ETH","ZWE","IDN",
          "SDN","PAK","AFG","NPL","MMR","PNG","BGD",
          "KOR")
AUSm<-AUSm[AUSm$iso3 %in% cnlist,]



#Plotting percentage with LTBI by cob, showing IQR
AUS<-Anum[[3]]
AUS$cob[AUS$iso3 == "BIH"]<-"Bosnia & Herzegovina"
AUS<-AUS[,c(11,12,16:215)]
AUSm<-AUS %>%
  group_by(cob) %>% # aggregating by cob 
  summarise_all(funs(sum))
percent<-function(v) {
  (v/AUSm$pop)*100
}
AUSID<-AUSm[,1]
AUSID$id <- seq.int(nrow(AUSID))
AUSm <- sapply(AUSm[,3:202], percent)
AUSm<- as.data.frame(AUSm)
AUSm$id <- seq.int(nrow(AUSm))
AUSm <- merge(AUSID, AUSm,by=c('id'))#Merging it to the Australia census data
AUSm$median<-apply(AUSm[,3:202], 1, median)
AUSp<-AUS[,1:2] %>%
  group_by(cob) %>% # aggregating by cob 
  summarise_all(funs(sum))
AUSm <- merge(AUSm, AUSp,by=c('cob'), all.x=TRUE, all.y=FALSE)
tail<-tail(sort(AUSm$pop),50)
AUSm<-AUSm[AUSm$pop %in% tail,]
#Ordering cob variable by the median number
AUSm$cob <- factor(AUSm$cob,
                    levels=rev(unique(AUSm$cob[order(AUSm$median)])),
                    ordered=TRUE)
# subset to top 10 cob
cobtop<-head(sort(AUSm$cob),20)
AUSm<-AUSm[AUSm$cob %in% cobtop,]
AUSm$median<-NULL
AUSm$id<-NULL
AUSm<-melt(AUSm)

#Ref 54tb
options(scipen=5)
dev.off()
ggplot(AUSm, aes(cob, value))+
  geom_boxplot(fill='steelblue3', color="black") +
  labs(x = "Country of birth", y = "Estimated percentage with LTBI")+
  #geom_jitter(width = 0.2)+
  scale_y_continuous(breaks = seq(0, 100, 10),limits= c(0, 100))+
  #to turn the background white
  theme_bw()+
  #to put x axis text at an angle
  theme(axis.text.x=element_text(angle=45,hjust=1))+
  theme(text = element_text(size=25))#changes the size of text

#Coming up with median, iqr values etc
AUS<-Anum[[1]]
AUS<-AUS[AUS$iso3 %in% cnlist,]
AUS<-AUS[,c(12,15:215)]
AUS<-AUS %>%
  group_by(iso3) %>% # aggregating by iso3 
  summarise_all(funs(sum))

twentyfifth<-lapply(cnlist,function(cb){
  sub<-AUS[AUS$iso3==cb,]
  sub<-sub[,3:202]
  med<-quantile(unlist(sub), c(.25))
})

med<-lapply(cnlist,function(cb){
  sub<-AUS[AUS$iso3==cb,]
  sub<-sub[,3:202]
  med<-quantile(unlist(sub), c(.5))
})

seventyfifth<-lapply(cnlist,function(cb){
  sub<-AUS[AUS$iso3==cb,]
  sub<-sub[,3:202]
  med<-quantile(unlist(sub), c(.75))
})

meancns<-lapply(cnlist,function(cb){
  sub<-AUS[AUS$iso3==cb,]
  sub<-sub[,3:202]
  mean<-mean(colsum)
})

stderror<-lapply(cnlist,function(cb){
  sub<-AUS[AUS$iso3==cb,]
  sub<-sub[,3:202]
  colsum<-colSums(sub)
  mean<-mean(colsum)
  SE<-sd(colsum)/sqrt(200)
})

stderrorpcnt<-lapply(cnlist,function(cb){
  sub<-AUS[AUS$iso3==cb,]
  sub<-sub[,3:202]
  colsum<-colSums(sub)
  mean<-mean(colsum)
  SE<-sd(colsum)/sqrt(200)
  percentage<-(SE/mean)*100
})

#Standard error compared to mean?
compare<-lapply(Anum, function(df){
  subgroup<-df[df$iso3=="AUS",]
  colsum<-colSums(subgroup[,16:215])
  mean<-mean(colsum)
  SE<-sd(colsum)/sqrt(200)
  percentage<-(SE/mean)*100
})
compare

df <- data.frame(cnlist, unlist(twentyfifth),unlist(med),unlist(seventyfifth))
colnames(df)[2] <- "25th"
colnames(df)[3] <- "med"
colnames(df)[4] <- "75th"

AUSlog<-log(AUS)
med<-median(AUSlog)
med<-mean(AUSlog)
SE<-sd(AUSlog)/sqrt(200)
percentage<-(SE/med)*100
med
SE<-exp(SE)
percentage
SE
check<-Apopsum[[1]]





#NUMBER OF AUSTRALIANS WITH LTBI - ROW - MEDIAN, COLUMN  - Uncertainty  
#Figure 1 - first panel
##get the uncertainty by summing by column
Apopsum<-lapply(Anum, function(df){
  df<-colSums(df[,16:215])
  df<-as.data.frame(df)
})
Apop<-rbindlist(Apopsum, idcol = "year")
Apop$year[Apop$year=="1"]<-"2006"
Apop$year[Apop$year=="2"]<-"2011"
Apop$year[Apop$year=="3"]<-"2016"


##get the row medians and sum
totmed<-lapply(Anum, function(df){
  df<-sum(df$med)
  df<-as.data.frame(df)
})
totmed<-rbindlist(totmed, idcol = "year")
totmed$year[totmed$year=="1"]<-"2006"
totmed$year[totmed$year=="2"]<-"2011"
totmed$year[totmed$year=="3"]<-"2016"
#2006 - 769993.2
#2011 - 908081.9
#2016 - 1036027.2
sumpop<-lapply(Anum, function(df){
  df<-sum(df$pop)
  df
})
sumpop
#2006 - 18,265,751
#2011 - 20,067,595
#2016 - 21,453,165

#Chi square test - goodness of fit
#for number with LTBI in Australia
#observed frequencies:
#2016 - 1036027.2/21,453,165= 0.0482925
observed <- c(1036027.2, 20417137.8)
#expected proportions:
#2006 - 769993.2/18,265,751= 0.042155
expected <- c(0.042155, 0.957845)   
chitest<-chisq.test(x = observed,p = expected)
chitest
chitest$expected

options(scipen=5)
dev.off()
#complete column analysis
ggplot(Apop, aes(x=year, y=df)) +
  geom_boxplot(fill='gray', color="black") + #Fatten=NULL removes median line
  labs(x = "Year", y = "Estimated number with LTBI") +
  geom_jitter(width = 0.2)+
  scale_y_continuous(breaks = seq(0, 4000000, 1000000),limits= c(0, 4000000))+
  #to turn the background white
  theme_bw()+
  #geom_errorbar(data=totmed, aes(y=NULL, ymax=df, ymin=df), colour="black")
  theme(text = element_text(size=30))#changes the size of text



##Excluding outliers
ggplot(Apop, aes(x=year, y=df)) +
  #Fatten=NULL removes median line #,outlier.shape=NA removes outliers line
  geom_boxplot(fill='gray', color="black",outlier.shape=NA) + 
  labs(x = "Year", y = "Estimated number with LTBI") +
  #geom_jitter(width = 0.2)+
  scale_y_continuous(breaks = seq(0, 4000000, 1000000),limits= c(0, 4000000))+
  #to turn the background white
  theme_bw()+
  theme(text = element_text(size=30))#changes the size of text
      #to put y axis text at an angle
      #axis.text.y=element_text(angle=45,hjust=1)) 

#PERCENTAGE OF AUSTRALIANS WITH LTBI - ROW - MEDIAN, COLUMN  - Uncertainty 
#Figure 1 - second panel
percent<-lapply(Anum, function(df){
  pop<-sum(df$pop)
  sumLTBI<-colSums(df[,16:215])
  LTBIpercent<-sapply(sumLTBI[1:200], function(v) {
    (v/pop)*100
  })
  LTBIpercent<-as.data.frame(LTBIpercent)
})
percent<-rbindlist(percent, idcol = "year")
percent$year[percent$year=="1"]<-"2006"
percent$year[percent$year=="2"]<-"2011"
percent$year[percent$year=="3"]<-"2016"

##get the row medians and sum
medpcnt<-lapply(Anum, function(df){
  pop<-sum(df$pop)
  med<-sum(df$med)
  medpercent<-(med/pop)*100
  medpercent<-as.data.frame(medpercent)
})
medpcnt<-rbindlist(medpcnt, idcol = "year")
medpcnt$year[medpcnt$year=="1"]<-"2006"
medpcnt$year[medpcnt$year=="2"]<-"2011"
medpcnt$year[medpcnt$year=="3"]<-"2016"
#2006 - 4.215503
#2011 - 4.525116
#2016 - 4.829251

dev.off()
##With jitter plots
ggplot(percent, aes(x=year, y=LTBIpercent)) +
  geom_boxplot(fill='gray', color="black") + #Fatten=NULL removes median line
  labs(x = "Year", y = "Estimated percentage with LTBI") +
  geom_jitter(width = 0.2)+
  scale_y_continuous(breaks = seq(0, 21, 2), limits= c(0, 20.5))+
  #to turn the background white
  theme_bw()+
  theme(text = element_text(size=30))

##Excluding outliers
ggplot(percent, aes(x=year, y=LTBIpercent)) +
  #Fatten=NULL removes median line #,outlier.shape=NA removes outliers line
  geom_boxplot(fill='gray', color="black",outlier.shape=NA) + 
  labs(x = "Year", y = "Estimated percentage with LTBI") +
  #geom_jitter(width = 0.2)+
  scale_y_continuous(breaks = seq(0, 21, 2), limits= c(0, 20.5))+
  #to turn the background white
  theme_bw()+
  theme(text = element_text(size=30))



#NUMBER OF AUSTRALIAN-BORN WITH LTBI 
#ROW ANALYSIS 
numAb<-lapply(Anum, function(df){
  nm<-df[df$iso3=="AUS",]
  med<-sum(nm$med) 
})
numAb
#2006 - 134538.1
#2011 - 142090.2
#2016 - 147526.3

#COLUMN ANALYSIS 
distAB<-lapply(Anum, function(df){
  df<-df[df$iso3=="AUS",]
  df<-colSums(df[,16:215])
  df<-as.data.frame(df)
})
AApop<-rbindlist(distAB, idcol = "year")
AApop$year[AApop$year=="1"]<-"2006"
AApop$year[AApop$year=="2"]<-"2011"
AApop$year[AApop$year=="3"]<-"2016"

summary(AApop[AApop$year=="2006",])
summary(AApop[AApop$year=="2011",])
summary(AApop[AApop$year=="2016",])

sumApop<-lapply(Anum, function(df){
  nm<-df[df$iso3=="AUS",]
  pop<-sum(nm$pop)
})
sumApop
#2006 - 14072880
#2011 - 15021670
#2016 - 15615550



options(scipen=5)
dev.off()
#complete column analysis
ggplot(AApop, aes(x=year, y=df)) +
  geom_boxplot(fill='gray', color="black") + #Fatten=NULL removes median line
  labs(x = "Year", y = "Estimated number with LTBI") +
  geom_jitter(width = 0.2)+
  scale_y_continuous(breaks = seq(0, 3000000, 500000),limits= c(0, 3000000))+
  #to turn the background white
  theme_bw()
#geom_errorbar(data=totmed, aes(y=NULL, ymax=df, ymin=df), colour="black")

##Excluding outliers
ggplot(AApop, aes(x=year, y=df)) +
  #Fatten=NULL removes median line #,outlier.shape=NA removes outliers line
  geom_boxplot(fill='gray', color="black",outlier.shape=NA) + 
  labs(x = "Year", y = "Estimated number with LTBI") +
  #geom_jitter(width = 0.2)+
  scale_y_continuous(breaks = seq(0, 3000000, 250000),limits= c(0, 1500000))+
  #to turn the background white
  theme_bw()+
  theme(text = element_text(size=30))

#Chi square test - goodness of fit
#Column analysis
#for number with LTBI in Australian-born
#observed frequencies:
#2016 - number with LTBI, sumpop-number with LTBI=number without LTBI
#2016 - 147526.3, 15615550-147526.3= 15468023.7
observed <- c((median(AApop$df[AApop$year=="2016"])), 
              (sumApop[[3]]-(median(AApop$df[AApop$year=="2016"]))))
#expected proportions:
#2006- number with LTBI/popsum=expected proportion, 1-expected proportion
expected <- c((median(AApop$df[AApop$year=="2016"]))/sumApop[[1]],
            (1-(median(AApop$df[AApop$year=="2016"]))/sumApop[[1]]))
chitest<-chisq.test(x = observed,p = expected)
chitest
chitest$expected


#PERCENTAGE OF AUSTRALIAN BORNS WITH LTBI 
#ROW ANALYSIS 
percentAB<-lapply(Anum, function(df){
  pop<-sum(df$pop[df$iso3=="AUS"])
  nm<-df[df$iso3=="AUS",]
  med<-sum(nm$med) 
  medpercent<-(med/pop)*100
})
percentAB
#2006 - 0.956%
#2011 - 0.946%
#2016 - 0.945%

#COLUMN ANALYSIS 
percentAB<-lapply(Anum, function(df){
  df<-df[df$iso3=="AUS",]
  df<-as.data.frame(df)
  pop<-sum(df$pop)
  sumLTBI<-colSums(df[,16:215])
  LTBIpercent<-sapply(sumLTBI[1:200], function(v) {
    (v/pop)*100
  })
  LTBIpercent<-as.data.frame(LTBIpercent)
})
percentAB<-rbindlist(percentAB, idcol = "year")
percentAB$year[percentAB$year=="1"]<-"2006"
percentAB$year[percentAB$year=="2"]<-"2011"
percentAB$year[percentAB$year=="3"]<-"2016"

summary(percentAB[percentAB$year=="2006",])
summary(percentAB[percentAB$year=="2011",])
summary(percentAB[percentAB$year=="2016",])

options(scipen=5)
dev.off()
#complete column analysis
ggplot(percentAB, aes(x=year, y=LTBIpercent)) +
  geom_boxplot(fill='gray', color="black") + #Fatten=NULL removes median line
  labs(x = "Year", y = "Estimated percentage with LTBI") +
  geom_jitter(width = 0.2)+
  scale_y_continuous(breaks = seq(0, 100, 2),limits= c(0, 27))+
  #to turn the background white
  theme_bw()+
  theme(text = element_text(size=30))

##Excluding outliers
ggplot(percentAB, aes(x=year, y=LTBIpercent)) +
  #Fatten=NULL removes median line #,outlier.shape=NA removes outliers line
  geom_boxplot(fill='gray', color="black",outlier.shape=NA) + 
  labs(x = "Year", y = "Estimated percentage with LTBI") +
  #geom_jitter(width = 0.2)+
  scale_y_continuous(breaks = seq(0, 100, 2),limits= c(0, 27))+
  #to turn the background white
  theme_bw()+
  theme(text = element_text(size=30))


#NUMBER OF OVERSEAS-BORN WITH LTBI 
#ROW ANALYSIS 
numO<-lapply(Anum, function(df){
  nm<-df[df$iso3!="AUS",]
  med<-sum(nm$med) 
})
numO
#2006 - 635455.1 (635455.1/769993.2)*100=82.53%
#2011 - 765991.7 (765991.7/908081.9)*100=84.35%
#2016 - 888500.9 (888500.9/1036027.2)*100=85.76%
(numO[[1]]/sumOpop[[1]])*100
#2006 - 15.16%
(numO[[2]]/sumOpop[[2]])*100
#2011 - 13.18%
(numO[[3]]/sumOpop[[3]])*100
#2016 - 15.22%


#COLUMN ANALYSIS 
distOB<-lapply(Anum, function(df){
  df<-df[df$iso3!="AUS",]
  df<-colSums(df[,16:215])
  df<-as.data.frame(df)
})
OBpop<-rbindlist(distOB, idcol = "year")
OBpop$year[OBpop$year=="1"]<-"2006"
OBpop$year[OBpop$year=="2"]<-"2011"
OBpop$year[OBpop$year=="3"]<-"2016"

summary(OBpop[OBpop$year=="2006",])
summary(OBpop[OBpop$year=="2011",])
summary(OBpop[OBpop$year=="2016",])
#2006 - median number - 769446
#2011 - median number - 895959
#2016 - median number - 1010671

sumOpop<-lapply(Anum, function(df){
  nm<-df[df$iso3!="AUS",]
  pop<-sum(nm$pop)
})
sumOpop
#2006 - 4192871
#2011 - 5045925
#2016 - 5837615

options(scipen=5)
dev.off()
#complete column analysis
ggplot(OBpop, aes(x=year, y=df)) +
  geom_boxplot(fill='gray', color="black") + #Fatten=NULL removes median line
  labs(x = "Year", y = "Estimated number with LTBI") +
  geom_jitter(width = 0.2)+
  scale_y_continuous(breaks = seq(0, 1500000, 250000),limits= c(14, 1500000))+
  #to turn the background white
  theme_bw()+
  theme(text = element_text(size=30))
#geom_errorbar(data=totmed, aes(y=NULL, ymax=df, ymin=df), colour="black")

##Excluding outliers
ggplot(OBpop, aes(x=year, y=df)) +
  #Fatten=NULL removes median line #,outlier.shape=NA removes outliers line
  geom_boxplot(fill='gray', color="black",outlier.shape=NA) + 
  labs(x = "Year", y = "Estimated number with LTBI") +
  #geom_jitter(width = 0.2)+
  scale_y_continuous(breaks = seq(0, 1500000, 250000),limits= c(14, 1500000))+
  #to turn the background white
  theme_bw()+
  theme(text = element_text(size=30))
#geom_errorbar(data=medpcnt, aes(y=NULL, ymax=medpercent, ymin=medpercent), colour="black")


#Chi square test - goodness of fit
#Column analysis
#for number with LTBI in Overseas-born
#observed frequencies:
#2016 - number with LTBI, sumpop-number with LTBI=number without LTBI
observed <- c((median(OBpop$df[OBpop$year=="2016"])), 
              (sumOpop[[3]]-(median(OBpop$df[OBpop$year=="2016"]))))
#expected proportions:
#2006- number with LTBI/popsum=expected proportion, 1-expected proportion
expected <- c((median(OBpop$df[OBpop$year=="2016"]))/sumOpop[[1]],
              (1-(median(OBpop$df[OBpop$year=="2016"]))/sumOpop[[1]]))
chitest<-chisq.test(x = observed,p = expected)
chitest
chitest$expected




#PERCENTAGE OF OVERSEASBORN AUSTRALIANS WITH LTBI - 
#ROW ANALYSIS 
percentOB<-lapply(Anum, function(df){
  pop<-sum(df$pop[df$iso3!="AUS"])
  nm<-df[df$iso3!="AUS",]
  med<-sum(nm$med) 
  medpercent<-(med/pop)*100
})
#2006 - 15.16%
#2011 - 15.18%
#2016 - 15.22%

#COLUMN ANALYSIS 
percentOB<-lapply(Anum, function(df){
  df<-df[df$iso3!="AUS",]
  df<-as.data.frame(df)
  pop<-sum(df$pop)
  sumLTBI<-colSums(df[,16:215])
  LTBIpercent<-sapply(sumLTBI[1:200], function(v) {
    (v/pop)*100
  })
  LTBIpercent<-as.data.frame(LTBIpercent)
})
percentOB<-rbindlist(percentOB, idcol = "year")
percentOB$year[percentOB$year=="1"]<-"2006"
percentOB$year[percentOB$year=="2"]<-"2011"
percentOB$year[percentOB$year=="3"]<-"2016"

summary(percentOB[percentOB$year=="2006",])
summary(percentOB[percentOB$year=="2011",])
summary(percentOB[percentOB$year=="2016",])

options(scipen=5)
dev.off()
#complete column analysis
ggplot(percentOB, aes(x=year, y=LTBIpercent)) +
  geom_boxplot(fill='gray', color="black") + #Fatten=NULL removes median line
  labs(x = "Year", y = "Estimated percentage with LTBI") +
  geom_jitter(width = 0.2)+
  scale_y_continuous(breaks = seq(0, 100, 2),limits= c(0, 27))+
  #to turn the background white
  theme_bw()+
  theme(text = element_text(size=30))
#geom_errorbar(data=totmed, aes(y=NULL, ymax=df, ymin=df), colour="black")

##Excluding outliers
ggplot(percentOB, aes(x=year, y=LTBIpercent)) +
  #Fatten=NULL removes median line #,outlier.shape=NA removes outliers line
  geom_boxplot(fill='gray', color="black",outlier.shape=NA) + 
  labs(x = "Year", y = "Estimated precentage with LTBI") +
  #geom_jitter(width = 0.2)+
  scale_y_continuous(breaks = seq(0, 100, 2),limits= c(0, 27))+
  #to turn the background white
  theme_bw()+
  theme(text = element_text(size=30))
#geom_errorbar(data=medpcnt, aes(y=NULL, ymax=medpercent, ymin=medpercent), colour="black")
















 

















#AUSTRALIAN BORN - RISK - using ROW ANALYSIS
#Figure 3
risk16<-Arisk[[3]]
Abyage<-lapply(Arisk, function(df){
  df<-df[df["iso3"]=="AUS",]
  df<-df[,c(2,11,215)]
  df<-as.data.frame(df)
})
Abyage<-rbindlist(Abyage, idcol = "year")
Abyage$year[Abyage$year=="1"]<-"2006"
Abyage$year[Abyage$year=="2"]<-"2011"
Abyage$year[Abyage$year=="3"]<-"2016"


risk11<-Arisk[[2]]
myColors <- colorRampPalette(brewer.pal(9,"Greys"))(13)
names(myColors) <- levels(risk11$medg)
colScale <- scale_fill_manual(name = "Median risk of latent TB",values = myColors)
col.list<-c("0.91-1.0"="#9E0142",
            "0.81-0.9"="#CB334C",
            "0.71-0.8"="#E95D47",
            "0.61-0.7"="#F88D51",
            "0.51-0.6"="#FDBE6E",
            "0.41-0.5"="#FEE593",
            "0.31-0.4"="#FFFFBF",
            "0.21-0.3"="#EAF69E",
            "0.11-0.2"="#BEE5A0",
            "0.011-0.1"="#88CFA4",
            "0.0011-0.01"="#54AEAC",
            "0.00011-0.001"="#397EB8",
            "<0.0001"="#5E4FA2")
grey.list<-c("0.91-1.0"="#000000",
            "0.81-0.9"="#181818",
            "0.71-0.8"="#343434",
            "0.61-0.7"="#525252",
            "0.51-0.6"="#686868",
            "0.41-0.5"="#7E7E7E",
            "0.31-0.4"="#969696",
            "0.21-0.3"="#B0B0B0",
            "0.11-0.2"="#C6C6C6",
            "0.011-0.1"="#D9D9D9",
            "0.0011-0.01"="#E8E8E8",
            "0.00011-0.001"="#F5F5F5",
            "<0.0001"="#FFFFFF")

dev.off()
ggplot(Abyage, aes(x = age, y = pop, fill = medg, width=.5))+
  geom_bar(stat="identity")+
  #ggtitle("Risk of LTBI amongst Australian-born residents")+
  labs(x = "Age", y = "Population")+
  scale_y_continuous(breaks = seq(0, 250000, 50000))+
  scale_x_continuous(breaks = seq(0, 110, 10))+
  #makes mulitple horizontal planels based on iso3 variable
  facet_grid(year ~ .)+
  # to adjust the fill colours, and fix them
  scale_fill_manual(name = "Median risk of latent TB",values = grey.list)+
  # scale_fill_hue(h = c(180, 360),name="Median risk of latent TB",
  #             limits = c(0, 1))+
  #to turn the background white
  theme_bw() +
  #add text titles inside the plots
  geom_text(aes(label=year, x = Inf, y = Inf, 
                hjust = 1.5, vjust = 1.5,fontface="bold" )) +
  #to eliminate background, gridlines, and chart border
  theme(
    legend.position = c(0.9, 0.85),
    legend.title=element_text(size=10),
    plot.background = element_blank(),
    panel.grid.major = element_blank(),
    strip.background =element_rect(colour="white", 
                                   fill="white"),
    strip.text=element_blank(),
    panel.grid.minor = element_blank())+
  #guides(fill = guide_legend(title.hjust = 8))+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))


#Working out the average/median age of Australian-born with LTBI 
#in 2006, 2011 and 2016
aveage<-lapply(Anum, function(df){
  df<-df[df["iso3"]=="AUS",]
  popLTBI<-sum(df$med)
  df$agebymed<-df$age*df$med
  agesum<-sum(df$agebymed) 
  x<-agesum/popLTBI
})
aveage





#NUMBER OF AUSTRALIAN-BORN WITH LTBI BY AGE 
#(replicates not summed across anything) 
#Figure 3 alternative

Nbyage<-lapply(Anum, function(df){
  df<-df[df$iso3=="AUS",]
  df<-df[,c(2,16:215)]
  df<-df %>%
    group_by(age) %>% # aggregating by iso3 
    summarise_all(funs(sum))
  df<-as.data.frame(df)
})
Nbyage<-rbindlist(Nbyage, idcol = "year")
Nbyage$year[Nbyage$year=="1"]<-"2006"
Nbyage$year[Nbyage$year=="2"]<-"2011"
Nbyage$year[Nbyage$year=="3"]<-"2016"

Nbyage <- melt(Nbyage, id=c("year", "age"))
Nbyage<-Nbyage[,c(1,2,4)]
Nbyage<-Nbyage[order(Nbyage["age"]),]
Nbyage$age<-as.factor(Nbyage$age)


#Median number by age
#Not sure what this figure is??
medbyage<-lapply(Anum, function(df){
  df<-df[df["iso3"]=="AUS",]
  df<-df[,c(2,11,14)]
  df<-df %>%
    group_by(age) %>% # aggregating by iso3 
    summarise_all(funs(sum))
  df<-as.data.frame(df)
})
medbyage<-rbindlist(medbyage, idcol = "year")
medbyage$year[medbyage$year=="1"]<-"2006"
medbyage$year[medbyage$year=="2"]<-"2011"
medbyage$year[medbyage$year=="3"]<-"2016"
medbyage$age<-as.factor(medbyage$age)
medbyage<-medbyage[,c(1,2,4)]

dev.off()
ggplot(Nbyage, aes(x=age, y=value)) +
  geom_boxplot(fill='gray', color="black",outlier.shape=NA) + #,outlier.shape=NA removes outliers line
  labs(x = "Age", y = "Estimated number with LTBI") +
  #geom_jitter(width = 0.2)+
  #makes mulitple horizontal planels based on iso3 variable
  facet_grid(year ~ .)+
  scale_y_continuous(breaks = seq(0, 10000, 2000),limits = c(0, 10000) )+
  scale_x_discrete(breaks = seq(0, 115, 10))+
  #add text titles inside the plots
  geom_text(aes(label=year, x = Inf, y = Inf, 
                hjust = 1.5, vjust = 1.5,fontface="bold" )) +
  #to turn the background white
  theme_bw()+
  #to eliminate background, gridlines, and chart border
  theme(
    plot.background = element_blank(),
    panel.grid.major = element_blank(),
    strip.background =element_rect(colour="white", 
                                   fill="white"),
    strip.text=element_blank(),
    panel.grid.minor = element_blank())
  #geom_errorbar(data=medbyage,
   #             aes(y=NULL, ymax=med, ymin=med)
    #            , colour="black")



#Area chart - need to sum populations up by year of arrival
#Figure 4
pop16<-risk16[,c(5,10,11,14)]
pop16 <- data.table(pop16)
pop16 <- pop16[, list(pop=sum(pop), med=mean(med)), 
             by=c("cob","yoa")]

pop16I<-pop16[pop16$cob=="South Africa"|pop16$cob=="Philippines"|pop16$cob=="Malaysia"|pop16$cob=="Vietnam"|pop16$cob=="China"|pop16$cob=="Italy"|pop16$cob=="India"|pop16$cob=="Great Britain",]

pop16I$medg <- as.character(cut(pop16I$med, 
                            breaks=c(0.00001,0.0001,
                                     0.001,0.01,0.1,0.2,
                                     0.3,0.4,0.5,0.6,0.7,0.8,
                                     0.9,1.0),
                            labels=c('<0.0001', '0.00011-0.001',  
                                     '0.0011-0.01','0.011-0.1',
                                     '0.11-0.2','0.21-0.3',
                                     '0.31-0.4','0.41-0.5',
                                     '0.51-0.6','0.61-0.7',
                                     '0.71-0.8','0.81-0.9','0.91-1.0')))

#Panelled area chart
dev.off()
ggplot(pop16I, aes(x = yoa, y = pop, fill = medg, width=0.8))+
  geom_bar(stat="identity")+
  #ggtitle("Risk of LTBI amongst Australian-born residents")+
  labs(x = "Year of arrival", y = "Population", fill="Country of birth") +
  scale_y_continuous(breaks = seq(0, 60000, 20000), limits = c(0, 60000))+
  scale_x_continuous(breaks = seq(1940, 2016, 20), limits = c(1940, 2016))+
  #makes mulitple horizontal planels based on iso3 variable
  facet_grid(cob ~ .)+
  # to adjust the fill colours, and fix them
  scale_fill_manual(name = "Median risk of latent TB",values = grey.list)+
  #to eliminate background, gridlines, and chart border
  theme(
    plot.background = element_blank()
    ,panel.grid.major = element_blank()
    ,panel.grid.minor = element_blank()
    ,strip.background = element_blank()
    ,panel.background = element_rect(fill = NA, color = "white")
    ,panel.border = element_rect(colour = "black",fill=NA)
    ,strip.text.y = element_text(size = 8, angle = 360),element_blank())+
    #to draw x and y axis line
    theme(axis.line = element_line(color = 'black'))



  #to turn the background white
  theme_bw() +
  #add text titles inside the plots
  geom_text(aes(label=year, x = Inf, y = Inf, 
                hjust = 1.5, vjust = 1.5,fontface="bold" )) +
  #to eliminate background, gridlines, and chart border
  theme(
    legend.position = c(0.9, 0.85),
    legend.title=element_text(size=10),
    plot.background = element_blank(),
    panel.grid.major = element_blank(),
    strip.background =element_rect(colour="white", 
                                   fill="white"),
    strip.text=element_blank(),
    panel.grid.minor = element_blank())+
  #guides(fill = guide_legend(title.hjust = 8))+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))




#RISK OF LTBI IN OVERSEASBORN FACET WRAP - Trying to show age at arrival
  #Figure 6 
  risk16<-Arisk[[3]]
  risk16I<-risk16[risk16$iso3=="MYS"|risk16$iso3=="ZAF"|risk16$iso3=="PHL"|risk16$iso3=="NZL"|risk16$iso3=="GBR"|risk16$iso3=="VNM"|risk16$iso3=="CHN"|risk16$iso3=="ITA"|risk16$iso3=="IND",]
  dev.off()
  ggplot(risk16I, aes(x = aaa, y = pop, fill = medg,width=0.8))+
    labs(x = "Population", y = "Year of arrival", fill="Country of birth") +
    #creates an area chart
    geom_bar(stat="identity")+
    #makes mulitple horizontal planels based on iso3 variable
    facet_wrap(~cob,scales = "free_x")+
    #ggtitle("Risk of LTBI and age and year of arrival among 2016 Australian residents born overseas") +
    labs(x = "Age at arrival (years)", y = "Population",
         size="Population")+
    scale_size_continuous(limits=c(1,5000), range = c(0.2, 5), breaks=c(10,100,1000,4000))+
    #scale_y_continuous(breaks = seq(0, 100, 10), limits = c(-1, 100))+
    scale_x_continuous(breaks = seq(0, 100, 10), limits = c(-1, 100))+
    # to adjust the fill colours, and fix them
    scale_fill_manual(name = "Median risk of latent TB",values = grey.list)+
    #scale_colour_viridis(name="Median risk of\n latent TB", alpha = 0.5, begin = 0, end = 1, direction = -1,
    #                    discrete = FALSE, option = "D",limits = c(0, 1))+
    #to turn the background white
    theme_bw() +
    #to eliminate background, gridlines, and chart border
    theme(
      plot.background = element_blank()
      ,panel.grid.major = element_blank()
      ,panel.grid.minor = element_blank()
      ,strip.background =element_rect(colour="white", 
                                      fill="white")
      ,panel.border=element_blank()
      ,strip.text.y = element_text(size = 8, angle = 360),element_blank())+
    #guides(colour = guide_legend(title.hjust = 8))+
    #to draw x and y axis line
    theme(axis.line = element_line(color = 'black'))

ggplot(risk16, aes(x = aaa, y = pop, fill = medg,width=0.8))+
    labs(x = "Population", y = "Year of arrival", fill="Country of birth") +
    #creates an area chart
    geom_bar(stat="identity")+
    #ggtitle("Risk of LTBI and age and year of arrival among 2016 Australian residents born overseas") +
    labs(x = "Age at arrival (years)", y = "Population",
         size="Population")+
    scale_size_continuous(limits=c(1,5000), range = c(0.2, 5), breaks=c(10,100,1000,4000))+
    #scale_y_continuous(breaks = seq(0, 100, 10), limits = c(-1, 100))+
    scale_x_continuous(breaks = seq(0, 100, 10), limits = c(-1, 100))+
    # to adjust the fill colours, and fix them
    scale_fill_manual(name = "Median risk of latent TB",values = grey.list)+
    #scale_colour_viridis(name="Median risk of\n latent TB", alpha = 0.5, begin = 0, end = 1, direction = -1,
    #                    discrete = FALSE, option = "D",limits = c(0, 1))+
    #to turn the background white
    theme_bw() +
    #to eliminate background, gridlines, and chart border
    theme(
      plot.background = element_blank()
      ,panel.grid.major = element_blank()
      ,panel.grid.minor = element_blank()
      ,strip.background =element_rect(colour="white", 
                                      fill="white")
      ,panel.border=element_blank()
      ,strip.text.y = element_text(size = 8, angle = 360),element_blank())+
    #guides(colour = guide_legend(title.hjust = 8))+
    #to draw x and y axis line
    theme(axis.line = element_line(color = 'black'))
  

  
  
  #Figure 1 Appendices
risk16<-Arisk[[3]]
risk16I<-risk16[risk16$iso3=="MYS"|risk16$iso3=="ZAF"|risk16$iso3=="PHL"|risk16$iso3=="NZL"|risk16$iso3=="GBR"|risk16$iso3=="VNM"|risk16$iso3=="CHN"|risk16$iso3=="ITA"|risk16$iso3=="IND",]
dev.off()
ggplot(risk16I, aes(x = yoa, y = aaa, colour = med, size=pop ))+
  geom_point(alpha = 0.4, 
             #moves the points slightly so they don't seem to be in lines
             position = position_jitter(w = 0.3, h = 0.3))+
  #makes mulitple horizontal planels based on iso3 variable
  facet_wrap(~cob,scales = "free_x")+
  #ggtitle("Risk of LTBI and age and year of arrival among 2016 Australian residents born overseas") +
  labs(x = "Year of arrival", y = "Age at arrival (years)",
       size="Population")+
  scale_size_continuous(limits=c(1,5000), range = c(0.2, 5), breaks=c(10,100,1000,4000))+
  scale_y_continuous(breaks = seq(0, 100, 10), limits = c(-1, 100))+
  scale_x_continuous(breaks = seq(1900, 2016, 10))+
  # to adjust the fill colours, and fix them
  scale_colour_viridis(name="Median risk of\n latent TB", alpha = 0.5, begin = 0, end = 1, direction = -1,
                       discrete = FALSE, option = "D",limits = c(0, 1))+
  #to turn the background white
  theme_bw() +
  #to eliminate background, gridlines, and chart border
  theme(
    plot.background = element_blank()
    ,panel.grid.major = element_blank()
    ,panel.grid.minor = element_blank()
    ,strip.background =element_rect(colour="white", 
                                    fill="white")
    ,panel.border=element_blank()
    ,strip.text.y = element_text(size = 8, angle = 360),element_blank())+
  #guides(colour = guide_legend(title.hjust = 8))+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))


#Figure for presentation
risk11<-Arisk[[2]]
myColors <- colorRampPalette(brewer.pal(9,"Greys"))(13)
names(myColors) <- levels(risk11$medg)
colScale <- scale_fill_manual(name = "Median risk of latent TB",values = myColors)
col.list<-c("0.91-1.0"="#9E0142",
            "0.81-0.9"="#CB334C",
            "0.71-0.8"="#E95D47",
            "0.61-0.7"="#F88D51",
            "0.51-0.6"="#FDBE6E",
            "0.41-0.5"="#FEE593",
            "0.31-0.4"="#FFFFBF",
            "0.21-0.3"="#EAF69E",
            "0.11-0.2"="#BEE5A0",
            "0.011-0.1"="#88CFA4",
            "0.0011-0.01"="#54AEAC",
            "0.00011-0.001"="#397EB8",
            "<0.0001"="#5E4FA2")
grey.list<-c("0.91-1.0"="#000000",
             "0.81-0.9"="#181818",
             "0.71-0.8"="#343434",
             "0.61-0.7"="#525252",
             "0.51-0.6"="#686868",
             "0.41-0.5"="#7E7E7E",
             "0.31-0.4"="#969696",
             "0.21-0.3"="#B0B0B0",
             "0.11-0.2"="#C6C6C6",
             "0.011-0.1"="#D9D9D9",
             "0.0011-0.01"="#E8E8E8",
             "0.00011-0.001"="#F5F5F5",
             "<0.0001"="#FFFFFF")
risk16<-Arisk[[3]]
risk16I<-risk16[risk16$iso3=="MYS"|risk16$iso3=="ZAF"|risk16$iso3=="PHL"|
                risk16$iso3=="NZL"|risk16$iso3=="GBR"|risk16$iso3=="VNM"|
                risk16$iso3=="CHN"|risk16$iso3=="ITA"|risk16$iso3=="IND"|
                risk16$iso3=="IDN"|risk16$iso3=="MMR"|risk16$iso3=="PNG"|
                risk16$iso3=="AUS"|risk16$iso3=="SDN"|risk16$iso3=="DEU",]

risk16I<-risk16[risk16$iso3=="MYS"|risk16$iso3=="ZAF"|risk16$iso3=="TWN"|
                  risk16$iso3=="NZL"|risk16$iso3=="GBR"|
                  risk16$iso3=="ITA"|risk16$iso3=="KHM"|
                  risk16$iso3=="IDN"|risk16$iso3=="MMR"|risk16$iso3=="PNG",]
dev.off()
ggplot(risk16I,aes(x = age, y = pop, fill = medg, width=0.7))+
  geom_bar(stat="identity")+
             #moves the points slightly so they don't seem to be in lines
             #position = position_jitter(w = 0.3, h = 0.3))+
  #makes mulitple horizontal planels based on iso3 variable
  facet_wrap(~cob,scales = "free_x")+
  #ggtitle("Risk of LTBI and age and year of arrival among 2016 Australian residents born overseas") +
  labs(x = "Age (years)", y = "Population",
       size="Population")+
  scale_y_continuous(breaks = seq(0, 25000, 5000), limits = c(0, 25000))+
  scale_x_continuous(breaks = seq(0, 100, 10))+
  #scale_fill_hue(h = c(180, 360),name="Median risk of latent TB",
  #            h.start = 0)+
  scale_fill_manual(name="Median risk of latent TB",
                    values = col.list)+
  #to turn the background white
  theme_bw() +
  #to eliminate background, gridlines, and chart border
  theme(
    legend.title=element_text(size=10),
    plot.background = element_blank()
    ,panel.grid.major = element_blank()
    ,panel.grid.minor = element_blank()
    ,strip.background = element_blank()
    ,panel.background = element_rect(fill = NA, color = "white")
    ,panel.border = element_rect(colour = "black",fill=NA)
    ,strip.text.y = element_blank()
    #the lines below move the legend to the bottom, 
    #makeit horizontal, and so the title is on the top
    ,legend.position="bottom"
    ,legend.box="horizontal")+
   #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))

###For individual countries
dev.off()
ggplot(risk16I[risk16I$iso3=="VNM",],aes(x = age, y = pop, fill = medg, width=0.7))+ 
  #ggplot(risk16I,aes(x = age, y = pop, fill = medg, width=0.7))+
  geom_bar(stat="identity")+
  #moves the points slightly so they don't seem to be in lines
  #position = position_jitter(w = 0.3, h = 0.3))+
  #makes mulitple horizontal planels based on iso3 variable
  #facet_wrap(~cob,scales = "free_x")+
  #ggtitle("Risk of LTBI and age and year of arrival among 2016 Australian residents born overseas") +
  labs(x = "Age (years)", y = "Population")+
  scale_y_continuous(breaks = seq(0, 25000, 5000), limits = c(0, 25000))+
  scale_x_continuous(breaks = seq(0, 100, 10))+
  #scale_fill_hue(h = c(180, 360),name="Median risk of latent TB",
  #            h.start = 0)+
  scale_fill_manual(name="Median risk of latent TB",
                    values = col.list)+
  #to turn the background white
  theme_bw() +
  #to eliminate background, gridlines, and chart border
  theme(
    legend.title=element_text(size=30),
    plot.background = element_blank()
    ,panel.grid.major = element_blank()
    ,panel.grid.minor = element_blank()
    ,strip.background = element_blank()
    ,panel.background = element_rect(fill = NA, color = "white")
    ,panel.border = element_rect(colour = "black",fill=NA)
    ,strip.text.y = element_blank()
    #the lines below move the legend to the bottom, 
    #makeit horizontal, and so the title is on the top
    ,legend.position="bottom")+
    #,legend.box="horizontal")+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))+
  theme(text = element_text(size=30))

###Numbers by age For individual countries
risk16n<-Anum[[3]]
risk16n<-risk16n[risk16n$iso3=="ZAF"|risk16n$iso3=="PHL"|
                  risk16n$iso3=="VNM"|risk16n$iso3=="KHM"|
                   risk16n$iso3=="CHN"|risk16n$iso3=="IND"|risk16n$iso3=="KOR"|
                   risk16n$iso3=="IDN",]
risk16t<-risk16n[,c(11,14)] %>%
  group_by(cob) %>% # aggregating by cob 
  summarise_all(funs(sum))
colnames(risk16t)[2] <- "totmed"
risk16n <- merge(risk16n, risk16t,by=c('cob'), all.x=TRUE, all.y=FALSE)
#Ordering cob variable by the median numberv
risk16n$cob <- factor(risk16n$cob,
                   levels=unique(risk16n$cob[order(risk16n$totmed)],
                                 decreasing = FALSE), 
                   ordered=TRUE)
risk16n<-risk16n[,c(1,3,12,14)] %>%
  group_by(cob, age) %>% # aggregating by cob 
  summarise_all(funs(sum))
risk16n$noLTBI<-risk16n$pop-risk16n$med
risk16n$pop<-NULL
risk16n<-melt(risk16n,id.vars = c("cob", "age"), 
              measure.vars = c("med", "noLTBI"))
colnames(risk16n)[3] <- "LTBI"

risk16n$LTBI <- as.factor(risk16n$LTBI,
                      levels=unique(decreasing = TRUE), 
                      ordered=TRUE)

risk16n1<-risk16n[risk16n$cob=="Philippines"|
                   risk16n$cob=="Vietnam"|
                   risk16n$cob=="China"|risk16n$cob=="India",]

risk16n2<-risk16n[risk16n$cob=="South Africa"|risk16n$cob=="Cambodia"|
                  risk16n$cob=="South Korea"|
                   risk16n$cob=="Indonesia",]


dev.off()
#ggplot(risk16n[risk16n$iso3=="IND",],aes(x = age, y = med, width=0.7))+ 
ggplot(risk16n2[risk16n2$LTBI=="med",],aes(x = age, y = value, width=0.7))+ 
  geom_bar(stat="identity", fill="steelblue3")+
  #moves the points slightly so they don't seem to be in lines
  #position = position_jitter(w = 0.3, h = 0.3))+
  #makes mulitple horizontal planels based on iso3 variable
  facet_grid(cob~.)+
  #ggtitle("Risk of LTBI and age and year of arrival among 2016 Australian residents born overseas") +
  labs(x = "Age (years)", y = "Population")+
  scale_y_continuous(breaks = seq(0, 21000, 5000), limits = c(0, 6000))+
  scale_x_continuous(breaks = seq(0, 100, 10))+
  #to turn the background white
  theme_bw() +
  #add text titles inside the plots
  geom_text(aes(label=cob, x = Inf, y = Inf,
                hjust = 1.5, vjust = 1.5)) +
  theme(legend.position="none")+
  #to eliminate background, gridlines, and chart border
  theme(
    plot.background = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    strip.background =element_rect(colour="white", 
                                   fill="white"),
    strip.text=element_blank())+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))+
  theme(text = element_text(size=25))


dev.off()
#ggplot(risk16n[risk16n$iso3=="IND",],aes(x = age, y = med, width=0.7))+ 
ggplot(risk16n2,aes(x = age, y = value, fill=factor(LTBI, levels=c("noLTBI","med")), width=0.7))+ 
  geom_bar(stat="identity")+
  #moves the points slightly so they don't seem to be in lines
  #position = position_jitter(w = 0.3, h = 0.3))+
  #makes mulitple horizontal planels based on iso3 variable
  facet_grid(cob~.)+
  #ggtitle("Risk of LTBI and age and year of arrival among 2016 Australian residents born overseas") +
  labs(x = "Age (years)", y = "Population")+
  scale_y_continuous(breaks = seq(0, 21000, 5000), limits = c(0, 21000))+
  scale_x_continuous(breaks = seq(0, 100, 10))+
  scale_fill_manual(values=c("slategray2", "steelblue3"))+
  #to turn the background white
  theme_bw() +
  #add text titles inside the plots
  geom_text(aes(label=cob, x = Inf, y = Inf,
                hjust = 1.5, vjust = 1.5)) +
  theme(legend.position="none")+
  #to eliminate background, gridlines, and chart border
  theme(
    plot.background = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    strip.background =element_rect(colour="white", 
                                   fill="white"),
    strip.text=element_blank())+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))+
  theme(text = element_text(size=25))







#Working out the average/median age of Overseas-born with LTBI 
#in 2006, 2011 and 2016
aveage<-lapply(Anum, function(df){
  df<-df[df["iso3"]!="AUS",]
  popLTBI<-sum(df$med)
  df$agebymed<-df$age*df$med
  agesum<-sum(df$agebymed) 
  x<-agesum/popLTBI
})
aveage





#COMPARING DIFFERENT COUNTRIES OF BIRTH
#Figure 7
#Pretty montage of countries

ZAF<-lapply(Arisk, function(df) {
  df<-df[df$iso3=="ZAF",]
  df<-df[,c(2,11,215)]
  df
})
ZAF<-rbindlist(ZAF,idcol = "year")
ZAF$year[ZAF$year=="1"]<-"2006"
ZAF$year[ZAF$year=="2"]<-"2011"
ZAF$year[ZAF$year=="3"]<-"2016"

IND<-lapply(Arisk, function(df) {
  df<-df[df$iso3=="IND",]
  df<-df[,c(2,11,215)]
  df
})
IND<-rbindlist(IND,idcol = "year")
IND$year[IND$year=="1"]<-"2006"
IND$year[IND$year=="2"]<-"2011"
IND$year[IND$year=="3"]<-"2016"

ITA<-lapply(Arisk, function(df) {
  df<-df[df$iso3=="ITA",]
  df<-df[,c(2,11,215)]
  df
})
ITA<-rbindlist(ITA,idcol = "year")
ITA$year[ITA$year=="1"]<-"2006"
ITA$year[ITA$year=="2"]<-"2011"
ITA$year[ITA$year=="3"]<-"2016"

CHN<-lapply(Arisk, function(df) {
  df<-df[df$iso3=="CHN",]
  df<-df[,c(2,11,215)]
  df
})
CHN<-rbindlist(CHN,idcol = "year")
CHN$year[CHN$year=="1"]<-"2006"
CHN$year[CHN$year=="2"]<-"2011"
CHN$year[CHN$year=="3"]<-"2016"

VNM<-lapply(Arisk, function(df) {
  df<-df[df$iso3=="VNM",]
  df<-df[,c(2,11,215)]
  df
})
VNM<-rbindlist(VNM,idcol = "year")
VNM$year[VNM$year=="1"]<-"2006"
VNM$year[VNM$year=="2"]<-"2011"
VNM$year[VNM$year=="3"]<-"2016"




dev.off()
plot1<-ggplot(CHN, aes(x = age, y = pop, fill = medg, width=.5))+
  geom_bar(stat="identity")+
  ggtitle("China")+
  labs(x = "Age", y = "Population")+
  #makes mulitple horizontal planels based on iso3 variable
  facet_grid(year ~ .)+
  scale_y_continuous(breaks = seq(0, 21000, 5000),limits = c(0, 21000) )+
  scale_x_continuous(breaks = seq(0, 100, 10))+
  # to adjust the fill colours, and fix them
  #scale_fill_hue(h = c(180, 360),name="Median risk of latent TB",
   #              h.start = 0)+
  scale_fill_manual(name="Median risk of latent TB",
                   values = grey.list)+
  #to turn the background white
  theme_bw() +
  #add text titles inside the plots
  geom_text(aes(label=year, x = Inf, y = Inf
                , hjust = 1.5, vjust = 1.5, fontface="bold")) +
  #to eliminate background, gridlines, and chart border
  theme(
    legend.title=element_text(size=10),
    plot.background = element_blank()
    ,panel.grid.major = element_blank()
    ,panel.grid.minor = element_blank()
    ,strip.background = element_blank()
    ,panel.background = element_rect(fill = NA, color = "white")
    ,panel.border = element_rect(colour = "black",fill=NA)
    ,strip.text.y = element_blank()
    #the lines below move the legend to the bottom, 
    #makeit horizontal, and so the title is on the top
    ,legend.position="bottom"
    ,legend.box="horizontal")+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))

plot2<-ggplot(IND, aes(x = age, y = pop, fill = medg, width=.5))+
  geom_bar(stat="identity")+
  ggtitle("India")+
  #makes mulitple horizontal planels based on iso3 variable
  facet_grid(year ~ .)+
  scale_y_continuous(breaks = seq(0, 21000, 5000),limits = c(0, 21000) )+
  scale_x_continuous(breaks = seq(0, 100, 10))+
  # to adjust the fill colours, and fix them  
  scale_fill_manual(name="Median risk of latent TB",
    values = grey.list)+
  #to turn the background white
  theme_bw() +
  #add text titles inside the plots
  geom_text(aes(label=year, x = Inf, y = Inf
                , hjust = 1.5, vjust = 1.5, fontface="bold")) +
  #to eliminate background, gridlines, and chart border
  theme(
    legend.title=element_text(size=10),
    plot.background = element_blank()
    ,panel.grid.major = element_blank()
    ,panel.grid.minor = element_blank()
    ,strip.background = element_blank()
    ,panel.background = element_rect(fill = NA, color = "white")
    ,panel.border = element_rect(colour = "black",fill=NA)
    ,strip.text.y = element_blank())+
  #guides(fill = guide_legend(title.hjust = 8))+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))

plot3<-ggplot(VNM, aes(x = age, y = pop, fill = medg, width=.5))+
  geom_bar(stat="identity")+
  ggtitle("Vietnam")+
  labs(x = "Age", y = "Population")+
  #makes mulitple horizontal planels based on iso3 variable
  facet_grid(year ~ .)+
  scale_y_continuous(breaks = seq(0, 21000, 5000),limits = c(0, 21000) )+
  scale_x_continuous(breaks = seq(0, 100, 10))+
  # to adjust the fill colours, and fix them
  scale_fill_manual(name="Median risk of latent TB",
                    values = grey.list)+
  #to turn the background white
  theme_bw() +
  #add text titles inside the plots
  geom_text(aes(label=year, x = Inf, y = Inf
                , hjust = 1.5, vjust = 1.5, fontface="bold")) +
  #to eliminate background, gridlines, and chart border
  theme(
    legend.title=element_text(size=10),
    plot.background = element_blank()
    ,panel.grid.major = element_blank()
    ,panel.grid.minor = element_blank()
    ,strip.background = element_blank()
    ,panel.background = element_rect(fill = NA, color = "white")
    ,panel.border = element_rect(colour = "black",fill=NA)
    ,strip.text.y = element_blank())+
  #guides(fill = guide_legend(title.hjust = 8))+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))


plot4<-ggplot(ITA, aes(x = age, y = pop, fill = medg, width=.5))+
  geom_bar(stat="identity")+
  ggtitle("Italy")+
  labs(x = "Age", y = "Population")+
  #makes mulitple horizontal planels based on iso3 variable
  facet_grid(year ~ .)+
  scale_y_continuous(breaks = seq(0, 21000, 5000),limits = c(0, 21000) )+
  scale_x_continuous(breaks = seq(0, 100, 10))+
  # to adjust the fill colours, and fix them
  scale_fill_manual(name="Median risk of latent TB",
                    values = grey.list)+
  #to turn the background white
  theme_bw() +
  #add text titles inside the plots
  geom_text(aes(label=year, x = Inf, y = Inf
                , hjust = 1.5, vjust = 1.5, fontface="bold")) +
  #to eliminate background, gridlines, and chart border
  theme(
    legend.title=element_text(size=10),
    plot.background = element_blank()
    ,panel.grid.major = element_blank()
    ,panel.grid.minor = element_blank()
    ,strip.background = element_blank()
    ,panel.background = element_rect(fill = NA, color = "white")
    ,panel.border = element_rect(colour = "black",fill=NA)
    ,strip.text.y = element_blank())+
  #guides(fill = guide_legend(title.hjust = 8))+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))

#extract legend
#https://github.com/hadley/ggplot2/wiki/Share-a-legend-between-two-ggplot2-graphs
g_legend<-function(a.gplot){
  tmp <- ggplot_gtable(ggplot_build(a.gplot))
  leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
  legend <- tmp$grobs[[leg]]
  return(legend)}

mylegend<-g_legend(plot1)


dev.off()


grid.arrange(arrangeGrob(plot1 + theme(legend.position="none"),
                               plot2 + theme(legend.position="none"),
                               plot3 + theme(legend.position="none"),
                               plot4 + theme(legend.position="none"),
                               nrow=2),
                   mylegend, nrow=2,heights=c(10, 1))



#Crazy BOXPLOT montage of countries
#Figure 7 alternative - reject
#NEED TO AGGREGATe BY AGE OVER YOA - which results in a bumpy figure

IND<-lapply(Anum, function(df) {
  df<-df[df$iso3=="IND",]
  df<-df[,c(2,16:215)]  
  df<-aggregate(. ~ age , df, sum)
  df <- melt(df, id=c("age"))
  df$age<-as.factor(df$age)
  df
})
IND<-rbindlist(IND,idcol = "year")
IND$year[IND$year=="1"]<-"2006"
IND$year[IND$year=="2"]<-"2011"
IND$year[IND$year=="3"]<-"2016"

ITA<-lapply(Anum, function(df) {
  df<-df[df$iso3=="ITA",]
  df<-df[,c(2,16:215)]
  df<-aggregate(. ~ age , df, sum)
  df <- melt(df, id=c("age"))
  df$age<-as.factor(df$age)
  df
})
ITA<-rbindlist(ITA,idcol = "year")
ITA$year[ITA$year=="1"]<-"2006"
ITA$year[ITA$year=="2"]<-"2011"
ITA$year[ITA$year=="3"]<-"2016"

CHN<-lapply(Anum, function(df) {
  df<-df[df$iso3=="CHN",]
  df<-df[,c(2,16:215)]
  df<-aggregate(. ~ age , df, sum)
  df <- melt(df, id=c("age"))
  df$age<-as.factor(df$age)
  df
})
CHN<-rbindlist(CHN,idcol = "year")
CHN$year[CHN$year=="1"]<-"2006"
CHN$year[CHN$year=="2"]<-"2011"
CHN$year[CHN$year=="3"]<-"2016"

VNM<-lapply(Anum, function(df) {
  df<-df[df$iso3=="VNM",]
  df<-df[,c(2,16:215)]
  df<-aggregate(. ~ age , df, sum)
  df <- melt(df, id=c("age"))
  df$age<-as.factor(df$age)
  df
})
VNM<-rbindlist(VNM,idcol = "year")
VNM$year[VNM$year=="1"]<-"2006"
VNM$year[VNM$year=="2"]<-"2011"
VNM$year[VNM$year=="3"]<-"2016"


dev.off()
#note: for a boxplot the x axis variable needs to be a factor variable,
#or maybe a character variable would be okay too.
p1<-ggplot(CHN, aes(x=age, y=value)) +
  geom_boxplot(fill='gray', color="black",
               outlier.colour="black", outlier.shape=16,
               outlier.size=0.3, notch=FALSE) + #Fatten=NULL removes median line
  labs(x = "Age", y = "Estimated number with LTBI") +
  ggtitle("China")+
  #geom_jitter(width = 0.2)+
  #makes mulitple horizontal planels based on iso3 variable
  facet_grid(year ~ .)+
  scale_y_continuous(breaks = seq(0, 9133, 2000),limits = c(0, 9133) )+
  scale_x_discrete(breaks = seq(0, 115, 10))+
  #add text titles inside the plots
  geom_text(aes(label=year, x = Inf, y = Inf, 
                hjust = 1.5, vjust = 1.5,fontface="bold" )) +
  #to turn the background white
  theme_bw()+
  #to eliminate background, gridlines, and chart border
  theme(
    plot.background = element_blank(),
    panel.grid.major = element_blank(),
    strip.background =element_rect(colour="white", 
                                   fill="white"),
    strip.text=element_blank(),
    panel.grid.minor = element_blank())

p2<-ggplot(IND, aes(x=age, y=value)) +
  geom_boxplot(fill='gray', color="black",
               outlier.colour="black", outlier.shape=16,
               outlier.size=0.3, notch=FALSE) + #Fatten=NULL removes median line
  labs(x = "Age", y = "Estimated number with LTBI") +
  ggtitle("India")+
  #geom_jitter(width = 0.2)+
  #makes mulitple horizontal planels based on iso3 variable
  facet_grid(year ~ .)+
  scale_y_continuous(breaks = seq(0, 9133, 2000),limits = c(0, 9133) )+
  scale_x_discrete(breaks = seq(0, 115, 10))+
  #add text titles inside the plots
  geom_text(aes(label=year, x = Inf, y = Inf, 
                hjust = 1.5, vjust = 1.5,fontface="bold" )) +
  #to turn the background white
  theme_bw()+
  #to eliminate background, gridlines, and chart border
  theme(
    plot.background = element_blank(),
    panel.grid.major = element_blank(),
    strip.background =element_rect(colour="white", 
                                   fill="white"),
    strip.text=element_blank(),
    panel.grid.minor = element_blank())

p3<-ggplot(VNM, aes(x=age, y=value)) +
  geom_boxplot(fill='gray', color="black",
               outlier.colour="black", outlier.shape=16,
               outlier.size=0.3, notch=FALSE) + #Fatten=NULL removes median line
  labs(x = "Age", y = "Estimated number with LTBI") +
  ggtitle("Vietnam")+
  #geom_jitter(width = 0.2)+
  #makes mulitple horizontal planels based on iso3 variable
  facet_grid(year ~ .)+
  scale_y_continuous(breaks = seq(0, 9133, 2000),limits = c(0, 9133) )+
  scale_x_discrete(breaks = seq(0, 115, 10))+
  #add text titles inside the plots
  geom_text(aes(label=year, x = Inf, y = Inf, 
                hjust = 1.5, vjust = 1.5,fontface="bold" )) +
  #to turn the background white
  theme_bw()+
  #to eliminate background, gridlines, and chart border
  theme(
    plot.background = element_blank(),
    panel.grid.major = element_blank(),
    strip.background =element_rect(colour="white", 
                                   fill="white"),
    strip.text=element_blank(),
    panel.grid.minor = element_blank())

p4<-ggplot(ITA, aes(x=age, y=value)) +
  geom_boxplot(fill='gray', color="black",
               outlier.colour="black", outlier.shape=16,
               outlier.size=0.3, notch=FALSE) + #Fatten=NULL removes median line
  labs(x = "Age", y = "Estimated number with LTBI") +
  ggtitle("Italy")+
  #geom_jitter(width = 0.2)+
  #makes mulitple horizontal planels based on iso3 variable
  facet_grid(year ~ .)+
  scale_y_continuous(breaks = seq(0, 9133, 2000),limits = c(0, 9133) )+
  scale_x_discrete(breaks = seq(0, 115, 10))+
  #add text titles inside the plots
  geom_text(aes(label=year, x = Inf, y = Inf, 
                hjust = 1.5, vjust = 1.5,fontface="bold" )) +
  #to turn the background white
  theme_bw()+
  #to eliminate background, gridlines, and chart border
  theme(
    plot.background = element_blank(),
    panel.grid.major = element_blank(),
    strip.background =element_rect(colour="white", 
                                   fill="white"),
    strip.text=element_blank(),
    panel.grid.minor = element_blank())

grid.arrange(p1,p2,p3,p4, nrow=2)


 

#The biggest burden of LTBI in Australia in 2016 - by risk, and the
# by number

options(scipen=5)
pop<-Anum[[3]]
pop<-pop[,c(2,11,14)]
pop<-pop %>%
  group_by(cob) %>% 
  summarise_all(funs(sum))
poplist<-pop[pop$med>12000,]
poplist<- unique(poplist$cob)

sum(pop$med)
sum(pop$med[pop$cob=="India"])
#115221

sum(pop$med[pop$cob=="Australia"])
#147519

num16<-Anum[[3]]
num16<-num16[,c(2,11,15)]
num16<-num16 %>%
  group_by(cob, age) %>% 
  summarise_all(funs(sum))
num16<-num16[num16$cob %in% poplist,]

#I need 17 fill colours
colcount<-length(unique(num16$cob))
colcount
#20
getpalette<-colorRampPalette(brewer.pal(12, "Paired"))


dev.off()
ggplot(num16, aes(x = age, y = med, colour = cob))+
  geom_line(size=2)+
  #ggtitle("Vietnam-born Australian residents") +
  labs(x = "Age", y = "Population", colour="Country of birth")+
  #scale_size_continuous(limits=c(1,5000), range = c(0.5, 12), breaks=c(10,100,1000,4000))+
  scale_y_continuous(breaks = seq(0, 5700, 1000), limits = c(0, 5700))+
  scale_x_continuous(breaks = seq(0, 115, 10))+
  scale_colour_manual(values = getpalette(colcount))+
  # to adjust the fill colours, and fix them
  #scale_colour_viridis(name="Median risk of\n latent TB", alpha = 0.5)+
  #to turn the background white
  theme_bw() +
  #to eliminate background, gridlines, and chart border
  theme(
    legend.position = c(0.8, 0.65),
    plot.background = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.border = element_blank())+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))



#NUMBER OF RECENT INFECTIONS
#The biggest burden of LTBI in Australia in 2016 - by risk, and the
# by number

options(scipen=5)
#working out which countries have the largest number and restricting 
#the dataframe to those
pop<-recent[,c(5,10)]
pop<-pop %>%
  group_by(cob) %>% 
  summarise_all(funs(sum))
poplist<-pop[pop$mednum>100,]
poplist<- unique(poplist$cob)

sum(recent$mednum[recent$cob=="India"])
#466
sum(recent$mednum[recent$cob=="Australia"])
#6393!!!!!

num16<-recent[,c(3,5,10)]
num16<-num16 %>%
  group_by(cob, age) %>% 
  summarise_all(funs(sum))
num16<-num16[num16$cob %in% poplist,]

num16noA<-num16[num16$cob!="Australia",]

#I need lots of fill colours
colcount<-length(unique(num16$cob))
colcount
#20
getpalette<-colorRampPalette(brewer.pal(12, "Paired"))


dev.off()
ggplot(num16noA, aes(x = age, y = mednum, colour = cob))+
  geom_line(size=2)+
  #ggtitle("Vietnam-born Australian residents") +
  labs(x = "Age", y = "Population", colour="Country of birth")+
  #scale_size_continuous(limits=c(1,5000), range = c(0.5, 12), breaks=c(10,100,1000,4000))+
  #scale_y_continuous(breaks = seq(0, 5700, 1000), limits = c(0, 5700))+
  scale_x_continuous(breaks = seq(0, 115, 10))+
  scale_colour_manual(values = getpalette(colcount))+
  # to adjust the fill colours, and fix them
  #scale_colour_viridis(name="Median risk of\n latent TB", alpha = 0.5)+
  #to turn the background white
  theme_bw() +
  #to eliminate background, gridlines, and chart border
  theme(
    legend.position = c(0.8, 0.65),
    plot.background = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.border = element_blank())+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))


#RISK OF RECENT INFECTIONS
#The biggest burden of LTBI in Australia in 2016 - by risk, and the
# by number

options(scipen=5)
#working out which countries have the largest number and restricting 
#the dataframe to those
pop<-recent[,c(5,9)]
pop<-pop %>%
  group_by(cob) %>% 
  summarise_all(funs(mean))
pop<-pop[pop$med>0.0014,]
pop$cob<-as.character(pop$cob)
poplist<-unique(pop$cob)

recrisk16<-recent[,c(3,5,9)]
recrisk16<-recrisk16 %>%
  group_by(cob, age) %>% 
  summarise_all(funs(mean))
recrisk16<-recrisk16[recrisk16$cob %in% poplist,]


#I need lots of fill colours
colcount<-length(unique(recrisk16$cob))
colcount
#20
getpalette<-colorRampPalette(brewer.pal(12, "Paired"))

dev.off()
ggplot(recrisk16, aes(x = age, y = med, colour = cob))+
  geom_line(size=2)+
  #ggtitle("Vietnam-born Australian residents") +
  labs(x = "Age", y = "Risk of recent TB infection", colour="Country of birth")+
  #scale_size_continuous(limits=c(1,5000), range = c(0.5, 12), breaks=c(10,100,1000,4000))+
  #scale_y_continuous(breaks = seq(0, 5700, 1000), limits = c(0, 5700))+
  scale_x_continuous(breaks = seq(0, 115, 10))+
  scale_colour_manual(values = getpalette(colcount))+
  # to adjust the fill colours, and fix them
  #scale_colour_viridis(name="Median risk of\n latent TB", alpha = 0.5)+
  #to turn the background white
  theme_bw() +
  #to eliminate background, gridlines, and chart border
  theme(
    legend.position = c(0.8, 0.65),
    plot.background = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.border = element_blank())+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))





































risk16<-Arisk[[3]]
risk16<-risk16[,c(3,6,8,11,13,14)]
risk16<-risk16[order(risk16$iso3,risk16$agegroup,risk16$yoag), ]
names(risk16)[6] <- "medrisk"[-ncol(risk16)]


risk16ag<-risk16[,c(1,5,6)]
risk16ag<-risk16ag %>%
  group_by(iso3, agegroup) %>% # aggregating by agegroup
  summarise_all(funs(mean))


#Merging it to the Australia census data
final <- merge(risk16, num16,by=c("agegroup","yoag","iso3","pop","aaa"))

final<-final %>%
  group_by(agegroup) %>% # aggregating by agegroup
  summarise_all(funs(sum))

byaggp<-final
byaggp<-byaggp %>%
  group_by(agegroup) %>% # aggregating by agegroup
  summarise_all(funs(sum))









#MDR TB risk
#top 30 MDR-TB risk countries 


MDRlist<-c("BGD","CHN","PRK","ETH",
              "IND","IDN","KEN",
              "MMR","PAK","PHL","RUS",
              "ZAF","THA","VNM","PNG","PER","SOM","ZWE")
#left out congo(COD), Kazakhstan(KAZ), Mozambique(MOZ), Nigeria (NGA)
# Angola (AGO),"AGO","AZE","BLR","KGZ","MDA","TJK",
# Ukraine and Uzbekistan because there were so few.

risk16<-Arisk[[3]]
riskMDR<-risk16[risk16$iso3 %in% MDRlist,]

risk16pop<-riskMDR[,c(11,13)]
risk16pop<-aggregate(. ~ iso3 , risk16pop, sum)
# all those countries with less than 7000 residents were excluded

#Putting it into muli-grid thingy
dev.off()
ggplot(riskMDR, aes(x = yoa, y = aaa, colour = med, size=pop ))+
  geom_point(alpha = 0.4, 
             #moves the points slightly so they don't seem to be in lines
             position = position_jitter(w = 0.3, h = 0.3))+
  #makes mulitple horizontal planels based on iso3 variable
  facet_wrap(~cob,scales = "free_x")+
  labs(x = "Year of arrival", y = "Age at arrival (years)",
       size="Population")+
  scale_size_continuous(limits=c(1,5000), range = c(0.2, 5), breaks=c(10,100,1000,4000))+
  scale_y_continuous(breaks = seq(0, 100, 10), limits = c(-1, 100))+
  scale_x_continuous(breaks = seq(1920, 2000,20), limits = c(1920, 2020))+
  # to adjust the fill colours, and fix them
  scale_colour_viridis(name="Median risk of\n latent TB", alpha = 0.5, begin = 0, end = 1, direction = -1,
                       discrete = FALSE, option = "D",limits = c(0, 1))+
  #to turn the background white
  theme_bw() +
  #to eliminate background, gridlines, and chart border
  theme(
    plot.background = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    strip.background =element_rect(colour="white", 
                                    fill="white"),
    panel.border=element_blank(),
    #the lines below move the legend to the bottom right of plot, 
    #make it horizontal, and so the title is on the top
    legend.position= c(0.75, 0.1),
    legend.box="horizontal")+
    guides(colour = guide_colourbar(title.position="top", title.hjust = 0.5))+
    #to draw x and y axis line
    theme(axis.line = element_line(color = 'black'))
    

















































































#PERCENTAGE OF AUSTRALIANS WITH LTBI - ROW - MEDIAN, COLUMN  - Uncertainty 
percent<-lapply(Anum, function(df){
  pop<-sum(df$pop)
  sumLTBI<-colSums(df[,16:215])
  LTBIpercent<-sapply(sumLTBI[1:200], function(v) {
    (v/pop)*100
  })
  LTBIpercent<-as.data.frame(LTBIpercent)
})
percent<-rbindlist(percent, idcol = "year")
percent$year[percent$year=="1"]<-"2006"
percent$year[percent$year=="2"]<-"2011"
percent$year[percent$year=="3"]<-"2016"

##get the row medians and sum
medpcnt<-lapply(Anum, function(df){
  pop<-sum(df$pop)
  med<-sum(df$med)
  medpercent<-(med/pop)*100
  medpercent<-as.data.frame(medpercent)
})
medpcnt<-rbindlist(medpcnt, idcol = "year")
medpcnt$year[medpcnt$year=="1"]<-"2006"
medpcnt$year[medpcnt$year=="2"]<-"2011"
medpcnt$year[medpcnt$year=="3"]<-"2016"
#2006 - 4.215503
#2011 - 4.525116
#2016 - 4.829251

ggplot(percent, aes(x=year, y=LTBIpercent)) +
  geom_boxplot(fatten=NULL) + #Fatten=NULL removes median line
  labs(x = "Year", y = "Estimated percentage with LTBI") +
  geom_jitter(width = 0.2)+
  scale_y_continuous(breaks = seq(0, 27, 1))+
  #to turn the background white
  theme_bw()+
  geom_errorbar(data=medpcnt, aes(y=NULL, ymax=medpercent, ymin=medpercent), colour="black")







#Comparing overseas-born population and risk
#Putting it into a horizontal facet grid thingy
#recent arrivals other than the major ones Pakistan, Nepal, Korea, Sri Lanka, South Africa and Iran

risk06<-Arisk[[1]]
risk11<-Arisk[[2]]

risk16I<-risk16[risk16$iso3=="MYS"|risk16$iso3=="ZAF"|risk16$iso3=="PHL"|risk16$iso3=="NZL"|risk16$iso3=="GBR"|risk16$iso3=="VNM"|risk16$iso3=="CHN"|risk16$iso3=="ITA"|risk16$iso3=="IND",]
risk11I<-risk11[risk11$iso3=="MYS"|risk11$iso3=="ZAF"|risk11$iso3=="PHL"|risk11$iso3=="NZL"|risk11$iso3=="GBR"|risk11$iso3=="VNM"|risk11$iso3=="CHN"|risk11$iso3=="ITA"|risk11$iso3=="IND",]
risk06I<-risk06[risk06$iso3=="MYS"|risk06$iso3=="ZAF"|risk06$iso3=="PHL"|risk06$iso3=="NZL"|risk06$iso3=="GBR"|risk06$iso3=="VNM"|risk06$iso3=="CHN"|risk06$iso3=="ITA"|risk06$iso3=="IND",]

risk16I<-risk16[risk16$iso3=="PAK"|risk16$iso3=="NPL"|risk16$iso3=="LKA"|risk16$iso3=="ZAF"|risk16$iso3=="IRN"|risk16$iso3=="VNM"|risk16$iso3=="KOR",]

#horizontal bars showing age distribution and risk of residents by country of birth
dev.off()
ggplot(risk16I, aes(x = yoa, y = pop, fill = med, width=.5))+
  geom_bar(stat="identity")+
  ggtitle("Risk of LTBI amongst overseas-born residents from countries with a high incidence of MDR-TB in 2016")+
  labs(x = "Age", y = "Population")+
  #makes mulitple horizontal planels based on iso3 variable
  facet_grid(iso3 ~ .)+
  scale_y_continuous(breaks = seq(0, 25000, 10000))+
  scale_x_continuous(breaks = seq(0, 100, 10))+
  # to adjust the fill colours, and fix them
  scale_fill_viridis(name="Median risk of latent TB", alpha = 0.5, begin = 0, end = 1, direction = -1,
                     discrete = FALSE, option = "D",limits = c(0, 1))+
  #to turn the background white
  theme_bw() +
  #add text titles inside the plots
  geom_text(aes(label=cob, x = Inf, y = Inf, hjust = 1.5, vjust = 1.5)) +
  #to eliminate background, gridlines, and chart border
  theme(
    legend.title=element_text(size=10),
    plot.background = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    strip.background =element_rect(colour="white", 
                                   fill="white"),
    strip.text=element_blank())+
  #guides(fill = guide_legend(title.hjust = 8))+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))


ggplot(risk16I, aes(x = yoa, y = pop, colour = med))+
  geom_point(alpha = 0.4, 
             #moves the points slightly so they don't seem to be in lines
             position = position_jitter(w = 0.3, h = 0.3))+
  #makes mulitple horizontal planels based on iso3 variable
  facet_grid(iso3 ~ .)+
  ggtitle("Risk of LTBI and age and year of arrival among 2016 Australian residents born overseas") +
  labs(x = "Year of arrival", y = "Age at arrival (years)",
       size="Population")+
  scale_size_continuous(limits=c(1,5000), range = c(0.2, 5), breaks=c(10,100,1000,4000))+
  scale_y_continuous(breaks = seq(0, 100, 10), limits = c(-1, 100))+
  scale_x_continuous(breaks = seq(1900, 2016, 10))+
  # to adjust the fill colours, and fix them
  scale_colour_viridis(name="Median risk of\n latent TB", alpha = 0.5, begin = 0, end = 1, direction = -1,
                       discrete = FALSE, option = "D",limits = c(0, 1))+
  #to turn the background white
  theme_bw() +
  #to eliminate background, gridlines, and chart border
  theme(
    plot.background = element_blank()
    ,panel.grid.major = element_blank()
    ,panel.grid.minor = element_blank()
    ,strip.background =element_rect(colour="white", 
                                    fill="white")
    ,panel.border=element_blank()
    ,strip.text.y = element_text(size = 8, angle = 360),element_blank())+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))

#OVERSEAS BORN

# Good ones to look at are India (IND), Vietnam (VNM), Greece (GRC) or Italy (ITA), 
# Can also look at CHina (CHN),  Philippines (PHL), UK (GBR), Malaysia (MYS), Macedonia (MKD), 
# Pakistan (PAK), Sri Lanka (LKA), Myanmar (MMR), Hong Kong (HKG), SUdan (SDN)
#Will consider India, Vietnam, China and Italy 

#Putting it into a horpizontal facet grid thingy
risk16I<-risk16[risk16$iso3=="MYS"|risk16$iso3=="ZAF"|risk16$iso3=="PHL"|risk16$iso3=="NZL"|risk16$iso3=="GBR"|risk16$iso3=="VNM"|risk16$iso3=="CHN"|risk16$iso3=="ITA"|risk16$iso3=="IND",]
dev.off()
ggplot(risk16I, aes(x = yoa, y = aaa, colour = med, size=pop ))+
  geom_point(alpha = 0.4, 
             #moves the points slightly so they don't seem to be in lines
             position = position_jitter(w = 0.3, h = 0.3))+
  #makes mulitple horizontal planels based on iso3 variable
  #the single dot after the iso3 makes the panels horizontal
  facet_grid(iso3~.,scales="free")+
  ggtitle("Risk of LTBI and age and year of arrival among 2016 Australian residents born overseas") +
  labs(x = "Year of arrival", y = "Age at arrival (years)",
       size="Population")+
  scale_size_continuous(limits=c(1,5000), range = c(0.2, 5), breaks=c(10,100,1000,4000))+
  scale_y_continuous(breaks = seq(0, 100, 10), limits = c(-1, 100))+
  scale_x_continuous(breaks = seq(1900, 2016, 10))+
  # to adjust the fill colours, and fix them
  scale_colour_viridis(name="Median risk of\n latent TB", alpha = 0.5, begin = 0, end = 1, direction = -1,
                       discrete = FALSE, option = "D",limits = c(0, 1))+
  #to turn the background white
  theme_bw() +
  #to eliminate background, gridlines, and chart border
  theme(
    plot.background = element_blank()
    ,panel.grid.major = element_blank()
    ,panel.grid.minor = element_blank()
    ,strip.background =element_rect(colour="white", 
                                    fill="white")
    ,panel.border=element_blank()
    ,strip.text.y = element_text(size = 8, angle = 360),element_blank())+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))

#Showing migration overtime
risk16I<-risk16[risk16$iso3=="VNM"|risk16$iso3=="CHN"|risk16$iso3=="ITA"|risk16$iso3=="IND",]
dev.off()
ggplot(risk16I, aes(x = yoa, y = aaa, color = iso3, size=pop ))+
  geom_point(alpha = 0.4, 
             #moves the points slightly so they don't seem to be in lines
             position = position_jitter(w = 0.3, h = 0.3))+
  ggtitle("Overseas-born Australian residents 2016") +
  labs(x = "Year of arrival", y = "Age at arrival (years)",
       size="Population number", colour="Country of birth") +
  scale_size_area(max_size = 10)+
  scale_color_manual(values =  c("green", "blue","red", "gray45", "purple"))+
  scale_y_continuous(breaks = seq(0, 100, 10))+
  scale_x_continuous(breaks = seq(1900, 2016, 10))+
  #to turn the background white
  theme_bw() +
  #to eliminate background, gridlines, and chart border
  theme(
    plot.background = element_blank()
    ,panel.grid.major = element_blank()
    ,panel.grid.minor = element_blank()
    ,panel.border = element_blank())+  
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))

breaks=c(10,25,50,100,250,500)
scale_size_area(max_size = 10,breaks=c(10,25,50,100,250,500))+



#Unstacked area chart - not great, too messy.
dev.off()
ggplot(pop16I, aes(x = yoa, y = x, fill = iso3 ))+
  geom_area(position = 'identity', alpha=0.6) +
  labs(x = "Year of arrival", y = "Population number", fill="Country of birth") +
  scale_size_area(max_size = 10)+
  scale_y_continuous(breaks = seq(0, 60000, 10000))+
  scale_x_continuous(breaks = seq(1900, 2016, 10))+
  #to turn the background white
  theme_bw() +
  #to eliminate background, gridlines, and chart border
  theme(
    plot.background = element_blank()
    ,panel.grid.major = element_blank()
    ,panel.grid.minor = element_blank()
    ,panel.border = element_blank())+  
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black')) 

#Stacked area chart - not great, too messy.
dev.off()
ggplot(pop16I, aes(x = yoa, y = x, fill = iso3 ))+
  geom_area(position = 'stack') +
  labs(x = "Year of arrival", y = "Population number", fill="Country of birth") +
  scale_size_area(max_size = 10)+
  scale_y_continuous(breaks = seq(0, 60000, 10000))+
  scale_x_continuous(breaks = seq(1900, 2016, 10))+
  #to turn the background white
  theme_bw() +
  #to eliminate background, gridlines, and chart border
  theme(
    plot.background = element_blank()
    ,panel.grid.major = element_blank()
    ,panel.grid.minor = element_blank()
    ,panel.border = element_blank())+  
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black')) 

#Round the median risk to the nearest order the dataset
Ariskagyg<-lapply(Ariskagyg, function(df){
  df$med<-round(df$med,digits=2)
  #Reorder columns by median risk
  df<-df[order(df$med,df$iso3), ]
})





risk16I<-risk16[risk16$iso3=="VNM",]
dev.off()
ggplot(risk16I, aes(x = yoa, y = aaa, colour = med, size=pop ))+
  geom_point(alpha = 0.4, 
             #moves the points slightly so they don't seem to be in lines
             position = position_jitter(w = 0.3, h = 0.3))+
  ggtitle("Vietnam-born Australian residents") +
  labs(x = "Year of arrival", y = "Age at arrival (years)",
       size="Population")+
  scale_size_continuous(limits=c(1,5000), range = c(0.5, 12), breaks=c(10,100,1000,4000))+
  scale_y_continuous(breaks = seq(0, 100, 10), limits = c(-1, 100))+
  scale_x_continuous(breaks = seq(1900, 2016, 10))+
  # to adjust the fill colours, and fix them
  scale_colour_viridis(name="Median risk of\n latent TB", alpha = 0.5, begin = 0, end = 1, direction = -1,
                       discrete = FALSE, option = "D",limits = c(0, 1))+
  #to turn the background white
  theme_bw() +
  #to eliminate background, gridlines, and chart border
  theme(
    plot.background = element_blank()
    ,panel.grid.major = element_blank()
    ,panel.grid.minor = element_blank()
    ,panel.border = element_blank())+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))




#LOOKING AT SEPARATE COUNTRIES 
#Creating a dataset of the number with LTBI by country of birth and agegroup
cob<-lapply(Anum, function(df){
  df<-df[df$iso3=="AFG",]
  df$id<-NULL
  df$yob<-NULL
  df$age<-NULL
  df$yoa<-NULL
  df$cob<-NULL
  df$iso3<-NULL
  df<-df %>%
    group_by(agegroup) %>% # aggregating by agegroup
    summarise_all(funs(sum))
  x <- c("0-9", "10-19", "20-29", "30-39", "40-49","50-59","60-69","70-79","80-89","90-99","100+")
  df$agegroup <- factor(df$agegroup, levels = x)
  df<-as.data.frame(df)
})
cob06<-cob[[1]]
cob06<-cob[[2]]
cob06<-cob[[3]]
cobmed<-lapply(Anum, function(df){
  df<-df[df$iso3=="AFG",]
  df$id<-NULL
  df$yob<-NULL
  df$age<-NULL
  df$yoa<-NULL
  df$cob<-NULL
  df$iso3<-NULL
  df$pop<-NULL
  df<-df %>%
    group_by(agegroup) %>% # aggregating median by iso3 and agegroup
    summarise_all(funs(sum))
  x <- c("0-9", "10-19", "20-29", "30-39", "40-49","50-59","60-69","70-79","80-89","90-99","100+")
  df$agegroup <- factor(df$agegroup, levels = x)
  df<-df[,1:2]
  df<-as.data.frame(df)
})
cobmed06<-cobmed[[1]]
cobmed06<-cobmed[[2]]
cobmed06<-cobmed[[3]]

colnames(df)<-x
df<-as.data.frame(df)
colnum<-ncol(df)
ms<-11-colnum
if(ms>0) {
  for (j in 1:ms) { 
    d<-colnum+j
    df[, ncol(df) + 1] <- NA
    names(df)[ncol(df)] <- paste0("V", d)
  }
}
df

# A look at changes in the age breakdown of residents born in different countries overtime
#NEED TO ADD COUNTRY ISO CODE BELOW... MAY NEED TO CHANGE SCALE OF FIGURE
# Good ones to look at are India (IND), Vietnam (VNM), Greece (GRC) or Italy (ITA), 
# Can also look at CHina (CHN),  Philippines (PHL), UK (GBR), Malaysia (MYS), Macedonia (MKD), 
# Pakistan (PAK), Sri Lanka (LKA), Myanmar (MMR), Hong Kong (HKG), SUdan (SDN), Afghanistan (A)
dev.off()


#par(mfrow=c(3,1)) # 3 in one column 
#par(oma=c(0,20,0,10)) #the first figure creates space under figures for legend


ggplot(melt(cob06), aes(x=agegroup, y=value)) +
  geom_boxplot(fatten=NULL) + #Fatten=NULL removes median line
  labs(x = "Age group", y = "Population") +
  scale_y_continuous(breaks = seq(0, 6000, 1000))+
  #to turn the background white
  theme_bw()+
  geom_errorbar(data=cobmed06, aes(y=NULL, ymax=med, ymin=med), colour="black")
  
  
ggplot(pop16I, aes(x = yoa, y = x, fill = iso3 ))+
  geom_area(position = 'identity', alpha=0.6) +
  labs(x = "Year of arrival", y = "Population number", fill="Country of birth") +
  scale_size_area(max_size = 10)+
  scale_y_continuous(breaks = seq(0, 60000, 10000))+
  scale_x_continuous(breaks = seq(1900, 2016, 10))+
  #to turn the background white
  theme_bw() +
  #to eliminate background, gridlines, and chart border
  theme(
    plot.background = element_blank()
    ,panel.grid.major = element_blank()
    ,panel.grid.minor = element_blank()
    ,panel.border = element_blank())+  
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black')) 




































#Creating a dataset of the risk of having LTBI by country of birth and agegroup
Ariskcobag<-lapply(Arisk, function(df){
  df$id<-NULL
  df$yob<-NULL
  df$age<-NULL
  df$yoa<-NULL
  df$cob<-NULL
  df<-df[,c(1,3,2,4:203)]
  df<-df %>%
    group_by(iso3, agegroup) %>% # aggregating by iso3 and agegroup
    summarise_all(funs(sum))
  df$med<-apply(df[,4:203], 1, median) # find the median risk for each row
  df<-df[order(df$med),] # order the dataframes by the median risk
  df<-df[,c(1,2,3,204,4:203)] # get the median column to the front
})
check<-Ariskcobag[[1]]

#Reordering the rows 
x <- c("0-9", "10-19", "20-29", "30-39", "40-49","50-59","60-69","70-79","80-89","90-99","100+")
Anumag<-lapply(Anumag, function(df){
  df<-df %>% slice(match(x, agegroup))
  df
})

#Creating a new dataframe that sums those at risk by iso3
numLTBIbycob<-aggregate(numLTBI[,6:206], by=list(cob=numLTBI$iso3),sum)
dfnumLTBIbycob<-as.data.frame(numLTBIbycob)

df06bycob<-aggregate(df06[,7:206], by=list(cob=df06$iso3),sum)
df11bycob<-aggregate(df11[,7:206], by=list(cob=df11$iso3),sum)
df16bycob<-aggregate(df16[,7:206], by=list(cob=df16$iso3),sum)









#Limiting it to countries with populations of over 2000
numLTBIbycobsig<-dfnumLTBIbycob[dfnumLTBIbycob$pop>2000,]

#Find median values of all replicates for each country and sort by this row
numLTBIbycobsig$iso3med<-apply(numLTBIbycobsig[,3:202], 1, median)
numLTBIbycobsig<-numLTBIbycobsig[order(numLTBIbycobsig$iso3med),]
numLTBIbycobsig<-numLTBIbycobsig[c(1,203,2,3:202)]

#Transposing the plot so I can plot the data using matplot
tnumLTBIbycobsig<-t(numLTBIbycobsig[,4:203])

#Make column names. Use first column of previous dataframe
colnames(tnumLTBIbycobsig) <- numLTBIbycobsig[,1 ] 

#Sort columns by median column values
cob20<-tnumLTBIbycobsig[,1:20]
cob40<-tnumLTBIbycobsig[,21:40]
cob50<-tnumLTBIbycobsig[,41:50]
cob69<-tnumLTBIbycobsig[,51:69]


options(scipen=999) #To disable sicentific notation on the axis
boxplot(cob69,
        main="Victorians with LTBI by country of birth \nEstimated numbers using Houben and Dodd's 200 replicates.",
        par(pin=c(11, 7)),
        cex.names=0.2,
        cex.axis=0.8,
        xlab="Country (ISO3)",
        use.cols = TRUE, 
        main="Box plot", ylab="Number")


axis(2,at=marks,labels=format(marks,scientific=FALSE))

### Why are there so many outliers in
## the Australian estimates? Because 
##it is the largest population?


dftnumLTBIbycobsig<-as.data.frame(tnumLTBIbycobsig)

max(dftnumLTBIbycobsig["AUS"])
min(dftnumLTBIbycobsig["AUS"])


# Analysing the entire dateset by cob and agegroup
numLTBI$agegroup <- as.character(cut(numLTBI$age, breaks=c(-1,9,19,29,39,49,59,69,79,89,99,109),
                                     labels=c('0-9', '10-19', '20-29', '30-39', '40-49','50-59','60-69','70-79','80-89','90-99','100+' )))
numLTBI<-numLTBI[c(1,2,207,3,4,5,6,7:206)]
numLTBI<-numLTBI[c(1,2,4,5,6,3,8:207)]
numLTBI<-numLTBI[c(1,2,4,5,3,6,7:206)]

# Aggregate by cob and age-group 
meltnumLTBI<-numLTBI[,5:206]
numLTBIcobagp<-meltnumLTBI %>%
  group_by(iso3, agegroup) %>% 
  summarise_each(funs(sum))
#Which groups account for the highest number with LTBI
numLTBIcobagp$iso3med<-apply(numLTBIcobagp[,3:202], 1, median)
numLTBIcobagp<-numLTBIcobagp[order(numLTBIcobagp$iso3med),]

# Aggregate by cob and year of arrival and age-group 
melt2numLTBI<-numLTBI[,4:206]
numLTBIcobyoaagp<-melt2numLTBI %>%
  group_by(iso3, yoa, agegroup) %>% 
  summarise_each(funs(sum))
#Which groups account for the highest number with LTBI
numLTBIcobyoaagp$iso3med<-apply(numLTBIcobyoaagp[,4:203], 1, median)
numLTBIcobyoaagp<-numLTBIcobyoaagp[c(1,2,3,204,4:203)]
numLTBIcobyoaagp<-numLTBIcobyoaagp[order(numLTBIcobyoaagp$iso3med),]











#Function to create percentage of pop with LTBI by agegroup
perctLTBI<-function(v) {
  (v/numLTBIbycob$pop)*100
}

#Creating a list of percentage of born with LTBI by cob, from all replicates CHECKED
percentLTBIbycob <- sapply(numLTBIbycob[,3:202], perctLTBI)
dfpercentLTBIbycob<-as.data.frame(percentLTBIbycob)

##Creating unique IDs for LTBInum
dfpercentLTBIbycob$id <- seq.int(nrow(dfpercentLTBIbycob))
numLTBIbycob$id <- seq.int(nrow(numLTBIbycob))

numLTBIbycob<-numLTBIbycob[,c(1,2,203,3:202)]
cencob<-numLTBIbycob[,1:3]

#Merging it census data
percentLTBIcob <- merge(dfpercentLTBIbycob, cencob,by=c('id'))
percentLTBIcob<-percentLTBIcob[,c(1,2,203,3:202)]
percentLTBIcob<-numLTBIcob
dfpercentLTBIcob<-as.data.frame(percentLTBIcob)

#Limiting it to countries with populations of over 2000
percentLTBIcobsig<-dfpercentLTBIcob[dfpercentLTBIcob$pop>2000,]
percentLTBIcobsig<-percentLTBIcobsig[,3:203]

#Find median values of all replicates for each country and sort by this row
percentLTBIcobsig$iso3med<-apply(percentLTBIcobsig[,2:201], 1, median) 


percentLTBIcobsigo<-percentLTBIcobsig[order(percentLTBIcobsig$iso3med),]
percentLTBIcobsigo<-percentLTBIcobsigo[c(1,202,2:201)]
percentLTBIcobsig<-percentLTBIcobsigo

#Transposing the plot so I can plot the data using matplot
tpercentLTBIcobsig<-t(percentLTBIcobsig[,2:201])

#Make column names. Use first column of previous dataframe
colnames(tpercentLTBIcobsig) <- percentLTBIcobsig[,1 ] 

#Sort columns by median column values
cob20<-tpercentLTBIcobsig[,1:20]
cob40<-tpercentLTBIcobsig[,21:40]
cob50<-tpercentLTBIcobsig[,31:50]
cob69<-tpercentLTBIcobsig[,51:69]

boxplot(cob69,
        main="Victorians with LTBI by country of birth \nEstimated percentages from Houben and Dodd's 200 replicates.",
        par(pin=c(15, 6)),
        cex.names=0.2,
        cex.axis=0.8,
        xlab="Country (ISO3)",
        use.cols = TRUE, 
        main="Box plot", ylab="Percentage with LTBI")


boxplot(cob69,
        main="Victorians with LTBI by country of birth \nEstimated percentages from Houben and Dodd's 200 replicates.",
        par(pin=c(15, 6)),
        cex.names=0.2,
        cex.axis=0.8,
        xlab="Country (ISO3)",
        use.cols = TRUE, 
        main="Box plot", ylab="Percentage with LTBI")




# Split the first column based on rowID
boxList <- split(tpercentLTBIcobsig, tpercentLTBIcobsig[,1])


#???????
names(tpercentLTBIcobsig) <- as.matrix(tpercentLTBIcobsig[1, ])
tpercentLTBIcobsig <- tpercentLTBIcobsig[-1, ]
tpercentLTBIcobsig[] <- lapply(tpercentLTBIcobsig, function(x) type.convert(as.character(x)))

for (i in seq_along(mylist)) {
  tpercentLTBIcobsig[[i]]$rowID <- 1:nrow(mylist[[i]])
}

# Stick all the data frames into one single data frame
allData <- do.call(rbind, mylist)

# Split the first column based on rowID
boxList <- split(allData[,1], allData$rowID)

# boxplot likes a list
boxplot(boxList)


#Labelling columns
coblist<-percentLTBIcobsig[,1]
colnames(tpercentLTBIcobsig) <- paste(coblist, 1:69)










#Merging the population by agegroup and number by agegroup tables
LTBIbyagegrp <- merge(popbyagegrp,numLTBIbyagp, by.x = "agegroup")
#Reordering the rows 
x <- c("0-9", "10-19", "20-29", "30-39", "40-49","50-59","60-69","70-79","80-89","90-99","100+")
LTBIbyagegrp<-LTBIbyagegrp %>% slice(match(x, agegroup))




byagegroup<-lapply(byagegroup, cbind, agegroup <- as.character(cut(v$age, breaks=c(-1,9,19,29,39,49,59,69,79,89,99,109),
                                 labels=c('0-9', '10-19', '20-29', '30-39', '40-49','50-59','60-69','70-79','80-89','90-99','100+' ))))

######## What do I want to know?
#Is the burden of LTBI increasing or decreasing in Australia overtime?
#Which populations (age-group, year of arrival and country of birth) do we see the greatest burden of LTBI?
#How is the burden of LTBI changing in Australia overtime, with regards to the populations?
  # i.e. is the burden in the older mediterraneam born population declining, and the
  # burden in the Vietnamese born etc increasing?
#Where are the populations with the greatest bruden of LTBI settling in Australia?
  #It really will be necessary to talk about this stuff spatially in this paper, because
  # I don't know what else I can talk about.
  #I could use less detailed census data to work out where different populations settle in Australia maybe?
  #Is there an urban to regional shift at all, or not really?
#How can I argue that the paper is relevant when really I could just map the burden of active TB.
#Or is it about knowing where the burden is, not just for cases that happen in the next two years, but
#also for those that happen in thirty years from now? i.e. thinking about mortality? Could I get my
#mortality stuff in there? Probably not until the next paper!
#What are our at risk populations? Maybe this is for the next paper too!
#Could I do an analysis to work out who has obtained their LTBI recently?





#2016 check
#Austrisk has 161608 rows and it should have 201463
#Aust has 201463 rows, so, really, the fina l Austrisk should have that, 39855 rows are missing
# At the moment Austrisk 2016 ends at 161419



sum(Austbornnum$pop,na.rm=TRUE)
#15,615,550, all good!

sum(Austnum$pop,na.rm=TRUE)
#20,652,606, should be 21,453,165

sum(Aust$pop,na.rm=TRUE)
#5,837,615

sum(Austrisk$pop[Austrisk$iso3!="AUS"],na.rm=TRUE)
sum(Austrisk16$pop[Austrisk16$iso3!="AUS"],na.rm=TRUE)
#both 5,035,361, should be 5,837,615
sum(Austnum$pop[Austnum$iso3!="AUS"],na.rm=TRUE)
sum(Austnum16$pop[Austnum16$iso3!="AUS"],na.rm=TRUE)
#both 5,037,056, should be 5,837,615 

test6risk<-Austrisk[1:6]
test6num<-Austnum[1:6]
missinginnum<-setdiff(test6risk, test6num)
sum(missinginnum$pop,na.rm=TRUE)
###Norfolk Island is missing in Austnum - pop equals 677

missinginrisk<-setdiff(test6num,test6risk)
sum(missinginrisk$pop,na.rm=TRUE)
###SUDAN IS MISSING in Austrisk but not Austnum??????, this pop equals 2372


testAust<-Aust[1:6]
test6num<-Austnum[1:6]
missinnumfromAust<-setdiff(testAust, test6num)
sum(missinnumfromAust$pop,na.rm=TRUE)
#800,559, 
unique(missinnumfromAust$cob,na.rm=TRUE)
# [1] "Sudan"                         "Senegal"                       "Singapore"                     "Solomon.Islands"              
# [5] "Sierra.Leone"                  "El.Salvador"                   "Somalia"                       "Southern.and.East.Africa..nfd"
# [9] "Serbia"                        "Kosovo"                        "South.Sudan"                   "Suriname"                     
# [13] "Slovakia"                      "Slovenia"                      "Sweden"                        "Swaziland"                    
# [17] "Seychelles"                    "Syria"                         "Togo"                          "Thailand"                     
# [21] "South.East.Asia..nfd"          "Tajikistan"                    "Tokelau"                       "Timor.Leste"                  
# [25] "Tonga"                         "Trinidad.and.Tobago"           "Tunisia"                       "Turkey"                       
# 29] "Tuvalu"                        "Tanzania"                      "Uganda"                        "Ukraine"                      
# [33] "Uruguay"                       "United.States.of.America"      "Northern.America..nfd"         "Uzbekistan"                   
# [37] "Venezuela"                     "Vietnam"                       "Vanuatu"                       "Samoa"                        
# [41] "Yemen"                         "South.Africa"                  "Zambia"                        "Zimbabwe" 

##Austnum has more than Aust risk! 1695 missing
#677 from Norfolk Island are missing in num
#2372 from Sudan are missing in risk, and this accounts for difference

#2011 check
sum(Austnum11$pop[Austnum11$iso3!="AUS"],na.rm=TRUE)
#5,045,925
sum(Aust11$pop[Aust11$iso3!="AUS"],na.rm=TRUE)
#5,045,925
testAust11<-Aust11[1:6]
testnum11<-Austnum11[1:6]
missinnumfromAust11<-setdiff(testAust11, testnum11)
sum(missinnumfromAust11$pop,na.rm=TRUE)
#None?

#2006 check
sum(Austnum06$pop[Austnum06$iso3!="AUS"],na.rm=TRUE)
#4,192,871
sum(Aust06$pop[Aust06$iso3!="AUS"],na.rm=TRUE)
#4,192,871
testAust06<-Aust06[1:6]
testnum06<-Austnum06[1:6]
missinnumfromAust06<-setdiff(testAust06, testnum06)
sum(missinnumfromAust06$pop,na.rm=TRUE)
#None?


str(Aust11)

Austnum11$iso3<-as.character(Austnum11$iso3)

#Plotting a histogram of the percentages of  born with LTBI, produced by replicates 1-200
dev.off()
hist(LTBIpercent, main="Percentages of ian born Victorians with LTBI\nResults from 200 replicates",      
     xlab="Percentage of ian born Victorians with LTBI", ylab="Frequency",
     breaks=150,
     col="red")
axis(1, at=seq(1,15, by=1)) 
str(LTBIpercent)

#Plotting the variety of the percentages of  born with LTBI that are produced by replicates 1-200
dev.off()
plot(LTBIpercent, main="Percentages of Victorians estimated to have LTBI\nResults from 200 replicates",
     xlab="Replicate number", ylab="Percentage",
     col="red") 

#Creating an agegroup variable
numLTBI$agegroup <- as.character(cut(numLTBI$age, breaks=c(-1,9,19,29,39,49,59,69,79,89,99,109),
                                     labels=c('0-9', '10-19', '20-29', '30-39', '40-49','50-59','60-69','70-79','80-89','90-99','100+' )))

#Creating a new dataframe that sums those at risk by age-group
numLTBIbyagp<-aggregate(numLTBI[,7:206], by=list(agegroup=numLTBI$agegroup),sum)

#Creating a new dataframe that sums overall population by age-group
popbyagegrp<-aggregate(numLTBI["pop"], by=list(agegroup=numLTBI$agegroup),sum)
popbyagegrp

#Merging the population by agegroup and number by agegroup tables
LTBIbyagegrp <- merge(popbyagegrp,numLTBIbyagp, by.x = "agegroup")
#Reordering the rows 
x <- c("0-9", "10-19", "20-29", "30-39", "40-49","50-59","60-69","70-79","80-89","90-99","100+")
LTBIbyagegrp<-LTBIbyagegrp %>% slice(match(x, agegroup))

#FUnction to create percentage of pop with LTBI by agegroup
perctLTBI<-function(v) {
  (v/LTBIbyagegrp$pop)*100
}

#Creating a list of percentage of  born with LTBI, from all replicates CHECKED
LTBIpercentbyagp <- sapply(LTBIbyagegrp[,3:202], perctLTBI)

#Adding an age-group rowname
agegroup <-  c("0-9", "10-19", "20-29", "30-39", "40-49","50-59","60-69","70-79","80-89","90-99","100+")
rownames(LTBIpercentbyagp) <- paste(agegroup, 1:11)

#Transposing the plot so I can plot the data using matplot
tLTBIpercentbyagp<-t(LTBIpercentbyagp)
dfLTBIpercentbyagp<-as.data.frame(tLTBIpercentbyagp)
#Labelling columns
x <- c("0-9", "10-19", "20-29", "30-39", "40-49","50-59","60-69","70-79","80-89","90-99","100+")
colnames(dfLTBIpercentbyagp) <- paste(x, 1:11)

#Comparing the distributions for the different agegroups
older<-dfLTBIpercentbyagp[,6:11]
younger<-dfLTBIpercentbyagp[,1:5]

dev.off()
boxplot(older,
        main="Victorians with LTBI by age-group, >=50 years.\nEstimated percentages from Houben and Dodd's 200 replicates.",
        par(pin=c(6, 6)),
        cex.names=0.2,
        cex.axis=0.8,  
        xlab="Age group",
        use.cols = TRUE, 
        main="Box plot", ylab="Percentage with LTBI")


boxplot(younger,
        main="Victorians with LTBI by age-group, <50 years.\nEstimated percentages from Houben and Dodd's 200 replicates.",
        par(pin=c(6, 6)),
        cex.names=0.2,
        cex.axis=0.8,
        xlab="Age group",
        use.cols = TRUE, 
        main="Box plot", ylab="Percentage with LTBI")













































percentpop<-function(df) {
  pop<-sum(df$pop)
  sumLTBI<-colSums(df[,8:207])
  LTBIpercent<-sapply(sumLTBI, function(v) {
    (v/pop)*100
  })
}
pop<-sum(df$pop[df$iso3=="AUS"])
nm<-df[df$iso3=="AUS",]
nm$iso3med<-apply(nm[,8:207],1, median)
med<-sum(nm$iso3med) 
medpercent<-(med/pop)*100

LTBIpercent<-sapply(Anum, percentpop) 
LTBIpercent<-as.data.frame(LTBIpercent)

summary(LTBIpercent$V1)
summary(LTBIpercent$V2)
summary(LTBIpercent$V3)

boxplot(LTBIpercent,
        names=c("2006","2011","2016"),
        main="Percentage of Australian residents estimated to have LTBI\n Using Houben and Dodd's 200 replicates.",
        par(pin=c(6, 6)),
        cex.names=0.2,
        cex.axis=0.8, 
        ylim = c(0, 22),
        xlab="Year",
        use.cols = TRUE, 
        main="Box plot", ylab="Estimated pecentage with LTBI, summary of 200 replicates")










num2006id1<-num06[num06$id==1,]
num2006id1<-num2006id1[,8:207]
num2006id1<-as.numeric(num2006id1)
num2006id171686<-num06[num06$id==171686,]
num2006id171686<-num2006id171686[,8:207]
num2006id171686<-as.numeric(num2006id171686)

num2006id3515<-num06[num06$id==3515,]
num2006id3515<-num2006id3515[,8:207]
num2006id3515<-as.numeric(num2006id3515)

dev.off()
plot(num2006id1, main="Estimated number of 86 year olds Afghanis with LTBI,\nof those that arrived in 1989\nResults from 200 replicates",      
     xlab="Estimated number of Australians with LTBI", ylab="Number???",
     breaks=150,
     col="red")

plot(num2006id3515, main="Estimated number of 106 year old Australians with LTBI,\nResults from 200 replicates",      
     xlab="Estimated number of Australians with LTBI", ylab="Number",
     breaks=150,
     col="red")

plot(num2006id171686, main="Estimated number of 1 year old Zimbabweans with LTBI,\n of those that arrived in 2006, \nResults from 200 replicates",      
     xlab="Estimated number of Australians with LTBI", ylab="Number",
     breaks=150,
     col="red")


# Normal Pie Chart with percentages
dev.off()
par(mfrow=c(1,3) ) # 1 row and 3 columns for plots

lbls06 <- c("Aust born", "Aust born LTBI", "Overseasborn LTBI","Overseas born")
pct06 <- round(Apopsum06/sum(Apopsum06)*100)
lbls06 <- paste(lbls06, pct06) # add percents to labels 
lbls06 <- paste(lbls06,"%",sep="") # ad % to labels 
pie(Apopsum06,labels = lbls06, 
    col=c("gray88", "gray45", "gray35", "gray73"),
    main="Pie Chart of 2006 pop")

lbls11 <- c("Aust born", "Aust born LTBI", "Overseasborn LTBI","Overseas born")
pct11 <- round(Apopsum11/sum(Apopsum11)*100)
lbls11 <- paste(lbls11, pct11) # add percents to labels 
lbls11 <- paste(lbls11,"%",sep="") # ad % to labels 
pie(Apopsum11,labels = lbls11, 
    col=c("gray88", "gray45", "gray35", "gray73"),
    main="Pie Chart of 2011 pop")

lbls16 <- c("Aust born", "Aust born LTBI", "Overseasborn LTBI","Overseas born")
pct16 <- round(Apopsum16/sum(Apopsum16)*100)
lbls16 <- paste(lbls16, pct16) # add percents to labels 
lbls16 <- paste(lbls16,"%",sep="") # ad % to labels 
pie(Apopsum16,labels = lbls16, 
    col=c("gray88", "gray45", "gray35", "gray73"),
    main="Pie Chart of 2016 pop")





#Creating a new dataframes that sum overall population by age-group
Anumagt<-lapply(Anumag, function(df){
  df<-aggregate(df["pop"], by=list(agegroup=df$agegroup),sum)
  df<-df %>% slice(match(x, agegroup))
  df
})

df06byagp<- merge(df06pop, df06byagp,by=c('agegroup'))
df11byagp<- merge(df11pop, df11byagp,by=c('agegroup'))
df16byagp<- merge(df16pop, df16byagp,by=c('agegroup'))

#Reordering the rows 
x <- c("0-9", "10-19", "20-29", "30-39", "40-49","50-59","60-69","70-79","80-89","90-99","100+")
df06byagp<-df06byagp %>% slice(match(x, agegroup))
df11byagp<-df11byagp %>% slice(match(x, agegroup))
df16byagp<-df16byagp %>% slice(match(x, agegroup))



#Adding an age-group rowname
agegroup <-  c("0-9", "10-19", "20-29", "30-39", "40-49","50-59","60-69","70-79","80-89","90-99","100+")
rownames(df06percentbyagp) <- paste(agegroup, 1:11)
rownames(df11percentbyagp) <- paste(agegroup, 1:11)
rownames(df16percentbyagp) <- paste(agegroup, 1:11)





boxplot(cob06,
        col=(c("gray88")),
        names = c("0-9", "10-19", "20-29", "30-39", "40-49","50-59","60-69","70-79","80-89","90-99","100+"),
        ylim = c(0, 80000), las=1)
mtext(side = 2, "Number with LTBI", line = 4)
mtext(side = 1, text = "Age-group (years)", line = 3)
title("2006", line = -2)
boxplot(cob11,
        col=(c("gray88")),
        names = c("0-9", "10-19", "20-29", "30-39", "40-49","50-59","60-69","70-79","80-89","90-99","100+"),
        ylim = c(0, 80000), las=1)
mtext(side = 2, "Number with LTBI", line = 4)
mtext(side = 1, text = "Age-group (years)", line = 3)
title("2011", line = -2)
boxplot(cob16,
        col=(c("gray88")),
        names = c("0-9", "10-19", "20-29", "30-39", "40-49","50-59","60-69","70-79","80-89","90-99","100+"),
        ylim = c(0, 80000), las=1)
mtext(side = 2, "Number with LTBI", line = 4)
mtext(side = 1, text = "Age-group (years)", line = 3)
title("2016", line = -2)

rm(cob06)
rm(cob11)
rm(cob16)
dev.off()




#Find the mean of the median risks by age-group2, and the sum of the population
Ariskagyg<-lapply(Arisk, function(df){
  censusyear<-max(df$yoa,na.rm=TRUE)
  df$ysa<-censusyear-df$yoa
  df$aaa<-df$age-df$ysa
  df$aaag <- as.character(cut(df$aaa, breaks=c(-1,19,39,59,79,109),
                              labels=c('0-19', '20-39', '40-59',
                                       '60-79','80+' )))
  df<-df[,c(1,2,3,4,5,213,212,211,6:210)]
  df$ysa<-NULL
  df$id<-NULL
  df$yob<-NULL
  df$age<-NULL
  df$yoa<-NULL
  df$cob<-NULL
  df<-df[,c(1:7)]
  ddply(df, .(iso3, aaag, yoag, agegroup2), summarize, pop = sum(pop), med = mean(med))
})
riskgroups<-Ariskagyg[[3]]

yoaorder=c('1900-1909', '1910-1919', '1920-1929', 
           '1930-1939', '1940-1949','1950-1959',
           '1960-1969','1970-1979','1980-1989',
           '1990-1999','2000-2009','2010-2019')
agegporder<-c('0-19', '20-39', '40-59','60-79','80+' )
riskgroups$agegroup2f<- ordered(riskgroups$agegroup2, levels = agegporder)
riskgroups$agegroup2<-riskgroups$agegroup2f
riskgroups$agegroup2f<-NULL
riskgroups$yoagf<- ordered(riskgroups$yoag, levels = yoaorder)
riskgroups$yoag<-riskgroups$yoagf
riskgroups$yoagf<-NULL
riskgroups$aaaf<- ordered(riskgroups$aaag, levels = agegporder)
riskgroups$aaag<-riskgroups$aaaf
riskgroups$aaaf<-NULL



dev.off()
options(scipen=5)
par(mfrow=c(2,2) ) # 1 row and 3 columns for plots
par(oma=c(0,0,1,1))
par(mar=c(0,0,2,1))
boxplot(Apop,
        names=c("2006","2011","2016"),
        main="Number",
        par(pin=c(3,3)),
        cex.names=0.2,
        cex.axis=0.8, 
        ylim = c(0, 4000000),
        xlab="Year",
        use.cols = TRUE, 
        main="Box plot", ylab="Estimated number with LTBI. Summary of 200 replicates")
mtext(text="Year", side=1,cex=0.8, line=3.0)
boxplot(percent,
        names=c("2006","2011","2016"),
        main="Percentage",
        par(pin=c(3,3)),
        cex.names=0.2,
        cex.axis=0.8, 
        ylim = c(0, 22),
        xlab="Year",
        use.cols = TRUE, 
        main="Box plot", ylab="Estimated percentage with LTBI. Summary of 200 replicates")
mtext(text="Year", side=1,cex=0.8, line=3.0)
title("Australian residents estimated to have LTBI using Houben and Dodd's 200 replicates", outer=TRUE)

#Plotting a histogram of the percentages of born with LTBI, produced by replicates 1-200
dev.off()
hist(percentOB16, main="Estimated percentages of Australians with LTBI\nResults from 200 replicates",      
     xlab="Estimated percentage of Australians with LTBI", ylab="Frequency",
     breaks=150,
     col="red")
axis(1, at=seq(1,15, by=1)) 
str(LTBIpercent)



#DISPLAYING NUMBER OF AUST AND OVERSEASBORN OVERTIME - ROW ANALYSIS
Apopsum<-lapply(Anum, function(df){
  df<-df[,6:9]
  popA<-sum(df$pop[df$iso3=="AUS"])
  popOB<-sum(df$pop[df$iso3!="AUS"])
  medA<-sum(df$med[df$iso3=="AUS"]) 
  medOB<-sum(df$med[df$iso!="AUS"]) 
  popAnL<-popA-medA
  popOBnL<-popOB-medOB
  df<-list(popAnL,medA,medOB,popOBnL)
})
Apopsum06<-unlist(Apopsum[[1]])
Apopsum11<-unlist(Apopsum[[2]])
Apopsum16<-unlist(Apopsum[[3]])



#Displaying it with a stacked barplot
Apopsum06bp<-Apopsum06[c(1,2,4,3)]
Apopsum06bp<-matrix(Apopsum06bp, ncol = 2, byrow = TRUE)
Apopsum11bp<-Apopsum11[c(1,2,4,3)]
Apopsum11bp<-matrix(Apopsum11bp, ncol = 2, byrow = TRUE)
Apopsum16bp<-Apopsum16[c(1,2,4,3)]
Apopsum16bp<-matrix(Apopsum16bp, ncol = 2, byrow = TRUE)

dev.off()
par(mfrow=c(1,3) ) # 1 row and 3 columns for plots
par(oma=c(0,0,2,0))
barplot(Apopsum06bp,
        names=c("No LTBI", "LTBI"),
        col=c("gray88", "gray73", "gray35", "gray45"),
        ylim = c(0, 21000000),
        ylab="Population number")
title("2006", line = 0)
barplot(Apopsum11bp,
        names=c("No LTBI", "LTBI"),
        col=c("gray88", "gray73", "gray35", "gray45"),
        ylim = c(0, 21000000),
        ylab="Population number")
title("2011", line = 0)
barplot(Apopsum16bp,
        names=c("No LTBI", "LTBI"),
        col=c("gray88", "gray73", "gray35", "gray45"),
        ylim = c(0, 21000000),
        ylab="Population number")
title("2016", line = 0)
title("Number of Australian residents estimated to have LTBI Using Houben and Dodd's 200 replicates", outer = TRUE)
Apopsum16bp

#Attempts to use a ggplot area chart to show change overtime
popsum<-lapply(Apopsum, function(df){
  popname<-c("Australian-born","Australian-born estimated to have LTBI",
             "Overseas-born estimated to have LTBI","Overseas-born")
  ndf <- data.frame(popname,pop=numeric(4))
  ndf$pop<-t(df)
  ndf
})
popsum06<-popsum[[1]]
popsum06$year<-2006
popsum11<-popsum[[2]]
popsum11$year<-2011
popsum16<-popsum[[3]]
popsum16$year<-2016
popsumt<-rbind(popsum06,popsum11,popsum16)
popsumt$year<-as.factor(popsumt$year)

#Reordering the levels
popsumt$popname=factor(popsumt$popname , 
                       levels=levels(popsumt$popname)[c(1,2,4,3)])

dev.off()
popsumt %>% ggplot(aes(x=year, y=pop)) + 
  #area chart with a black outline
  geom_area(aes(colour=popname,group=popname,fill=popname))+
  labs(x = "Year", y = "Population",fill="")+
  scale_y_continuous(breaks = seq(0, 5000000, 20000000))+
  scale_colour_discrete(guide = FALSE)+
  scale_x_discrete(labels = levels(popsumt$year))+
  #to turn the background white
  theme_bw() +
  #use specific colours
  scale_fill_manual(values=c("gray87", "gray70","gray30", "gray50"))+
  #to eliminate background, gridlines, and chart border
  theme(
    legend.title=element_text(size=10),
    plot.background = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank())+
  #to draw x and y axis line
  theme(axis.line = element_line(color = 'black'))



#DISPLAYING NUMBER OF AUST AND OVERSEASBORN OVERTIME - COLUMN ANALYSIS
Apopsum<-lapply(Anum, function(df){
  popA<-sum(df$pop[df$iso3=="AUS"])
  popOB<-sum(df$pop[df$iso3!="AUS"])
  nmA<-df[df$iso3=="AUS",]
  nmOB<-df[df$iso3!="AUS",]
  sumALTBI<-colSums(nmA[,16:215])
  sumOBLTBI<-colSums(nmOB[,16:215])
  medA<-median(sumALTBI) 
  medOB<-median(sumOBLTBI) 
  popAnL<-popA-medA
  popOBnL<-popOB-medOB
  df<-list(popAnL,medA,medOB,popOBnL)
})

#Displaying it with a stacked barplot
Apopsum06bp<-Apopsum06[c(1,2,4,3)]
Apopsum06bp<-matrix(Apopsum06bp, ncol = 2, byrow = TRUE)
Apopsum11bp<-Apopsum11[c(1,2,4,3)]
Apopsum11bp<-matrix(Apopsum11bp, ncol = 2, byrow = TRUE)
Apopsum16bp<-Apopsum16[c(1,2,4,3)]
Apopsum16bp<-matrix(Apopsum16bp, ncol = 2, byrow = TRUE)

dev.off()
par(mfrow=c(1,3),cex = 1, cex.main = 1 ) # 1 row and 3 columns for plots
par(oma=c(2,0,2,0))#the first figure creates space under figures for legend
barplot(Apopsum06bp,
        names=c("No LTBI", "LTBI"),
        col=c("gray88", "gray73", "gray35", "gray45"),
        ylim = c(0, 21000000),
        ylab="Population number")
title("2006", line = 0)
barplot(Apopsum11bp,
        names=c("No LTBI", "LTBI"),
        col=c("gray88", "gray73", "gray35", "gray45"),
        ylim = c(0, 21000000),
        ylab="Population number")
title("2011", line = 0)
barplot(Apopsum16bp,
        names=c("No LTBI", "LTBI"),
        col=c("gray88", "gray73", "gray35", "gray45"),
        ylim = c(0, 21000000),
        ylab="Population number")

title("2016", line = 0)
title("Number of Australian residents estimated to have LTBI using Houben and Dodd's 200 replicates",
      cex=3, outer = TRUE)
par(fig = c(0, 1, 0, 1), oma = c(0, 0, 0, 0), mar = c(0, 0, 0, 0), new = TRUE)
plot(0, 0, type = "n", bty = "n", xaxt = "n", yaxt = "n")
legend("bottom", c("Australian born", "Overseasborn"), 
       fill=c("gray88", "gray73"), xpd=TRUE, cex=1, 
       bty = "n", horiz = TRUE) # adds another plot space and legend below




#SUMMING ACROSS AGEGROUPS - COLUMN ANALYSIS

Anumag<-lapply(Anum, function(df){
  df$id<-NULL
  df$yob<-NULL
  df$iso3<-NULL
  df<-aggregate(df[,5:205], by=list(agegroup=df$agegroup),sum)
  df
})

#Reordering the rows 
x <- c("0-9", "10-19", "20-29", "30-39", "40-49","50-59","60-69","70-79","80-89","90-99","100+")
Anumag<-lapply(Anumag, function(df){
  df<-df %>% slice(match(x, agegroup))
  df<-df[,3:202] 
  rownames(df) <- agegroup #Replacing rownames to become column names
  df<-t(df) #Transposing the plot so I can plot the data using matplot
  df
})

Anumag06<-Anumag[[1]]
Anumag11<-Anumag[[2]]
Anumag16<-Anumag[[3]]

dev.off()
par(mfrow=c(1,3),cex = 1, cex.main = 1 ) # 1 row and 3 columns for plots
par(oma=c(2,2,2,0))#the first figure creates space under figures for legend
plot(x,y,xaxt="n",main="", xlab ="")
axis(1, at=1:40, labels=categories, las = 2, cex.axis = 0.8)
boxplot(Anumag06,
        col=(c("gray88")),
        ylim = c(0, 1000000), las=2)
mtext(side = 2, text = "Number with LTBI", line = 4)
mtext(side = 1, text = "Age-group (years)", line = 4)
title("2006", line = 1)
boxplot(Anumag11,
        col=(c("gray88")),
        ylim = c(0, 1000000), las=2)
mtext(side = 2, text = "Number with LTBI", line = 4)
mtext(side = 1, text = "Age-group (years)", line = 4)
title("2011", line = 1)
boxplot(Anumag16,
        col=(c("gray88")),
        ylim = c(0, 1000000), las=2)
mtext(side = 2, text = "Number with LTBI", line = 4)
mtext(side = 1, text = "Age-group (years)", line = 4)
title("2016", line = 1)
title("Number of Australian residents estimated to have LTBI using Houben and Dodd's 200 replicates",
      cex=3, outer = TRUE)



boxplot(Anumag06,
        col=(c("gray88")),
        ylim = c(0, 100), las=2,
        ylab="Percentage with LTBI")



#Creating percentage of pop with LTBI by agegroup
agegroup <-  c("0-9", "10-19", "20-29", "30-39", "40-49","50-59","60-69","70-79","80-89","90-99","100+")
Anumagp<-lapply(Anumag, function(df){
  df<-sapply(df[3:202],function(v) {
    (v/df$pop)*100
  })
  rownames(df) <- agegroup #Replacing rownames to become column names
  df<-t(df) #Transposing the plot so I can plot the data using matplot
  df
})

Anumagp06<-Anumagp[[1]]
Anumagp11<-Anumagp[[2]]
Anumagp16<-Anumagp[[3]]

dev.off()
par(mfrow=c(1,3),cex = 1, cex.main = 1 ) # 1 row and 3 columns for plots
par(oma=c(2,0,2,0))#the first figure creates space under figures for legend
plot(x,y,xaxt="n",main="", xlab ="")
axis(1, at=1:40, labels=categories, las = 2, cex.axis = 0.8)
boxplot(Anumagp06,
        col=(c("gray88")),
        ylim = c(0, 100), las=2,
        ylab="Percentage with LTBI")
mtext(side = 1, text = "Age-group (years)", line = 4)
title("2006", line = 1)
boxplot(Anumagp11,
        col=(c("gray88")),
        ylim = c(0, 100), las=2, 
        ylab="Percentage with LTBI")
mtext(side = 1, text = "Age-group (years)", line = 4)
title("2011", line = 1)
boxplot(Anumagp16,
        col=(c("gray88")),
        ylim = c(0, 100), las=2,
        ylab="Percentage with LTBI")
mtext(side = 1, text = "Age-group (years)", line = 4)
title("2016", line = 1)
title("Percentage of Australian residents estimated to have LTBI using Houben and Dodd's 200 replicates",
      cex=3, outer = TRUE)

dev.off()



